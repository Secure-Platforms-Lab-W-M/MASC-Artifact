{"findings": [{"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt OtrKeyManagerImpl.java:[lines 30-107] \nIn class net.java.otr4j.OtrKeyManagerImpl$DefaultPropertiesStore \nIn method net.java.otr4j.OtrKeyManagerImpl$DefaultPropertiesStore.getConfigurationFile() \nAt OtrKeyManagerImpl.java:[line 50] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/otr4j/OtrKeyManagerImpl$DefaultPropertiesStore.filepath \nAt OtrKeyManagerImpl.java:[line 50].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/40f0b4253c3b1ffc60f09340c360f1ac", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt OtrKeyManagerImpl.java:[lines 30-107] \nIn class net.java.otr4j.OtrKeyManagerImpl$DefaultPropertiesStore \nIn method net.java.otr4j.OtrKeyManagerImpl$DefaultPropertiesStore.getConfigurationFile() \nAt OtrKeyManagerImpl.java:[line 50] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/otr4j/OtrKeyManagerImpl$DefaultPropertiesStore.filepath \nAt OtrKeyManagerImpl.java:[line 50].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/otr4j/OtrKeyManagerImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 50, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "            File configFile = new File(filepath);\n", "snippetText": "        {\n            File configFile = new File(filepath);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API SHA-1 (SHA-1) is not a recommended cryptographic hash function \nAt OtrCryptoEngineImpl.java:[lines 31-342] \nIn class net.java.otr4j.crypto.OtrCryptoEngineImpl \nIn method net.java.otr4j.crypto.OtrCryptoEngineImpl.sha1Hash(byte[]) \nAt OtrCryptoEngineImpl.java:[line 153] \nValue SHA-1.", "description": "This API SHA-1 (SHA-1) is not a recommended cryptographic hash function .", "internal_id": "WEAK_MESSAGE_DIGEST_SHA1/4ad93f9382f51ced4bf939e9fd289333", "severity": "moderate", "owasp_category": "", "category": "WEAK MESSAGE DIGEST SHA1", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API SHA-1 (SHA-1) is not a recommended cryptographic hash function \nAt OtrCryptoEngineImpl.java:[lines 31-342] \nIn class net.java.otr4j.crypto.OtrCryptoEngineImpl \nIn method net.java.otr4j.crypto.OtrCryptoEngineImpl.sha1Hash(byte[]) \nAt OtrCryptoEngineImpl.java:[line 153] \nValue SHA-1.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/otr4j/crypto/OtrCryptoEngineImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 153, "ruleId": "WEAK_MESSAGE_DIGEST_SHA1", "ruleName": "WEAK MESSAGE DIGEST SHA1", "contextText": "            MessageDigest sha256 = MessageDigest.getInstance(\"SHA-1\");\n", "snippetText": "        try {\n            MessageDigest sha256 = MessageDigest.getInstance(\"SHA-1\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This random generator (java.util.Random) is predictable \nAt AuthContextImpl.java:[lines 32-792] \nIn class net.java.otr4j.session.AuthContextImpl \nIn method net.java.otr4j.session.AuthContextImpl.getR() \nAt AuthContextImpl.java:[line 218] \nValue java.util.Random.", "description": "This random generator (java.util.Random) is predictable .", "internal_id": "PREDICTABLE_RANDOM/18abf94fed118b633915e37f9abb4b68", "severity": "moderate", "owasp_category": "", "category": "Predictable Random", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This random generator (java.util.Random) is predictable \nAt AuthContextImpl.java:[lines 32-792] \nIn class net.java.otr4j.session.AuthContextImpl \nIn method net.java.otr4j.session.AuthContextImpl.getR() \nAt AuthContextImpl.java:[line 218] \nValue java.util.Random.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/otr4j/session/AuthContextImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 218, "ruleId": "PREDICTABLE_RANDOM", "ruleName": "Predictable Random", "contextText": "            new Random().nextBytes(r);\n", "snippetText": "            r = new byte[OtrCryptoEngine.AES_KEY_BYTE_LENGTH];\n            new Random().nextBytes(r);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "Unsafe comparison of hash that are susceptible to timing attack \nAt AuthContextImpl.java:[lines 32-792] \nIn class net.java.otr4j.session.AuthContextImpl \nIn method net.java.otr4j.session.AuthContextImpl.handleRevealSignatureMessage(RevealSignatureMessage) \nAt AuthContextImpl.java:[line 579] \nSink method java/util/Arrays.equals([B[B)Z \nSink parameter 0 \nUnknown source net/java/otr4j/session/AuthContextImpl.getRemoteDHPublicKeyHash()[B \nUnknown source net/java/otr4j/session/AuthContextImpl.remoteDHPublicKeyHash \nAt AuthContextImpl.java:[line 261] \nAt AuthContextImpl.java:[line 579].", "description": "Unsafe comparison of hash that are susceptible to timing attack .", "internal_id": "UNSAFE_HASH_EQUALS/2d83c8cc5b6af1b360b4ccc02589d875", "severity": "moderate", "owasp_category": "", "category": "UNSAFE HASH EQUALS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Unsafe comparison of hash that are susceptible to timing attack \nAt AuthContextImpl.java:[lines 32-792] \nIn class net.java.otr4j.session.AuthContextImpl \nIn method net.java.otr4j.session.AuthContextImpl.handleRevealSignatureMessage(RevealSignatureMessage) \nAt AuthContextImpl.java:[line 579] \nSink method java/util/Arrays.equals([B[B)Z \nSink parameter 0 \nUnknown source net/java/otr4j/session/AuthContextImpl.getRemoteDHPublicKeyHash()[B \nUnknown source net/java/otr4j/session/AuthContextImpl.remoteDHPublicKeyHash \nAt AuthContextImpl.java:[line 261] \nAt AuthContextImpl.java:[line 579].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/otr4j/session/AuthContextImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 579, "ruleId": "UNSAFE_HASH_EQUALS", "ruleName": "UNSAFE HASH EQUALS", "contextText": "                if (!Arrays.equals(remoteDHPublicKeyHash, this.getRemoteDHPublicKeyHash())) {\n", "snippetText": "                byte[] remoteDHPublicKeyHash = otrCryptoEngine.sha256Hash(remoteDHPublicKeyDecrypted);\n                if (!Arrays.equals(remoteDHPublicKeyHash, this.getRemoteDHPublicKeyHash())) {\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This random generator (java.util.Random) is predictable \nAt InstanceTag.java:[lines 11-89] \nIn class net.java.otr4j.session.InstanceTag \nIn method net.java.otr4j.session.InstanceTag.<static initializer for InstanceTag>() \nAt InstanceTag.java:[line 11] \nValue java.util.Random.", "description": "This random generator (java.util.Random) is predictable .", "internal_id": "PREDICTABLE_RANDOM/ca4953b769b37e37605b5a6164b0e44a", "severity": "moderate", "owasp_category": "", "category": "Predictable Random", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This random generator (java.util.Random) is predictable \nAt InstanceTag.java:[lines 11-89] \nIn class net.java.otr4j.session.InstanceTag \nIn method net.java.otr4j.session.InstanceTag.<static initializer for InstanceTag>() \nAt InstanceTag.java:[line 11] \nValue java.util.Random.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/otr4j/session/InstanceTag.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 11, "ruleId": "PREDICTABLE_RANDOM", "ruleName": "Predictable Random", "contextText": "\tprivate static final Random RANDOM = new Random();\n", "snippetText": "\n\tprivate static final Random RANDOM = new Random();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt CertificateServiceImpl.java:[lines 68-1085] \nIn class net.java.sip.communicator.impl.certificate.CertificateServiceImpl \nIn method net.java.sip.communicator.impl.certificate.CertificateServiceImpl.loadKeyStore(CertificateConfigEntry) \nAt CertificateServiceImpl.java:[line 394] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/certificate/CertificateConfigEntry.getKeyStore()Ljava/lang/String; \nUnknown source net/java/sip/communicator/service/certificate/CertificateConfigEntry.keyStore \nAt CertificateServiceImpl.java:[line 394] \nAt CertificateConfigEntry.java:[line 180].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/981109ec4f1bef01f62d28a753e64af0", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt CertificateServiceImpl.java:[lines 68-1085] \nIn class net.java.sip.communicator.impl.certificate.CertificateServiceImpl \nIn method net.java.sip.communicator.impl.certificate.CertificateServiceImpl.loadKeyStore(CertificateConfigEntry) \nAt CertificateServiceImpl.java:[line 394] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/certificate/CertificateConfigEntry.getKeyStore()Ljava/lang/String; \nUnknown source net/java/sip/communicator/service/certificate/CertificateConfigEntry.keyStore \nAt CertificateServiceImpl.java:[line 394] \nAt CertificateConfigEntry.java:[line 180].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/certificate/CertificateServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 394, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        final File f = new File(entry.getKeyStore());\n", "snippetText": "    {\n        final File f = new File(entry.getKeyStore());\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This random generator (java.util.Random) is predictable \nAt CertificateServiceImpl.java:[lines 68-1085] \nIn class net.java.sip.communicator.impl.certificate.CertificateServiceImpl \nIn method net.java.sip.communicator.impl.certificate.CertificateServiceImpl.setClientAuthCertificateConfig(CertificateConfigEntry) \nAt CertificateServiceImpl.java:[line 274] \nValue java.util.Random.", "description": "This random generator (java.util.Random) is predictable .", "internal_id": "PREDICTABLE_RANDOM/8056f516189085f57e2abab1117e6950", "severity": "moderate", "owasp_category": "", "category": "Predictable Random", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This random generator (java.util.Random) is predictable \nAt CertificateServiceImpl.java:[lines 68-1085] \nIn class net.java.sip.communicator.impl.certificate.CertificateServiceImpl \nIn method net.java.sip.communicator.impl.certificate.CertificateServiceImpl.setClientAuthCertificateConfig(CertificateConfigEntry) \nAt CertificateServiceImpl.java:[line 274] \nValue java.util.Random.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/certificate/CertificateServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 274, "ruleId": "PREDICTABLE_RANDOM", "ruleName": "Predictable Random", "contextText": "            e.setId(\"conf\" + Math.abs(new Random().nextInt()));\n", "snippetText": "        if (e.getId() == null)\n            e.setId(\"conf\" + Math.abs(new Random().nextInt()));\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt CertificateServiceImpl.java:[lines 509-526] \nIn class net.java.sip.communicator.impl.certificate.CertificateServiceImpl$2 \nIn method net.java.sip.communicator.impl.certificate.CertificateServiceImpl$2.checkClientTrusted(X509Certificate[], String) \nAt CertificateServiceImpl.java:[line 515].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/da1eeda6d53aec9102b1366fa79d42cd", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt CertificateServiceImpl.java:[lines 509-526] \nIn class net.java.sip.communicator.impl.certificate.CertificateServiceImpl$2 \nIn method net.java.sip.communicator.impl.certificate.CertificateServiceImpl$2.checkClientTrusted(X509Certificate[], String) \nAt CertificateServiceImpl.java:[line 515].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/certificate/CertificateServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 515, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "\t\t\t}\n", "snippetText": "\t\t\t\t\n\t\t\t}\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt CertificateServiceImpl.java:[lines 509-526] \nIn class net.java.sip.communicator.impl.certificate.CertificateServiceImpl$2 \nIn method net.java.sip.communicator.impl.certificate.CertificateServiceImpl$2.checkServerTrusted(X509Certificate[], String) \nAt CertificateServiceImpl.java:[line 521].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/2b5035c5db8fc27eb63355207918e517", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt CertificateServiceImpl.java:[lines 509-526] \nIn class net.java.sip.communicator.impl.certificate.CertificateServiceImpl$2 \nIn method net.java.sip.communicator.impl.certificate.CertificateServiceImpl$2.checkServerTrusted(X509Certificate[], String) \nAt CertificateServiceImpl.java:[line 521].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/certificate/CertificateServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 521, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "\t\t\t}\n", "snippetText": "\t\t\t\t\n\t\t\t}\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt CertificateServiceImpl.java:[lines 509-526] \nIn class net.java.sip.communicator.impl.certificate.CertificateServiceImpl$2 \nIn method net.java.sip.communicator.impl.certificate.CertificateServiceImpl$2.getAcceptedIssuers() \nAt CertificateServiceImpl.java:[line 526].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/c474276d1ea0e3e5909c4760770e6aed", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt CertificateServiceImpl.java:[lines 509-526] \nIn class net.java.sip.communicator.impl.certificate.CertificateServiceImpl$2 \nIn method net.java.sip.communicator.impl.certificate.CertificateServiceImpl$2.getAcceptedIssuers() \nAt CertificateServiceImpl.java:[line 526].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/certificate/CertificateServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 526, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "\t\t\t\treturn null;\n", "snippetText": "\t\t\t\t// TODO Auto-generated method stub\n\t\t\t\treturn null;\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt CertificateServiceImpl.java:[lines 531-577] \nIn class net.java.sip.communicator.impl.certificate.CertificateServiceImpl$3 \nIn method net.java.sip.communicator.impl.certificate.CertificateServiceImpl$3.checkClientTrusted(X509Certificate[], String) \nAt CertificateServiceImpl.java:[line 537].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/a35b026515addc9ab2cbb1a1cbd5f6ff", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt CertificateServiceImpl.java:[lines 531-577] \nIn class net.java.sip.communicator.impl.certificate.CertificateServiceImpl$3 \nIn method net.java.sip.communicator.impl.certificate.CertificateServiceImpl$3.checkClientTrusted(X509Certificate[], String) \nAt CertificateServiceImpl.java:[line 537].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/certificate/CertificateServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 537, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "\t\t\t}\n", "snippetText": "\t\t\t\t\n\t\t\t}\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt CertificateServiceImpl.java:[lines 531-577] \nIn class net.java.sip.communicator.impl.certificate.CertificateServiceImpl$3 \nIn method net.java.sip.communicator.impl.certificate.CertificateServiceImpl$3.checkClientTrusted(X509Certificate[], String, Socket) \nAt CertificateServiceImpl.java:[line 556].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/c376eca49a2f74925d5456621e073d66", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt CertificateServiceImpl.java:[lines 531-577] \nIn class net.java.sip.communicator.impl.certificate.CertificateServiceImpl$3 \nIn method net.java.sip.communicator.impl.certificate.CertificateServiceImpl$3.checkClientTrusted(X509Certificate[], String, Socket) \nAt CertificateServiceImpl.java:[line 556].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/certificate/CertificateServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 556, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "\t\t\t}\n", "snippetText": "\t\t\t\t\n\t\t\t}\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt CertificateServiceImpl.java:[lines 531-577] \nIn class net.java.sip.communicator.impl.certificate.CertificateServiceImpl$3 \nIn method net.java.sip.communicator.impl.certificate.CertificateServiceImpl$3.checkClientTrusted(X509Certificate[], String, SSLEngine) \nAt CertificateServiceImpl.java:[line 570].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/2bc6ddfb4d04d908e9e0c62c73f47234", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt CertificateServiceImpl.java:[lines 531-577] \nIn class net.java.sip.communicator.impl.certificate.CertificateServiceImpl$3 \nIn method net.java.sip.communicator.impl.certificate.CertificateServiceImpl$3.checkClientTrusted(X509Certificate[], String, SSLEngine) \nAt CertificateServiceImpl.java:[line 570].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/certificate/CertificateServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 570, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "\t\t\t}\n", "snippetText": "\t\t\t\t\n\t\t\t}\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt CertificateServiceImpl.java:[lines 531-577] \nIn class net.java.sip.communicator.impl.certificate.CertificateServiceImpl$3 \nIn method net.java.sip.communicator.impl.certificate.CertificateServiceImpl$3.checkServerTrusted(X509Certificate[], String) \nAt CertificateServiceImpl.java:[line 543].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/2a6840fe350d142e4d73f1f763625f88", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt CertificateServiceImpl.java:[lines 531-577] \nIn class net.java.sip.communicator.impl.certificate.CertificateServiceImpl$3 \nIn method net.java.sip.communicator.impl.certificate.CertificateServiceImpl$3.checkServerTrusted(X509Certificate[], String) \nAt CertificateServiceImpl.java:[line 543].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/certificate/CertificateServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 543, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "\t\t\t}\n", "snippetText": "\t\t\t\t\n\t\t\t}\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt CertificateServiceImpl.java:[lines 531-577] \nIn class net.java.sip.communicator.impl.certificate.CertificateServiceImpl$3 \nIn method net.java.sip.communicator.impl.certificate.CertificateServiceImpl$3.checkServerTrusted(X509Certificate[], String, Socket) \nAt CertificateServiceImpl.java:[line 563].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/51d65fb4c7ebd1743440d236193afa64", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt CertificateServiceImpl.java:[lines 531-577] \nIn class net.java.sip.communicator.impl.certificate.CertificateServiceImpl$3 \nIn method net.java.sip.communicator.impl.certificate.CertificateServiceImpl$3.checkServerTrusted(X509Certificate[], String, Socket) \nAt CertificateServiceImpl.java:[line 563].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/certificate/CertificateServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 563, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "\t\t\t}\n", "snippetText": "\t\t\t\t\n\t\t\t}\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt CertificateServiceImpl.java:[lines 531-577] \nIn class net.java.sip.communicator.impl.certificate.CertificateServiceImpl$3 \nIn method net.java.sip.communicator.impl.certificate.CertificateServiceImpl$3.checkServerTrusted(X509Certificate[], String, SSLEngine) \nAt CertificateServiceImpl.java:[line 577].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/431cf4d2bd9354ddc4dd422d2635188a", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt CertificateServiceImpl.java:[lines 531-577] \nIn class net.java.sip.communicator.impl.certificate.CertificateServiceImpl$3 \nIn method net.java.sip.communicator.impl.certificate.CertificateServiceImpl$3.checkServerTrusted(X509Certificate[], String, SSLEngine) \nAt CertificateServiceImpl.java:[line 577].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/certificate/CertificateServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 577, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "\t\t\t}\n", "snippetText": "\t\t\t\t\n\t\t\t}\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt CertificateServiceImpl.java:[lines 531-577] \nIn class net.java.sip.communicator.impl.certificate.CertificateServiceImpl$3 \nIn method net.java.sip.communicator.impl.certificate.CertificateServiceImpl$3.getAcceptedIssuers() \nAt CertificateServiceImpl.java:[line 548].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/049cbf4108caa221e93aab5f463ad836", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt CertificateServiceImpl.java:[lines 531-577] \nIn class net.java.sip.communicator.impl.certificate.CertificateServiceImpl$3 \nIn method net.java.sip.communicator.impl.certificate.CertificateServiceImpl$3.getAcceptedIssuers() \nAt CertificateServiceImpl.java:[line 548].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/certificate/CertificateServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 548, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "\t\t\t\treturn null;\n", "snippetText": "\t\t\t\t// TODO Auto-generated method stub\n\t\t\t\treturn null;\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "The cipher does not provide data integrity \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 89].", "description": "The cipher does not provide data integrity .", "internal_id": "CIPHER_INTEGRITY/f6e29f5a8603346eda9420a9f4856f22", "severity": "critical", "owasp_category": "", "category": "Cipher Integrity", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The cipher does not provide data integrity \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 89].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/credentialsstorage/AESCrypto.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 89, "ruleId": "CIPHER_INTEGRITY", "ruleName": "Cipher Integrity", "contextText": "                decryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n", "snippetText": "            for (int i = 0; i < KEY_LENGTHS.length; i++) {\n                decryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "The cipher does not provide data integrity \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 90].", "description": "The cipher does not provide data integrity .", "internal_id": "CIPHER_INTEGRITY/428bcf0cde4748feaedc253693fc037d", "severity": "critical", "owasp_category": "", "category": "Cipher Integrity", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The cipher does not provide data integrity \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 90].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/credentialsstorage/AESCrypto.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 90, "ruleId": "CIPHER_INTEGRITY", "ruleName": "Cipher Integrity", "contextText": "                encryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n", "snippetText": "                decryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n                encryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 89].", "description": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data .", "internal_id": "ECB_MODE/7e92a1514164517498e9289791658e6b", "severity": "critical", "owasp_category": "", "category": "Ecb Mode", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 89].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/credentialsstorage/AESCrypto.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 89, "ruleId": "ECB_MODE", "ruleName": "Ecb Mode", "contextText": "                decryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n", "snippetText": "            for (int i = 0; i < KEY_LENGTHS.length; i++) {\n                decryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 90].", "description": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data .", "internal_id": "ECB_MODE/3a890f325e5340dea4c2cad98f7549c7", "severity": "critical", "owasp_category": "", "category": "Ecb Mode", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 90].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/credentialsstorage/AESCrypto.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 90, "ruleId": "ECB_MODE", "ruleName": "Ecb Mode", "contextText": "                encryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n", "snippetText": "                decryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n                encryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HistoryImpl.java:[lines 50-371] \nIn class net.java.sip.communicator.impl.history.HistoryImpl \nIn method net.java.sip.communicator.impl.history.HistoryImpl.writeFile(String) \nAt HistoryImpl.java:[line 195] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/history/HistoryImpl.writeFile(Ljava/lang/String;)V parameter 0 \nMethod usage not detected.", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/9c7344f66374b3f46250e51797bd7d0a", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HistoryImpl.java:[lines 50-371] \nIn class net.java.sip.communicator.impl.history.HistoryImpl \nIn method net.java.sip.communicator.impl.history.HistoryImpl.writeFile(String) \nAt HistoryImpl.java:[line 195] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/history/HistoryImpl.writeFile(Ljava/lang/String;)V parameter 0 \nMethod usage not detected.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/history/HistoryImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 195, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        File file = new File(this.directory, filename);\n", "snippetText": "    {\n        File file = new File(this.directory, filename);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HistoryImpl.java:[lines 50-371] \nIn class net.java.sip.communicator.impl.history.HistoryImpl \nIn method net.java.sip.communicator.impl.history.HistoryImpl.writeFile(String, Document) \nAt HistoryImpl.java:[line 217] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/history/HistoryImpl.writeFile(Ljava/lang/String;Lorg/w3c/dom/Document;)V parameter 1 \nMethod usage not detected.", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/a4bb650108a7947ae3ab2cd3edc566bb", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HistoryImpl.java:[lines 50-371] \nIn class net.java.sip.communicator.impl.history.HistoryImpl \nIn method net.java.sip.communicator.impl.history.HistoryImpl.writeFile(String, Document) \nAt HistoryImpl.java:[line 217] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/history/HistoryImpl.writeFile(Ljava/lang/String;Lorg/w3c/dom/Document;)V parameter 1 \nMethod usage not detected.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/history/HistoryImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 217, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        File file = new File(this.directory, filename);\n", "snippetText": "    {\n        File file = new File(this.directory, filename);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.createHistoryDirectories(HistoryID) \nAt HistoryServiceImpl.java:[line 248] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/history/HistoryID.getID()[Ljava/lang/String; \nUnknown source net/java/sip/communicator/service/history/HistoryID.id \nAt HistoryServiceImpl.java:[line 239] \nAt HistoryID.java:[line 87].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/67b3a6627f1a7716b99acdc4a341c003", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.createHistoryDirectories(HistoryID) \nAt HistoryServiceImpl.java:[line 248] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/history/HistoryID.getID()[Ljava/lang/String; \nUnknown source net/java/sip/communicator/service/history/HistoryID.id \nAt HistoryServiceImpl.java:[line 239] \nAt HistoryID.java:[line 87].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/history/HistoryServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 248, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "            dir = new File(dir, s);\n", "snippetText": "        for (String s : idComponents) {\n            dir = new File(dir, s);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.getDirForHistory(HistoryID) \nAt HistoryServiceImpl.java:[line 465] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/history/HistoryID.getID()[Ljava/lang/String; \nUnknown source net/java/sip/communicator/service/history/HistoryID.id \nAt HistoryServiceImpl.java:[line 445] \nAt HistoryServiceImpl.java:[line 450] \nAt HistoryServiceImpl.java:[line 465] \nAt HistoryID.java:[line 87].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/84b456584f115d25423a610c92c967a0", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.getDirForHistory(HistoryID) \nAt HistoryServiceImpl.java:[line 465] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/history/HistoryID.getID()[Ljava/lang/String; \nUnknown source net/java/sip/communicator/service/history/HistoryID.id \nAt HistoryServiceImpl.java:[line 445] \nAt HistoryServiceImpl.java:[line 450] \nAt HistoryServiceImpl.java:[line 465] \nAt HistoryID.java:[line 87].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/history/HistoryServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 465, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        return new File(histDir, dirName.toString());\n", "snippetText": "\n        return new File(histDir, dirName.toString());\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.getExistingHistories(String[]) \nAt HistoryServiceImpl.java:[line 505] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/history/HistoryServiceImpl.getExistingHistories([Ljava/lang/String;)Ljava/util/List; parameter 0 \nMethod usage not detected \nAt HistoryServiceImpl.java:[line 503] \nAt HistoryServiceImpl.java:[line 505].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/61b549bdd1a031a2884939e703211e65", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.getExistingHistories(String[]) \nAt HistoryServiceImpl.java:[line 505] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/history/HistoryServiceImpl.getExistingHistories([Ljava/lang/String;)Ljava/util/List; parameter 0 \nMethod usage not detected \nAt HistoryServiceImpl.java:[line 503] \nAt HistoryServiceImpl.java:[line 505].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/history/HistoryServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 505, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        File srcFolder = new File(histDir, folderPath.toString());\n", "snippetText": "\n        File srcFolder = new File(histDir, folderPath.toString());\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.parse(ByteArrayInputStream) \nAt HistoryServiceImpl.java:[line 220] \nValue DocumentBuilder.parse(...).", "description": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks .", "internal_id": "XXE_DOCUMENT/87ce730e2de6368f3b4c01bdcd16c9d0", "severity": "moderate", "owasp_category": "", "category": "Xxe Document", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.parse(ByteArrayInputStream) \nAt HistoryServiceImpl.java:[line 220] \nValue DocumentBuilder.parse(...).", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/history/HistoryServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 220, "ruleId": "XXE_DOCUMENT", "ruleName": "Xxe Document", "contextText": "        return builder.parse(in);\n", "snippetText": "    {\n        return builder.parse(in);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.parse(File) \nAt HistoryServiceImpl.java:[line 203] \nValue DocumentBuilder.parse(...).", "description": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks .", "internal_id": "XXE_DOCUMENT/67878c3216da28d248691b4f1e808267", "severity": "moderate", "owasp_category": "", "category": "Xxe Document", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.parse(File) \nAt HistoryServiceImpl.java:[line 203] \nValue DocumentBuilder.parse(...).", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/history/HistoryServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 203, "ruleId": "XXE_DOCUMENT", "ruleName": "Xxe Document", "contextText": "        Document doc = builder.parse(fis);\n", "snippetText": "        FileInputStream fis = new FileInputStream(file);\n        Document doc = builder.parse(fis);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.createFileRecordFromProperties(Map, Object) \nAt MessageHistoryServiceImpl.java:[line 1196] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.createFileRecordFromProperties(Ljava/util/Map;Ljava/lang/Object;)Lnet/java/sip/communicator/service/filehistory/FileRecord; parameter 1 \nUnknown source java/util/Map.get(Ljava/lang/Object;)Ljava/lang/Object; \nAt MessageHistoryServiceImpl.java:[line 1062] \nAt MessageHistoryServiceImpl.java:[line 1071] \nAt MessageHistoryServiceImpl.java:[line 1103] \nAt MessageHistoryServiceImpl.java:[line 1122] \nAt MessageHistoryServiceImpl.java:[line 1125] \nAt MessageHistoryServiceImpl.java:[line 1193].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/ce180a2c7c1c7c8c635234d8c469b7ca", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.createFileRecordFromProperties(Map, Object) \nAt MessageHistoryServiceImpl.java:[line 1196] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.createFileRecordFromProperties(Ljava/util/Map;Ljava/lang/Object;)Lnet/java/sip/communicator/service/filehistory/FileRecord; parameter 1 \nUnknown source java/util/Map.get(Ljava/lang/Object;)Ljava/lang/Object; \nAt MessageHistoryServiceImpl.java:[line 1062] \nAt MessageHistoryServiceImpl.java:[line 1071] \nAt MessageHistoryServiceImpl.java:[line 1103] \nAt MessageHistoryServiceImpl.java:[line 1122] \nAt MessageHistoryServiceImpl.java:[line 1125] \nAt MessageHistoryServiceImpl.java:[line 1193].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1196, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        return new FileRecord(uuid, entityJid, dir, date, new File(file), encType, status);\n", "snippetText": "        int status = Integer.parseInt(mProperties.get(ChatMessage.STATUS));\n        return new FileRecord(uuid, entityJid, dir, date, new File(file), encType, status);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByKeyword(MetaContact, String, boolean) \nAt MessageHistoryServiceImpl.java:[line 1720] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByKeyword(Lnet/java/sip/communicator/service/contactlist/MetaContact;Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 434] \nAt MessageHistoryServiceImpl.java:[line 1712] \nAt MessageHistoryServiceImpl.java:[line 1720].", "description": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) .", "internal_id": "SQL_INJECTION_ANDROID/a1252b5040cc9260a9d30da0fbaec8e2", "severity": "moderate", "owasp_category": "", "category": "SQL INJECTION ANDROID", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByKeyword(MetaContact, String, boolean) \nAt MessageHistoryServiceImpl.java:[line 1720] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByKeyword(Lnet/java/sip/communicator/service/contactlist/MetaContact;Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 434] \nAt MessageHistoryServiceImpl.java:[line 1712] \nAt MessageHistoryServiceImpl.java:[line 1720].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1720, "ruleId": "SQL_INJECTION_ANDROID", "ruleName": "SQL INJECTION ANDROID", "contextText": "            Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n", "snippetText": "\n            Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByKeyword(ChatRoom, String, boolean) \nAt MessageHistoryServiceImpl.java:[line 1919] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByKeyword(Lnet/java/sip/communicator/service/protocol/ChatRoom;Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 1899] \nAt MessageHistoryServiceImpl.java:[line 1917] \nAt MessageHistoryServiceImpl.java:[line 1919].", "description": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) .", "internal_id": "SQL_INJECTION_ANDROID/5f403a95b31893109106b6ed68877d6d", "severity": "moderate", "owasp_category": "", "category": "SQL INJECTION ANDROID", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByKeyword(ChatRoom, String, boolean) \nAt MessageHistoryServiceImpl.java:[line 1919] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByKeyword(Lnet/java/sip/communicator/service/protocol/ChatRoom;Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 1899] \nAt MessageHistoryServiceImpl.java:[line 1917] \nAt MessageHistoryServiceImpl.java:[line 1919].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1919, "ruleId": "SQL_INJECTION_ANDROID", "ruleName": "SQL INJECTION ANDROID", "contextText": "        Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n", "snippetText": "\n        Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByKeywords(MetaContact, String[], boolean) \nAt MessageHistoryServiceImpl.java:[line 1755] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByKeywords(Lnet/java/sip/communicator/service/contactlist/MetaContact;[Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 447] \nAt MessageHistoryServiceImpl.java:[line 1745] \nAt MessageHistoryServiceImpl.java:[line 1747] \nAt MessageHistoryServiceImpl.java:[line 1755].", "description": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) .", "internal_id": "SQL_INJECTION_ANDROID/e4c4204f62d585fb403e00e0fdcc3ddc", "severity": "moderate", "owasp_category": "", "category": "SQL INJECTION ANDROID", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByKeywords(MetaContact, String[], boolean) \nAt MessageHistoryServiceImpl.java:[line 1755] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByKeywords(Lnet/java/sip/communicator/service/contactlist/MetaContact;[Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 447] \nAt MessageHistoryServiceImpl.java:[line 1745] \nAt MessageHistoryServiceImpl.java:[line 1747] \nAt MessageHistoryServiceImpl.java:[line 1755].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1755, "ruleId": "SQL_INJECTION_ANDROID", "ruleName": "SQL INJECTION ANDROID", "contextText": "            Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n", "snippetText": "\n            Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByKeywords(ChatRoom, String[], boolean) \nAt MessageHistoryServiceImpl.java:[line 1962] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByKeywords(Lnet/java/sip/communicator/service/protocol/ChatRoom;[Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 1938] \nAt MessageHistoryServiceImpl.java:[line 1958] \nAt MessageHistoryServiceImpl.java:[line 1960] \nAt MessageHistoryServiceImpl.java:[line 1962].", "description": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) .", "internal_id": "SQL_INJECTION_ANDROID/e218a29b29e1296d960f933e1ff73513", "severity": "moderate", "owasp_category": "", "category": "SQL INJECTION ANDROID", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByKeywords(ChatRoom, String[], boolean) \nAt MessageHistoryServiceImpl.java:[line 1962] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByKeywords(Lnet/java/sip/communicator/service/protocol/ChatRoom;[Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 1938] \nAt MessageHistoryServiceImpl.java:[line 1958] \nAt MessageHistoryServiceImpl.java:[line 1960] \nAt MessageHistoryServiceImpl.java:[line 1962].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1962, "ruleId": "SQL_INJECTION_ANDROID", "ruleName": "SQL INJECTION ANDROID", "contextText": "        Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n", "snippetText": "\n        Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByPeriod(MetaContact, Date, Date, String[], boolean) \nAt MessageHistoryServiceImpl.java:[line 1688] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByPeriod(Lnet/java/sip/communicator/service/contactlist/MetaContact;Ljava/util/Date;Ljava/util/Date;[Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 421] \nAt MessageHistoryServiceImpl.java:[line 1678] \nAt MessageHistoryServiceImpl.java:[line 1680] \nAt MessageHistoryServiceImpl.java:[line 1688].", "description": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) .", "internal_id": "SQL_INJECTION_ANDROID/aad90b77b9a8a352fd441726f60babf7", "severity": "moderate", "owasp_category": "", "category": "SQL INJECTION ANDROID", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByPeriod(MetaContact, Date, Date, String[], boolean) \nAt MessageHistoryServiceImpl.java:[line 1688] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByPeriod(Lnet/java/sip/communicator/service/contactlist/MetaContact;Ljava/util/Date;Ljava/util/Date;[Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 421] \nAt MessageHistoryServiceImpl.java:[line 1678] \nAt MessageHistoryServiceImpl.java:[line 1680] \nAt MessageHistoryServiceImpl.java:[line 1688].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1688, "ruleId": "SQL_INJECTION_ANDROID", "ruleName": "SQL INJECTION ANDROID", "contextText": "            Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n", "snippetText": "\n            Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByPeriod(ChatRoom, Date, Date, String[], boolean) \nAt MessageHistoryServiceImpl.java:[line 1880] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByPeriod(Lnet/java/sip/communicator/service/protocol/ChatRoom;Ljava/util/Date;Ljava/util/Date;[Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 1852] \nAt MessageHistoryServiceImpl.java:[line 1876] \nAt MessageHistoryServiceImpl.java:[line 1878] \nAt MessageHistoryServiceImpl.java:[line 1880].", "description": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) .", "internal_id": "SQL_INJECTION_ANDROID/5cde84dbd1c01c2abcee95b7d0559962", "severity": "moderate", "owasp_category": "", "category": "SQL INJECTION ANDROID", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByPeriod(ChatRoom, Date, Date, String[], boolean) \nAt MessageHistoryServiceImpl.java:[line 1880] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByPeriod(Lnet/java/sip/communicator/service/protocol/ChatRoom;Ljava/util/Date;Ljava/util/Date;[Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 1852] \nAt MessageHistoryServiceImpl.java:[line 1876] \nAt MessageHistoryServiceImpl.java:[line 1878] \nAt MessageHistoryServiceImpl.java:[line 1880].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1880, "ruleId": "SQL_INJECTION_ANDROID", "ruleName": "SQL INJECTION ANDROID", "contextText": "        Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n", "snippetText": "\n        Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findRecentMessagesPerContact(int, String, String, boolean) \nAt MessageHistoryServiceImpl.java:[line 694] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nAt MessageHistoryServiceImpl.java:[line 686] \nAt MessageHistoryServiceImpl.java:[line 687] \nAt MessageHistoryServiceImpl.java:[line 688].", "description": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) .", "internal_id": "SQL_INJECTION_ANDROID/65292fb1a97ee0f4f0f7e73d62acc0da", "severity": "moderate", "owasp_category": "", "category": "SQL INJECTION ANDROID", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findRecentMessagesPerContact(int, String, String, boolean) \nAt MessageHistoryServiceImpl.java:[line 694] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nAt MessageHistoryServiceImpl.java:[line 686] \nAt MessageHistoryServiceImpl.java:[line 687] \nAt MessageHistoryServiceImpl.java:[line 688].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 694, "ruleId": "SQL_INJECTION_ANDROID", "ruleName": "SQL INJECTION ANDROID", "contextText": "        Cursor cursor = mDB.query(ChatSession.TABLE_NAME, null, whereCondition, args, null,\n", "snippetText": "\n        Cursor cursor = mDB.query(ChatSession.TABLE_NAME, null, whereCondition, args, null,\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection \nAt CommandNotificationHandlerImpl.java:[lines 23-57] \nIn class net.java.sip.communicator.impl.notification.CommandNotificationHandlerImpl \nIn method net.java.sip.communicator.impl.notification.CommandNotificationHandlerImpl.execute(CommandNotificationAction, Map) \nAt CommandNotificationHandlerImpl.java:[line 53] \nSink method java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; \nSink parameter 0 \nUnknown source java/util/Map$Entry.getKey()Ljava/lang/Object; \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nUnknown source java/util/Map$Entry.getValue()Ljava/lang/Object; \nUnknown source net/java/sip/communicator/service/notification/CommandNotificationAction.getDescriptor()Ljava/lang/String; \nUnknown source net/java/sip/communicator/service/notification/CommandNotificationAction.commandDescriptor \nUnknown source net/java/sip/communicator/impl/notification/CommandNotificationHandlerImpl.execute(Lnet/java/sip/communicator/service/notification/CommandNotificationAction;Ljava/util/Map;)V parameter 0 \nUnknown source java/util/Map.entrySet()Ljava/util/Set; \nMethod usage not detected \nAt CommandNotificationHandlerImpl.java:[line 41] \nAt CommandNotificationHandlerImpl.java:[line 43] \nAt CommandNotificationHandlerImpl.java:[line 47] \nAt CommandNotificationHandlerImpl.java:[line 48] \nAt CommandNotificationAction.java:[line 36].", "description": "This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection .", "internal_id": "COMMAND_INJECTION/9ff5db99fa23394757ef1400563eae2d", "severity": "moderate", "owasp_category": "", "category": "Command Injection", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection \nAt CommandNotificationHandlerImpl.java:[lines 23-57] \nIn class net.java.sip.communicator.impl.notification.CommandNotificationHandlerImpl \nIn method net.java.sip.communicator.impl.notification.CommandNotificationHandlerImpl.execute(CommandNotificationAction, Map) \nAt CommandNotificationHandlerImpl.java:[line 53] \nSink method java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; \nSink parameter 0 \nUnknown source java/util/Map$Entry.getKey()Ljava/lang/Object; \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nUnknown source java/util/Map$Entry.getValue()Ljava/lang/Object; \nUnknown source net/java/sip/communicator/service/notification/CommandNotificationAction.getDescriptor()Ljava/lang/String; \nUnknown source net/java/sip/communicator/service/notification/CommandNotificationAction.commandDescriptor \nUnknown source net/java/sip/communicator/impl/notification/CommandNotificationHandlerImpl.execute(Lnet/java/sip/communicator/service/notification/CommandNotificationAction;Ljava/util/Map;)V parameter 0 \nUnknown source java/util/Map.entrySet()Ljava/util/Set; \nMethod usage not detected \nAt CommandNotificationHandlerImpl.java:[line 41] \nAt CommandNotificationHandlerImpl.java:[line 43] \nAt CommandNotificationHandlerImpl.java:[line 47] \nAt CommandNotificationHandlerImpl.java:[line 48] \nAt CommandNotificationAction.java:[line 36].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/notification/CommandNotificationHandlerImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 53, "ruleId": "COMMAND_INJECTION", "ruleName": "Command Injection", "contextText": "            Runtime.getRuntime().exec(actionDescriptor);\n", "snippetText": "        try {\n            Runtime.getRuntime().exec(actionDescriptor);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HttpFileDownloadJabberImpl.java:[lines 38-206] \nIn class net.java.sip.communicator.impl.protocol.jabber.HttpFileDownloadJabberImpl \nIn method new net.java.sip.communicator.impl.protocol.jabber.HttpFileDownloadJabberImpl(Contact, String, String, int) \nAt HttpFileDownloadJabberImpl.java:[line 81] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/protocol/jabber/HttpFileDownloadJabberImpl.mFileName \nAt HttpFileDownloadJabberImpl.java:[line 81].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/37441fff259cd0925974959387f3ce23", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HttpFileDownloadJabberImpl.java:[lines 38-206] \nIn class net.java.sip.communicator.impl.protocol.jabber.HttpFileDownloadJabberImpl \nIn method new net.java.sip.communicator.impl.protocol.jabber.HttpFileDownloadJabberImpl(Contact, String, String, int) \nAt HttpFileDownloadJabberImpl.java:[line 81] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/protocol/jabber/HttpFileDownloadJabberImpl.mFileName \nAt HttpFileDownloadJabberImpl.java:[line 81].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/HttpFileDownloadJabberImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 81, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        mFile = (mFileName != null) ? new File(mFileName) : null;\n", "snippetText": "        mFileName = uri.getLastPathSegment();\n        mFile = (mFileName != null) ? new File(mFileName) : null;\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HttpFileUploadJabberImpl.java:[lines 35-141] \nIn class net.java.sip.communicator.impl.protocol.jabber.HttpFileUploadJabberImpl \nIn method new net.java.sip.communicator.impl.protocol.jabber.HttpFileUploadJabberImpl(Object, String, String) \nAt HttpFileUploadJabberImpl.java:[line 51] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/protocol/jabber/HttpFileUploadJabberImpl.<init>(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V parameter 0 \nAt FileSendConversation.java:[line 215].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/ddaa820bc79ad410133e805d11d9bf69", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HttpFileUploadJabberImpl.java:[lines 35-141] \nIn class net.java.sip.communicator.impl.protocol.jabber.HttpFileUploadJabberImpl \nIn method new net.java.sip.communicator.impl.protocol.jabber.HttpFileUploadJabberImpl(Object, String, String) \nAt HttpFileUploadJabberImpl.java:[line 51] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/protocol/jabber/HttpFileUploadJabberImpl.<init>(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V parameter 0 \nAt FileSendConversation.java:[line 215].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/HttpFileUploadJabberImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 51, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        mFile = new File(file);\n", "snippetText": "        mFileName = file;\n        mFile = new File(file);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt OperationSetFileTransferJabberImpl.java:[lines 46-551] \nIn class net.java.sip.communicator.impl.protocol.jabber.OperationSetFileTransferJabberImpl \nIn method net.java.sip.communicator.impl.protocol.jabber.OperationSetFileTransferJabberImpl.sendFile(Contact, Contact, String, String, String) \nAt OperationSetFileTransferJabberImpl.java:[line 191] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/protocol/jabber/OperationSetFileTransferJabberImpl.sendFile(Lnet/java/sip/communicator/service/protocol/Contact;Lnet/java/sip/communicator/service/protocol/Contact;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lnet/java/sip/communicator/service/protocol/FileTransfer; parameter 1 \nMethod usage not detected.", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/162ddfcf0dcbbb26263d8312f48e3b71", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt OperationSetFileTransferJabberImpl.java:[lines 46-551] \nIn class net.java.sip.communicator.impl.protocol.jabber.OperationSetFileTransferJabberImpl \nIn method net.java.sip.communicator.impl.protocol.jabber.OperationSetFileTransferJabberImpl.sendFile(Contact, Contact, String, String, String) \nAt OperationSetFileTransferJabberImpl.java:[line 191] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/protocol/jabber/OperationSetFileTransferJabberImpl.sendFile(Lnet/java/sip/communicator/service/protocol/Contact;Lnet/java/sip/communicator/service/protocol/Contact;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lnet/java/sip/communicator/service/protocol/FileTransfer; parameter 1 \nMethod usage not detected.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/OperationSetFileTransferJabberImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 191, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        return this.sendFile(toContact, new File(localPath), uuid);\n", "snippetText": "    {\n        return this.sendFile(toContact, new File(localPath), uuid);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt ProtocolIconJabberImpl.java:[lines 41-163] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolIconJabberImpl \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolIconJabberImpl.loadIcon(String) \nAt ProtocolIconJabberImpl.java:[line 128] \nSink method java/net/URL.openStream()Ljava/io/InputStream; \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/protocol/jabber/ProtocolIconJabberImpl.loadIcon(Ljava/lang/String;)[B parameter 0 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nAt ProtocolIconJabberImpl.java:[line 57] \nAt ProtocolIconJabberImpl.java:[line 58] \nAt ProtocolIconJabberImpl.java:[line 59] \nAt ProtocolIconJabberImpl.java:[line 114] \nAt ProtocolIconJabberImpl.java:[line 128] \nAt ProtocolProviderServiceJabberImpl.java:[line 2189] \nAt ProtocolProviderServiceJabberImpl.java:[line 2193] \nAt AccountID.java:[line 399] \nAt AccountID.java:[line 412] \nAt AccountID.java:[line 419] \nAt AccountID.java:[line 423] \nAt AccountID.java:[line 427] \nAt AccountID.java:[line 1465].", "description": "This web server request could be used by an attacker to expose internal services and filesystem. .", "internal_id": "URLCONNECTION_SSRF_FD/8947a0cefe428fd5802377846df98b59", "severity": "moderate", "owasp_category": "a6-misconfiguration", "category": "URLCONNECTION SSRF FD", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt ProtocolIconJabberImpl.java:[lines 41-163] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolIconJabberImpl \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolIconJabberImpl.loadIcon(String) \nAt ProtocolIconJabberImpl.java:[line 128] \nSink method java/net/URL.openStream()Ljava/io/InputStream; \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/protocol/jabber/ProtocolIconJabberImpl.loadIcon(Ljava/lang/String;)[B parameter 0 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nAt ProtocolIconJabberImpl.java:[line 57] \nAt ProtocolIconJabberImpl.java:[line 58] \nAt ProtocolIconJabberImpl.java:[line 59] \nAt ProtocolIconJabberImpl.java:[line 114] \nAt ProtocolIconJabberImpl.java:[line 128] \nAt ProtocolProviderServiceJabberImpl.java:[line 2189] \nAt ProtocolProviderServiceJabberImpl.java:[line 2193] \nAt AccountID.java:[line 399] \nAt AccountID.java:[line 412] \nAt AccountID.java:[line 419] \nAt AccountID.java:[line 423] \nAt AccountID.java:[line 427] \nAt AccountID.java:[line 1465].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/ProtocolIconJabberImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 128, "ruleId": "URLCONNECTION_SSRF_FD", "ruleName": "URLCONNECTION SSRF FD", "contextText": "            is = new URL(imagePath).openStream();\n", "snippetText": "            // try to load path it maybe valid url\n            is = new URL(imagePath).openStream();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ProtocolProviderServiceJabberImpl.java:[lines 171-3126] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl.initAvatarStore() \nAt ProtocolProviderServiceJabberImpl.java:[line 1674] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/content/Context.getFilesDir()Ljava/io/File; \nAt ProtocolProviderServiceJabberImpl.java:[line 1674].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/5d1c4723fd1e652bcd41ade59496becd", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ProtocolProviderServiceJabberImpl.java:[lines 171-3126] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl.initAvatarStore() \nAt ProtocolProviderServiceJabberImpl.java:[line 1674] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/content/Context.getFilesDir()Ljava/io/File; \nAt ProtocolProviderServiceJabberImpl.java:[line 1674].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/ProtocolProviderServiceJabberImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1674, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        File avatarStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir() + \"/avatarStore\");\n", "snippetText": "        /* Persistent Storage directory for Avatar. */\n        File avatarStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir() + \"/avatarStore\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ProtocolProviderServiceJabberImpl.java:[lines 171-3126] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl.initRosterStore() \nAt ProtocolProviderServiceJabberImpl.java:[line 1691] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/protocol/AccountID.userID \nUnknown source android/content/Context.getFilesDir()Ljava/io/File; \nUnknown source net/java/sip/communicator/service/protocol/jabber/JabberAccountID.getUserID()Ljava/lang/String; \nAt ProtocolProviderServiceJabberImpl.java:[line 1689] \nAt ProtocolProviderServiceJabberImpl.java:[line 1691] \nAt AccountID.java:[line 239].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/50c83aeda9f71b1123a4ac42acb32a19", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ProtocolProviderServiceJabberImpl.java:[lines 171-3126] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl.initRosterStore() \nAt ProtocolProviderServiceJabberImpl.java:[line 1691] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/protocol/AccountID.userID \nUnknown source android/content/Context.getFilesDir()Ljava/io/File; \nUnknown source net/java/sip/communicator/service/protocol/jabber/JabberAccountID.getUserID()Ljava/lang/String; \nAt ProtocolProviderServiceJabberImpl.java:[line 1689] \nAt ProtocolProviderServiceJabberImpl.java:[line 1691] \nAt AccountID.java:[line 239].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/ProtocolProviderServiceJabberImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1691, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        rosterStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir() + \"/rosterStore_\" + userID);\n", "snippetText": "\n        rosterStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir() + \"/rosterStore_\" + userID);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt ProtocolProviderServiceJabberImpl.java:[lines 2696-2786] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl$HostTrustManager \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl$HostTrustManager.getAcceptedIssuers() \nAt ProtocolProviderServiceJabberImpl.java:[line 2707].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/cb1506a3d32134f93859121e1c27f85a", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt ProtocolProviderServiceJabberImpl.java:[lines 2696-2786] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl$HostTrustManager \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl$HostTrustManager.getAcceptedIssuers() \nAt ProtocolProviderServiceJabberImpl.java:[line 2707].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/ProtocolProviderServiceJabberImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 2707, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "            return new X509Certificate[0];\n", "snippetText": "        {\n            return new X509Certificate[0];\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ScServiceDiscoveryManager.java:[lines 48-653] \nIn class net.java.sip.communicator.impl.protocol.jabber.ScServiceDiscoveryManager \nIn method net.java.sip.communicator.impl.protocol.jabber.ScServiceDiscoveryManager.initDiscoInfoPersistentStore() \nAt ScServiceDiscoveryManager.java:[line 628] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/protocol/AccountID.userID \nUnknown source android/content/Context.getFilesDir()Ljava/io/File; \nUnknown source net/java/sip/communicator/service/protocol/AccountID.getUserID()Ljava/lang/String; \nAt ScServiceDiscoveryManager.java:[line 627] \nAt ScServiceDiscoveryManager.java:[line 628] \nAt AccountID.java:[line 239].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/8aff00fa23c4cde8321885d230899116", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ScServiceDiscoveryManager.java:[lines 48-653] \nIn class net.java.sip.communicator.impl.protocol.jabber.ScServiceDiscoveryManager \nIn method net.java.sip.communicator.impl.protocol.jabber.ScServiceDiscoveryManager.initDiscoInfoPersistentStore() \nAt ScServiceDiscoveryManager.java:[line 628] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/protocol/AccountID.userID \nUnknown source android/content/Context.getFilesDir()Ljava/io/File; \nUnknown source net/java/sip/communicator/service/protocol/AccountID.getUserID()Ljava/lang/String; \nAt ScServiceDiscoveryManager.java:[line 627] \nAt ScServiceDiscoveryManager.java:[line 628] \nAt AccountID.java:[line 239].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/ScServiceDiscoveryManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 628, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        discoInfoStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir() + \"/discoInfoStore_\" + userID);\n", "snippetText": "        String userID = parentProvider.getAccountID().getUserID();\n        discoInfoStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir() + \"/discoInfoStore_\" + userID);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ScServiceDiscoveryManager.java:[lines 48-653] \nIn class net.java.sip.communicator.impl.protocol.jabber.ScServiceDiscoveryManager \nIn method net.java.sip.communicator.impl.protocol.jabber.ScServiceDiscoveryManager.initEntityPersistentStore() \nAt ScServiceDiscoveryManager.java:[line 600] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/content/Context.getFilesDir()Ljava/io/File; \nAt ScServiceDiscoveryManager.java:[line 600].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/86ab5724ed8005e165919d18e374db15", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ScServiceDiscoveryManager.java:[lines 48-653] \nIn class net.java.sip.communicator.impl.protocol.jabber.ScServiceDiscoveryManager \nIn method net.java.sip.communicator.impl.protocol.jabber.ScServiceDiscoveryManager.initEntityPersistentStore() \nAt ScServiceDiscoveryManager.java:[line 600] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/content/Context.getFilesDir()Ljava/io/File; \nAt ScServiceDiscoveryManager.java:[line 600].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/ScServiceDiscoveryManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 600, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        entityStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir() + \"/entityStore\");\n", "snippetText": "    {\n        entityStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir() + \"/entityStore\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ThumbnailedFile.java:[lines 43-88] \nIn class net.java.sip.communicator.impl.protocol.jabber.ThumbnailedFile \nIn method new net.java.sip.communicator.impl.protocol.jabber.ThumbnailedFile(File, int, int, String, byte[]) \nAt ThumbnailedFile.java:[line 43] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getPath()Ljava/lang/String;.", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/16d4eadce19398692552be812195d7bf", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ThumbnailedFile.java:[lines 43-88] \nIn class net.java.sip.communicator.impl.protocol.jabber.ThumbnailedFile \nIn method new net.java.sip.communicator.impl.protocol.jabber.ThumbnailedFile(File, int, int, String, byte[]) \nAt ThumbnailedFile.java:[line 43] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getPath()Ljava/lang/String;.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/ThumbnailedFile.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 43, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        super(file.getPath());\n", "snippetText": "    {\n        super(file.getPath());\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This random generator (java.util.Random) is predictable \nAt DHCPProvisioningDiscover.java:[lines 60-234] \nIn class net.java.sip.communicator.impl.provdisc.dhcp.DHCPProvisioningDiscover \nIn method new net.java.sip.communicator.impl.provdisc.dhcp.DHCPProvisioningDiscover(int, byte) \nAt DHCPProvisioningDiscover.java:[line 81] \nValue java.util.Random.", "description": "This random generator (java.util.Random) is predictable .", "internal_id": "PREDICTABLE_RANDOM/3f61396e5012188509293578c867ab0b", "severity": "moderate", "owasp_category": "", "category": "Predictable Random", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This random generator (java.util.Random) is predictable \nAt DHCPProvisioningDiscover.java:[lines 60-234] \nIn class net.java.sip.communicator.impl.provdisc.dhcp.DHCPProvisioningDiscover \nIn method new net.java.sip.communicator.impl.provdisc.dhcp.DHCPProvisioningDiscover(int, byte) \nAt DHCPProvisioningDiscover.java:[line 81] \nValue java.util.Random.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/provdisc/dhcp/DHCPProvisioningDiscover.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 81, "ruleId": "PREDICTABLE_RANDOM", "ruleName": "Predictable Random", "contextText": "        xid = new Random().nextInt();\n", "snippetText": "        socket = new DatagramSocket(port);\n        xid = new Random().nextInt();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This random generator (java.util.Random) is predictable \nAt DHCPTransaction.java:[lines 30-117] \nIn class net.java.sip.communicator.impl.provdisc.dhcp.DHCPTransaction \nIn method net.java.sip.communicator.impl.provdisc.dhcp.DHCPTransaction.schedule() \nAt DHCPTransaction.java:[line 87] \nValue java.util.Random.", "description": "This random generator (java.util.Random) is predictable .", "internal_id": "PREDICTABLE_RANDOM/a13ca6d92e7f984eb1de6458bce20f17", "severity": "moderate", "owasp_category": "", "category": "Predictable Random", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This random generator (java.util.Random) is predictable \nAt DHCPTransaction.java:[lines 30-117] \nIn class net.java.sip.communicator.impl.provdisc.dhcp.DHCPTransaction \nIn method net.java.sip.communicator.impl.provdisc.dhcp.DHCPTransaction.schedule() \nAt DHCPTransaction.java:[line 87] \nValue java.util.Random.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/provdisc/dhcp/DHCPTransaction.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 87, "ruleId": "PREDICTABLE_RANDOM", "ruleName": "Predictable Random", "contextText": "        int rand = new Random().nextInt(2) - 1;\n", "snippetText": "        /* choose a random between [-1, 1] */\n        int rand = new Random().nextInt(2) - 1;\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This random generator (java.util.Random) is predictable \nAt DHCPTransaction.java:[lines 124-146] \nIn class net.java.sip.communicator.impl.provdisc.dhcp.DHCPTransaction$RetransmissionHandler \nIn method net.java.sip.communicator.impl.provdisc.dhcp.DHCPTransaction$RetransmissionHandler.run() \nAt DHCPTransaction.java:[line 133] \nValue java.util.Random.", "description": "This random generator (java.util.Random) is predictable .", "internal_id": "PREDICTABLE_RANDOM/19fb9ddb207aa9a286e78778b17f103d", "severity": "moderate", "owasp_category": "", "category": "Predictable Random", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This random generator (java.util.Random) is predictable \nAt DHCPTransaction.java:[lines 124-146] \nIn class net.java.sip.communicator.impl.provdisc.dhcp.DHCPTransaction$RetransmissionHandler \nIn method net.java.sip.communicator.impl.provdisc.dhcp.DHCPTransaction$RetransmissionHandler.run() \nAt DHCPTransaction.java:[line 133] \nValue java.util.Random.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/provdisc/dhcp/DHCPTransaction.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 133, "ruleId": "PREDICTABLE_RANDOM", "ruleName": "Predictable Random", "contextText": "            int rand = new Random().nextInt(2) - 1;\n", "snippetText": "        {\n            int rand = new Random().nextInt(2) - 1;\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt SkinJarBuilder.java:[lines 28-446] \nIn class net.java.sip.communicator.impl.resources.util.SkinJarBuilder \nIn method net.java.sip.communicator.impl.resources.util.SkinJarBuilder.unzipIntoTmp(File) \nAt SkinJarBuilder.java:[line 158] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/util/zip/ZipEntry.getName()Ljava/lang/String;.", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/0fcba24bbf61ea35af79fead56e02790", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt SkinJarBuilder.java:[lines 28-446] \nIn class net.java.sip.communicator.impl.resources.util.SkinJarBuilder \nIn method net.java.sip.communicator.impl.resources.util.SkinJarBuilder.unzipIntoTmp(File) \nAt SkinJarBuilder.java:[line 158] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/util/zip/ZipEntry.getName()Ljava/lang/String;.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/resources/util/SkinJarBuilder.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 158, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "                    File file = new File(dest, entry.getName());\n", "snippetText": "                    ZipEntry entry = e.nextElement();\n                    File file = new File(dest, entry.getName());\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt SkinJarBuilder.java:[lines 28-446] \nIn class net.java.sip.communicator.impl.resources.util.SkinJarBuilder \nIn method net.java.sip.communicator.impl.resources.util.SkinJarBuilder.zipDir(String, ZipOutputStream) \nAt SkinJarBuilder.java:[line 237] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/resources/util/SkinJarBuilder.zipDir(Ljava/lang/String;Ljava/util/zip/ZipOutputStream;)V parameter 1 \nAt SkinJarBuilder.java:[line 220].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/170e694456ea7f5e22f358c245a6a4a6", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt SkinJarBuilder.java:[lines 28-446] \nIn class net.java.sip.communicator.impl.resources.util.SkinJarBuilder \nIn method net.java.sip.communicator.impl.resources.util.SkinJarBuilder.zipDir(String, ZipOutputStream) \nAt SkinJarBuilder.java:[line 237] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/resources/util/SkinJarBuilder.zipDir(Ljava/lang/String;Ljava/util/zip/ZipOutputStream;)V parameter 1 \nAt SkinJarBuilder.java:[line 220].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/impl/resources/util/SkinJarBuilder.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 237, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        File directory = new File(dir2zip);\n", "snippetText": "    {\n        File directory = new File(dir2zip);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection \nAt LogUploadServiceImpl.java:[lines 31-99] \nIn class net.java.sip.communicator.plugin.loggingutils.LogUploadServiceImpl \nIn method net.java.sip.communicator.plugin.loggingutils.LogUploadServiceImpl.sendLogs(String[], String, String) \nAt LogUploadServiceImpl.java:[line 56] \nSink method java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; \nSink parameter 0 \nUnknown source org/atalk/service/fileaccess/FileAccessService.getPrivatePersistentFile(Ljava/lang/String;Lorg/atalk/service/fileaccess/FileCategory;)Ljava/io/File; \nAt LogUploadServiceImpl.java:[line 56].", "description": "This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection .", "internal_id": "COMMAND_INJECTION/fffc04a971e7aa57356c3c767a25514c", "severity": "moderate", "owasp_category": "", "category": "Command Injection", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection \nAt LogUploadServiceImpl.java:[lines 31-99] \nIn class net.java.sip.communicator.plugin.loggingutils.LogUploadServiceImpl \nIn method net.java.sip.communicator.plugin.loggingutils.LogUploadServiceImpl.sendLogs(String[], String, String) \nAt LogUploadServiceImpl.java:[line 56] \nSink method java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; \nSink parameter 0 \nUnknown source org/atalk/service/fileaccess/FileAccessService.getPrivatePersistentFile(Ljava/lang/String;Lorg/atalk/service/fileaccess/FileCategory;)Ljava/io/File; \nAt LogUploadServiceImpl.java:[line 56].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/plugin/loggingutils/LogUploadServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 56, "ruleId": "COMMAND_INJECTION", "ruleName": "Command Injection", "contextText": "                Runtime.getRuntime().exec(\"logcat -v time -f \" + logcatFile);\n", "snippetText": "                logcatFile = LoggingUtilsActivator.getFileAccessService().getPrivatePersistentFile(logcatFN, FileCategory.LOG);\n                Runtime.getRuntime().exec(\"logcat -v time -f \" + logcatFile);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt LogsCollector.java:[lines 36-256] \nIn class net.java.sip.communicator.plugin.loggingutils.LogsCollector \nIn method net.java.sip.communicator.plugin.loggingutils.LogsCollector.collectLogs(File, File) \nAt LogsCollector.java:[line 77] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getName()Ljava/lang/String; \nAt LogsCollector.java:[line 77].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/05a4b824718797a32f522bcf5c6f3609", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt LogsCollector.java:[lines 36-256] \nIn class net.java.sip.communicator.plugin.loggingutils.LogsCollector \nIn method net.java.sip.communicator.plugin.loggingutils.LogsCollector.collectLogs(File, File) \nAt LogsCollector.java:[line 77] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getName()Ljava/lang/String; \nAt LogsCollector.java:[line 77].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/plugin/loggingutils/LogsCollector.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 77, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "                destination = new File(destination.getParentFile(), destination.getName() + \".zip\");\n", "snippetText": "            if (!destination.getName().endsWith(\"zip\"))\n                destination = new File(destination.getParentFile(), destination.getName() + \".zip\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt LogsCollector.java:[lines 36-256] \nIn class net.java.sip.communicator.plugin.loggingutils.LogsCollector \nIn method net.java.sip.communicator.plugin.loggingutils.LogsCollector.collectLogs(File, File) \nAt LogsCollector.java:[line 80] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/plugin/loggingutils/LogsCollector.getDefaultFileName()Ljava/lang/String; \nUnknown source java/text/SimpleDateFormat.format(Ljava/util/Date;)Ljava/lang/String; \nAt LogsCollector.java:[line 80] \nAt LogsCollector.java:[line 105].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/5ecac98c043a89f90e528be4196c6b71", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt LogsCollector.java:[lines 36-256] \nIn class net.java.sip.communicator.plugin.loggingutils.LogsCollector \nIn method net.java.sip.communicator.plugin.loggingutils.LogsCollector.collectLogs(File, File) \nAt LogsCollector.java:[line 80] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/plugin/loggingutils/LogsCollector.getDefaultFileName()Ljava/lang/String; \nUnknown source java/text/SimpleDateFormat.format(Ljava/util/Date;)Ljava/lang/String; \nAt LogsCollector.java:[line 80] \nAt LogsCollector.java:[line 105].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/plugin/loggingutils/LogsCollector.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 80, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "            destination = new File(destination, getDefaultFileName());\n", "snippetText": "        else {\n            destination = new File(destination, getDefaultFileName());\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt JabberStatusEnum.java:[lines 121-299] \nIn class net.java.sip.communicator.service.protocol.jabberconstants.JabberStatusEnum \nIn method net.java.sip.communicator.service.protocol.jabberconstants.JabberStatusEnum.getResourceAsStream(String, Class) \nAt JabberStatusEnum.java:[line 290] \nSink method java/net/URL.openStream()Ljava/io/InputStream; \nSink parameter 0 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nUnknown source net/java/sip/communicator/service/protocol/jabberconstants/JabberStatusEnum.getResourceAsStream(Ljava/lang/String;Ljava/lang/Class;)Ljava/io/InputStream; parameter 1 \nMethod usage not detected \nAt JabberStatusEnum.java:[line 156] \nAt JabberStatusEnum.java:[line 157] \nAt JabberStatusEnum.java:[line 159] \nAt JabberStatusEnum.java:[line 160] \nAt JabberStatusEnum.java:[line 162] \nAt JabberStatusEnum.java:[line 163] \nAt JabberStatusEnum.java:[line 165] \nAt JabberStatusEnum.java:[line 166] \nAt JabberStatusEnum.java:[line 168] \nAt JabberStatusEnum.java:[line 169] \nAt JabberStatusEnum.java:[line 171] \nAt JabberStatusEnum.java:[line 172] \nAt JabberStatusEnum.java:[line 174] \nAt JabberStatusEnum.java:[line 175] \nAt JabberStatusEnum.java:[line 177] \nAt JabberStatusEnum.java:[line 178] \nAt JabberStatusEnum.java:[line 180] \nAt JabberStatusEnum.java:[line 181] \nAt JabberStatusEnum.java:[line 250] \nAt JabberStatusEnum.java:[line 262] \nAt JabberStatusEnum.java:[line 290].", "description": "This web server request could be used by an attacker to expose internal services and filesystem. .", "internal_id": "URLCONNECTION_SSRF_FD/83671613ecf3cf6402beb53965b9a3ff", "severity": "moderate", "owasp_category": "a6-misconfiguration", "category": "URLCONNECTION SSRF FD", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt JabberStatusEnum.java:[lines 121-299] \nIn class net.java.sip.communicator.service.protocol.jabberconstants.JabberStatusEnum \nIn method net.java.sip.communicator.service.protocol.jabberconstants.JabberStatusEnum.getResourceAsStream(String, Class) \nAt JabberStatusEnum.java:[line 290] \nSink method java/net/URL.openStream()Ljava/io/InputStream; \nSink parameter 0 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nUnknown source net/java/sip/communicator/service/protocol/jabberconstants/JabberStatusEnum.getResourceAsStream(Ljava/lang/String;Ljava/lang/Class;)Ljava/io/InputStream; parameter 1 \nMethod usage not detected \nAt JabberStatusEnum.java:[line 156] \nAt JabberStatusEnum.java:[line 157] \nAt JabberStatusEnum.java:[line 159] \nAt JabberStatusEnum.java:[line 160] \nAt JabberStatusEnum.java:[line 162] \nAt JabberStatusEnum.java:[line 163] \nAt JabberStatusEnum.java:[line 165] \nAt JabberStatusEnum.java:[line 166] \nAt JabberStatusEnum.java:[line 168] \nAt JabberStatusEnum.java:[line 169] \nAt JabberStatusEnum.java:[line 171] \nAt JabberStatusEnum.java:[line 172] \nAt JabberStatusEnum.java:[line 174] \nAt JabberStatusEnum.java:[line 175] \nAt JabberStatusEnum.java:[line 177] \nAt JabberStatusEnum.java:[line 178] \nAt JabberStatusEnum.java:[line 180] \nAt JabberStatusEnum.java:[line 181] \nAt JabberStatusEnum.java:[line 250] \nAt JabberStatusEnum.java:[line 262] \nAt JabberStatusEnum.java:[line 290].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/service/protocol/jabberconstants/JabberStatusEnum.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 290, "ruleId": "URLCONNECTION_SSRF_FD", "ruleName": "URLCONNECTION SSRF FD", "contextText": "                return new URL(name).openStream();\n", "snippetText": "            try {\n                return new URL(name).openStream();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks \nAt ConferenceInfoDocument.java:[lines 32-612] \nIn class net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument \nIn method new net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument(String) \nAt ConferenceInfoDocument.java:[line 206] \nValue DocumentBuilder.parse(...).", "description": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks .", "internal_id": "XXE_DOCUMENT/29379f32d0b4881e8db341e7950dbfa4", "severity": "moderate", "owasp_category": "", "category": "Xxe Document", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks \nAt ConferenceInfoDocument.java:[lines 32-612] \nIn class net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument \nIn method new net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument(String) \nAt ConferenceInfoDocument.java:[line 206] \nValue DocumentBuilder.parse(...).", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/service/protocol/media/ConferenceInfoDocument.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 206, "ruleId": "XXE_DOCUMENT", "ruleName": "Xxe Document", "contextText": "                    .parse(new ByteArrayInputStream(bytes));\n", "snippetText": "            document = XMLUtils.newDocumentBuilderFactory().newDocumentBuilder()\n                    .parse(new ByteArrayInputStream(bytes));\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "The use of TransformerFactory.newInstance(...) (TransformerFactory) is vulnerable to XML External Entity attacks \nAt ConferenceInfoDocument.java:[lines 32-612] \nIn class net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument \nIn method net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument.toXml(String) \nAt ConferenceInfoDocument.java:[line 450] \nValue TransformerFactory.newInstance(...).", "description": "The use of TransformerFactory.newInstance(...) (TransformerFactory) is vulnerable to XML External Entity attacks .", "internal_id": "XXE_DTD_TRANSFORM_FACTORY/c9f7fb5f923077f4a92d0d5300384ff7", "severity": "moderate", "owasp_category": "", "category": "XXE DTD TRANSFORM FACTORY", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The use of TransformerFactory.newInstance(...) (TransformerFactory) is vulnerable to XML External Entity attacks \nAt ConferenceInfoDocument.java:[lines 32-612] \nIn class net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument \nIn method net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument.toXml(String) \nAt ConferenceInfoDocument.java:[line 450] \nValue TransformerFactory.newInstance(...).", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/service/protocol/media/ConferenceInfoDocument.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 450, "ruleId": "XXE_DTD_TRANSFORM_FACTORY", "ruleName": "XXE DTD TRANSFORM FACTORY", "contextText": "            Transformer transformer = TransformerFactory.newInstance().newTransformer();\n", "snippetText": "        try {\n            Transformer transformer = TransformerFactory.newInstance().newTransformer();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "The use of TransformerFactory.newInstance(...) is vulnerable to XSLT External Entity attacks \nAt ConferenceInfoDocument.java:[lines 32-612] \nIn class net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument \nIn method net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument.toXml(String) \nAt ConferenceInfoDocument.java:[line 450] \nValue TransformerFactory.newInstance(...).", "description": "The use of TransformerFactory.newInstance(...) is vulnerable to XSLT External Entity attacks .", "internal_id": "XXE_XSLT_TRANSFORM_FACTORY/93e42cb042f02258b41f083aaf0ccc3d", "severity": "moderate", "owasp_category": "", "category": "XXE XSLT TRANSFORM FACTORY", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The use of TransformerFactory.newInstance(...) is vulnerable to XSLT External Entity attacks \nAt ConferenceInfoDocument.java:[lines 32-612] \nIn class net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument \nIn method net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument.toXml(String) \nAt ConferenceInfoDocument.java:[line 450] \nValue TransformerFactory.newInstance(...).", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/service/protocol/media/ConferenceInfoDocument.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 450, "ruleId": "XXE_XSLT_TRANSFORM_FACTORY", "ruleName": "XXE XSLT TRANSFORM FACTORY", "contextText": "            Transformer transformer = TransformerFactory.newInstance().newTransformer();\n", "snippetText": "        try {\n            Transformer transformer = TransformerFactory.newInstance().newTransformer();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileHandler.java:[lines 28-179] \nIn class net.java.sip.communicator.util.FileHandler \nIn method net.java.sip.communicator.util.FileHandler.checkDestinationDirectory(String) \nAt FileHandler.java:[line 175] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/util/FileHandler.checkDestinationDirectory(Ljava/lang/String;)V parameter 0 \nAt FileHandler.java:[line 126] \nAt FileHandler.java:[line 129] \nAt FileHandler.java:[line 135] \nAt FileHandler.java:[line 138] \nAt FileHandler.java:[line 140] \nAt FileHandler.java:[line 172] \nAt FileHandler.java:[line 173] \nAt FileHandler.java:[line 174].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/9e23c285fcd0229867cd0a8b3c1b4a2e", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileHandler.java:[lines 28-179] \nIn class net.java.sip.communicator.util.FileHandler \nIn method net.java.sip.communicator.util.FileHandler.checkDestinationDirectory(String) \nAt FileHandler.java:[line 175] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/util/FileHandler.checkDestinationDirectory(Ljava/lang/String;)V parameter 0 \nAt FileHandler.java:[line 126] \nAt FileHandler.java:[line 129] \nAt FileHandler.java:[line 135] \nAt FileHandler.java:[line 138] \nAt FileHandler.java:[line 140] \nAt FileHandler.java:[line 172] \nAt FileHandler.java:[line 173] \nAt FileHandler.java:[line 174].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/util/FileHandler.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 175, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "                new File(dirName).mkdirs();\n", "snippetText": "                dirName = dirName.replaceAll(\"%t\", System.getProperty(\"java.io.tmpdir\"));\n                new File(dirName).mkdirs();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This random generator (java.util.Random) is predictable \nAt NetworkUtils.java:[lines 41-715] \nIn class net.java.sip.communicator.util.NetworkUtils \nIn method net.java.sip.communicator.util.NetworkUtils.<static initializer for NetworkUtils>() \nAt NetworkUtils.java:[line 88] \nValue java.util.Random.", "description": "This random generator (java.util.Random) is predictable .", "internal_id": "PREDICTABLE_RANDOM/4d334bb946f9bfa4e8488885fbe7a8d8", "severity": "moderate", "owasp_category": "", "category": "Predictable Random", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This random generator (java.util.Random) is predictable \nAt NetworkUtils.java:[lines 41-715] \nIn class net.java.sip.communicator.util.NetworkUtils \nIn method net.java.sip.communicator.util.NetworkUtils.<static initializer for NetworkUtils>() \nAt NetworkUtils.java:[line 88] \nValue java.util.Random.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/util/NetworkUtils.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 88, "ruleId": "PREDICTABLE_RANDOM", "ruleName": "Predictable Random", "contextText": "    private static Random portNumberGenerator = new Random();\n", "snippetText": "     */\n    private static Random portNumberGenerator = new Random();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This random generator (java.util.Random) is predictable \nAt NetworkUtils.java:[lines 41-715] \nIn class net.java.sip.communicator.util.NetworkUtils \nIn method net.java.sip.communicator.util.NetworkUtils.<static initializer for NetworkUtils>() \nAt NetworkUtils.java:[line 104] \nValue java.util.Random.", "description": "This random generator (java.util.Random) is predictable .", "internal_id": "PREDICTABLE_RANDOM/a7362f5367d9fc07e4a98b1ad67cde83", "severity": "moderate", "owasp_category": "", "category": "Predictable Random", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This random generator (java.util.Random) is predictable \nAt NetworkUtils.java:[lines 41-715] \nIn class net.java.sip.communicator.util.NetworkUtils \nIn method net.java.sip.communicator.util.NetworkUtils.<static initializer for NetworkUtils>() \nAt NetworkUtils.java:[line 104] \nValue java.util.Random.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/util/NetworkUtils.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 104, "ruleId": "PREDICTABLE_RANDOM", "ruleName": "Predictable Random", "contextText": "    private static final Random random = new Random();\n", "snippetText": "     */\n    private static final Random random = new Random();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "Possible information exposure through an error message \nAt ScLogFormatter.java:[lines 41-223] \nIn class net.java.sip.communicator.util.ScLogFormatter \nIn method net.java.sip.communicator.util.ScLogFormatter.format(LogRecord) \nAt ScLogFormatter.java:[line 145].", "description": "Possible information exposure through an error message .", "internal_id": "INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE/e32b0dd38791d634a87c6bcef07327d0", "severity": "moderate", "owasp_category": "", "category": "INFORMATION EXPOSURE THROUGH AN ERROR MESSAGE", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Possible information exposure through an error message \nAt ScLogFormatter.java:[lines 41-223] \nIn class net.java.sip.communicator.util.ScLogFormatter \nIn method net.java.sip.communicator.util.ScLogFormatter.format(LogRecord) \nAt ScLogFormatter.java:[line 145].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/util/ScLogFormatter.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 145, "ruleId": "INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE", "ruleName": "INFORMATION EXPOSURE THROUGH AN ERROR MESSAGE", "contextText": "                record.getThrown().printStackTrace(pw);\n", "snippetText": "                PrintWriter pw = new PrintWriter(sw);\n                record.getThrown().printStackTrace(pw);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API SHA-1 (SHA-1) is not a recommended cryptographic hash function \nAt Sha1Crypto.java:[lines 12-79] \nIn class net.java.sip.communicator.util.Sha1Crypto \nIn method net.java.sip.communicator.util.Sha1Crypto.encode(String) \nAt Sha1Crypto.java:[line 26] \nValue SHA-1.", "description": "This API SHA-1 (SHA-1) is not a recommended cryptographic hash function .", "internal_id": "WEAK_MESSAGE_DIGEST_SHA1/2a2917043fc3b8f4b88d7b0706d9b453", "severity": "moderate", "owasp_category": "", "category": "WEAK MESSAGE DIGEST SHA1", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API SHA-1 (SHA-1) is not a recommended cryptographic hash function \nAt Sha1Crypto.java:[lines 12-79] \nIn class net.java.sip.communicator.util.Sha1Crypto \nIn method net.java.sip.communicator.util.Sha1Crypto.encode(String) \nAt Sha1Crypto.java:[line 26] \nValue SHA-1.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/util/Sha1Crypto.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 26, "ruleId": "WEAK_MESSAGE_DIGEST_SHA1", "ruleName": "WEAK MESSAGE DIGEST SHA1", "contextText": "        MessageDigest messageDigest = MessageDigest.getInstance(\"SHA-1\");\n", "snippetText": "    {\n        MessageDigest messageDigest = MessageDigest.getInstance(\"SHA-1\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API SHA-1 (SHA-1) is not a recommended cryptographic hash function \nAt Sha1Crypto.java:[lines 12-79] \nIn class net.java.sip.communicator.util.Sha1Crypto \nIn method net.java.sip.communicator.util.Sha1Crypto.encode(byte[]) \nAt Sha1Crypto.java:[line 47] \nValue SHA-1.", "description": "This API SHA-1 (SHA-1) is not a recommended cryptographic hash function .", "internal_id": "WEAK_MESSAGE_DIGEST_SHA1/43fd450ac4a56843442e2706055d97a4", "severity": "moderate", "owasp_category": "", "category": "WEAK MESSAGE DIGEST SHA1", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API SHA-1 (SHA-1) is not a recommended cryptographic hash function \nAt Sha1Crypto.java:[lines 12-79] \nIn class net.java.sip.communicator.util.Sha1Crypto \nIn method net.java.sip.communicator.util.Sha1Crypto.encode(byte[]) \nAt Sha1Crypto.java:[line 47] \nValue SHA-1.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/util/Sha1Crypto.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 47, "ruleId": "WEAK_MESSAGE_DIGEST_SHA1", "ruleName": "WEAK MESSAGE DIGEST SHA1", "contextText": "        MessageDigest messageDigest = MessageDigest.getInstance(\"SHA-1\");\n", "snippetText": "    {\n        MessageDigest messageDigest = MessageDigest.getInstance(\"SHA-1\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt DeleteOnHaltHook.java:[lines 24-66] \nIn class net.java.sip.communicator.util.launchutils.DeleteOnHaltHook \nIn method net.java.sip.communicator.util.launchutils.DeleteOnHaltHook.runHooks() \nAt DeleteOnHaltHook.java:[line 61] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nUnknown source net/java/sip/communicator/util/launchutils/DeleteOnHaltHook.files \nAt DeleteOnHaltHook.java:[line 51] \nAt DeleteOnHaltHook.java:[line 57] \nAt DeleteOnHaltHook.java:[line 59] \nAt DeleteOnHaltHook.java:[line 60].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/cf1d32b7a0b361053865344b83641792", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt DeleteOnHaltHook.java:[lines 24-66] \nIn class net.java.sip.communicator.util.launchutils.DeleteOnHaltHook \nIn method net.java.sip.communicator.util.launchutils.DeleteOnHaltHook.runHooks() \nAt DeleteOnHaltHook.java:[line 61] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nUnknown source net/java/sip/communicator/util/launchutils/DeleteOnHaltHook.files \nAt DeleteOnHaltHook.java:[line 51] \nAt DeleteOnHaltHook.java:[line 57] \nAt DeleteOnHaltHook.java:[line 59] \nAt DeleteOnHaltHook.java:[line 60].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/util/launchutils/DeleteOnHaltHook.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 61, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "                new File(filename).delete();\n", "snippetText": "            for (String filename : toBeDeleted)\n                new File(filename).delete();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt LaunchArgHandler.java:[lines 33-517] \nIn class net.java.sip.communicator.util.launchutils.LaunchArgHandler \nIn method net.java.sip.communicator.util.launchutils.LaunchArgHandler.handleConfigArg(String) \nAt LaunchArgHandler.java:[line 357] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/util/launchutils/LaunchArgHandler.handleConfigArg(Ljava/lang/String;)I parameter 0 \nAt AEGetURLEventHandler.java:[line 48] \nAt AEGetURLEventHandler.java:[line 49] \nAt LaunchArgHandler.java:[line 240] \nAt LaunchArgHandler.java:[line 254] \nAt LaunchArgHandler.java:[line 354].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/026893f4eb2401283d39199f8b6642cf", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt LaunchArgHandler.java:[lines 33-517] \nIn class net.java.sip.communicator.util.launchutils.LaunchArgHandler \nIn method net.java.sip.communicator.util.launchutils.LaunchArgHandler.handleConfigArg(String) \nAt LaunchArgHandler.java:[line 357] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/util/launchutils/LaunchArgHandler.handleConfigArg(Ljava/lang/String;)I parameter 0 \nAt AEGetURLEventHandler.java:[line 48] \nAt AEGetURLEventHandler.java:[line 49] \nAt LaunchArgHandler.java:[line 240] \nAt LaunchArgHandler.java:[line 254] \nAt LaunchArgHandler.java:[line 354].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/net/java/sip/communicator/util/launchutils/LaunchArgHandler.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 357, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        File configDir = new File(configArg);\n", "snippetText": "        }\n        File configDir = new File(configArg);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "Broadcast intents could be received by a malicious application \nAt aTalkApp.java:[lines 49-525] \nIn class org.atalk.android.aTalkApp \nIn method org.atalk.android.aTalkApp.doShutdownApplication() \nAt aTalkApp.java:[line 187].", "description": "Broadcast intents could be received by a malicious application .", "internal_id": "ANDROID_BROADCAST/68eb1edfda409e2bf02dabbfc55d5298", "severity": "moderate", "owasp_category": "", "category": "Android Broadcast", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Broadcast intents could be received by a malicious application \nAt aTalkApp.java:[lines 49-525] \nIn class org.atalk.android.aTalkApp \nIn method org.atalk.android.aTalkApp.doShutdownApplication() \nAt aTalkApp.java:[line 187].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/android/aTalkApp.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 187, "ruleId": "ANDROID_BROADCAST", "ruleName": "Android Broadcast", "contextText": "        sendBroadcast(exitIntent);\n", "snippetText": "        exitIntent.setAction(ACTION_EXIT);\n        sendBroadcast(exitIntent);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AccountsListActivity.java:[lines 47-268] \nIn class org.atalk.android.gui.account.AccountsListActivity \nIn method org.atalk.android.gui.account.AccountsListActivity.removeAccountPersistentStore(AccountID) \nAt AccountsListActivity.java:[line 260] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source net/java/sip/communicator/service/protocol/AccountID.getBareJid()Lorg/jxmpp/jid/BareJid; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.clearPersistentStorage(Lorg/jxmpp/jid/BareJid;)V parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.purgeItemFor(Lorg/jxmpp/jid/BareJid;)Z parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nUnknown source android/content/Context.getFilesDir()Ljava/io/File; \nUnknown source net/java/sip/communicator/service/protocol/AccountID.userBareJid \nAt AccountID.java:[line 245] \nAt AccountsListActivity.java:[line 242] \nAt AccountsListActivity.java:[line 260] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 437] \nAt AvatarManager.java:[line 468] \nAt JidToHashCacheFile.java:[line 131].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/4af687da7120fe31d810a99819076e21", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AccountsListActivity.java:[lines 47-268] \nIn class org.atalk.android.gui.account.AccountsListActivity \nIn method org.atalk.android.gui.account.AccountsListActivity.removeAccountPersistentStore(AccountID) \nAt AccountsListActivity.java:[line 260] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source net/java/sip/communicator/service/protocol/AccountID.getBareJid()Lorg/jxmpp/jid/BareJid; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.clearPersistentStorage(Lorg/jxmpp/jid/BareJid;)V parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.purgeItemFor(Lorg/jxmpp/jid/BareJid;)Z parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nUnknown source android/content/Context.getFilesDir()Ljava/io/File; \nUnknown source net/java/sip/communicator/service/protocol/AccountID.userBareJid \nAt AccountID.java:[line 245] \nAt AccountsListActivity.java:[line 242] \nAt AccountsListActivity.java:[line 260] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 437] \nAt AvatarManager.java:[line 468] \nAt JidToHashCacheFile.java:[line 131].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/android/gui/account/AccountsListActivity.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 260, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "            File discoInfoStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir()\n", "snippetText": "            // File discoInfoStoreDirectory = discoveryInfoManager.getDiscoInfoPersistentStore();\n            File discoInfoStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir()\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ChatActivity.java:[lines 82-1154] \nIn class org.atalk.android.gui.chat.ChatActivity \nIn method org.atalk.android.gui.chat.ChatActivity.onActivityResult(int, int, Intent) \nAt ChatActivity.java:[line 930] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/FilePathHelper.getPath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source android/net/Uri.getLastPathSegment()Ljava/lang/String; \nUnknown source android/net/Uri.getPath()Ljava/lang/String; \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getRealPath(Landroid/content/ContentResolver;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getUriRealPathAboveKitkat(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePathWithCreate(Landroid/content/Context;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source android/database/Cursor.getString(I)Ljava/lang/String; \nAt ChatActivity.java:[line 928] \nAt ChatActivity.java:[line 929] \nAt FilePathHelper.java:[line 71] \nAt FilePathHelper.java:[line 73] \nAt FilePathHelper.java:[line 90] \nAt FilePathHelper.java:[line 94] \nAt FilePathHelper.java:[line 219] \nAt FilePathHelper.java:[line 251] \nAt FilePathHelper.java:[line 260].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/1b24fa8c5d3e2d59fc73d1ab1188d70b", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ChatActivity.java:[lines 82-1154] \nIn class org.atalk.android.gui.chat.ChatActivity \nIn method org.atalk.android.gui.chat.ChatActivity.onActivityResult(int, int, Intent) \nAt ChatActivity.java:[line 930] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/FilePathHelper.getPath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source android/net/Uri.getLastPathSegment()Ljava/lang/String; \nUnknown source android/net/Uri.getPath()Ljava/lang/String; \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getRealPath(Landroid/content/ContentResolver;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getUriRealPathAboveKitkat(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePathWithCreate(Landroid/content/Context;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source android/database/Cursor.getString(I)Ljava/lang/String; \nAt ChatActivity.java:[line 928] \nAt ChatActivity.java:[line 929] \nAt FilePathHelper.java:[line 71] \nAt FilePathHelper.java:[line 73] \nAt FilePathHelper.java:[line 90] \nAt FilePathHelper.java:[line 94] \nAt FilePathHelper.java:[line 219] \nAt FilePathHelper.java:[line 251] \nAt FilePathHelper.java:[line 260].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/android/gui/chat/ChatActivity.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 930, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "                                openDownloadable(new File(filePath));\n", "snippetText": "                            if (StringUtils.isNotEmpty(filePath))\n                                openDownloadable(new File(filePath));\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt ChatActivity.java:[lines 1073-1142] \nIn class org.atalk.android.gui.chat.ChatActivity$MediaShareAsynTask \nIn method org.atalk.android.gui.chat.ChatActivity$MediaShareAsynTask.getUrlInfo(String) \nAt ChatActivity.java:[line 1125] \nSink method java/net/URL.openConnection()Ljava/net/URLConnection; \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/ChatActivity$MediaShareAsynTask.getUrlInfo(Ljava/lang/String;)Ljava/lang/String; parameter 0 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nAt ChatActivity.java:[line 1082] \nAt ChatActivity.java:[line 1123] \nAt ChatActivity.java:[line 1124].", "description": "This web server request could be used by an attacker to expose internal services and filesystem. .", "internal_id": "URLCONNECTION_SSRF_FD/b36c002f4ef7caa43df5026bceb9fbc6", "severity": "moderate", "owasp_category": "a6-misconfiguration", "category": "URLCONNECTION SSRF FD", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt ChatActivity.java:[lines 1073-1142] \nIn class org.atalk.android.gui.chat.ChatActivity$MediaShareAsynTask \nIn method org.atalk.android.gui.chat.ChatActivity$MediaShareAsynTask.getUrlInfo(String) \nAt ChatActivity.java:[line 1125] \nSink method java/net/URL.openConnection()Ljava/net/URLConnection; \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/ChatActivity$MediaShareAsynTask.getUrlInfo(Ljava/lang/String;)Ljava/lang/String; parameter 0 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nAt ChatActivity.java:[line 1082] \nAt ChatActivity.java:[line 1123] \nAt ChatActivity.java:[line 1124].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/android/gui/chat/ChatActivity.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1125, "ruleId": "URLCONNECTION_SSRF_FD", "ruleName": "URLCONNECTION SSRF FD", "contextText": "                HttpURLConnection httpConnection = (HttpURLConnection) mUrl.openConnection();\n", "snippetText": "                URL mUrl = new URL(urlString);\n                HttpURLConnection httpConnection = (HttpURLConnection) mUrl.openConnection();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ChatFragment.java:[lines 567-858] \nIn class org.atalk.android.gui.chat.ChatFragment$2 \nIn method org.atalk.android.gui.chat.ChatFragment$2.onActionItemClicked(ActionMode, MenuItem) \nAt ChatFragment.java:[line 797] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/ChatMessage.getMessage()Ljava/lang/String;.", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/217c08a2ef19527eac791f588b4e8f52", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ChatFragment.java:[lines 567-858] \nIn class org.atalk.android.gui.chat.ChatFragment$2 \nIn method org.atalk.android.gui.chat.ChatFragment$2.onActionItemClicked(ActionMode, MenuItem) \nAt ChatFragment.java:[line 797] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/ChatMessage.getMessage()Ljava/lang/String;.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/android/gui/chat/ChatFragment.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 797, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "                                                file = new File(chatMsg.getMessage());\n", "snippetText": "                                            else if ((file = chatListAdapter.getFileName(cPos)) == null) {\n                                                file = new File(chatMsg.getMessage());\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/FileInputStream.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt MetaContactChatTransport.java:[lines 45-848] \nIn class org.atalk.android.gui.chat.MetaContactChatTransport \nIn method org.atalk.android.gui.chat.MetaContactChatTransport.getFileThumbnail(File) \nAt MetaContactChatTransport.java:[line 826] \nSink method java/io/FileInputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.toString()Ljava/lang/String; \nUnknown source org/atalk/android/gui/chat/MetaContactChatTransport.getFileThumbnail(Ljava/io/File;)[B parameter 0 \nMethod usage not detected \nAt MetaContactChatTransport.java:[line 576] \nAt MetaContactChatTransport.java:[line 591] \nAt MetaContactChatTransport.java:[line 614] \nAt MetaContactChatTransport.java:[line 824].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/99164a5c4e6ecc092662c3e97a38192c", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/FileInputStream.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt MetaContactChatTransport.java:[lines 45-848] \nIn class org.atalk.android.gui.chat.MetaContactChatTransport \nIn method org.atalk.android.gui.chat.MetaContactChatTransport.getFileThumbnail(File) \nAt MetaContactChatTransport.java:[line 826] \nSink method java/io/FileInputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.toString()Ljava/lang/String; \nUnknown source org/atalk/android/gui/chat/MetaContactChatTransport.getFileThumbnail(Ljava/io/File;)[B parameter 0 \nMethod usage not detected \nAt MetaContactChatTransport.java:[line 576] \nAt MetaContactChatTransport.java:[line 591] \nAt MetaContactChatTransport.java:[line 614] \nAt MetaContactChatTransport.java:[line 824].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/android/gui/chat/MetaContactChatTransport.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 826, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "                FileInputStream fis = new FileInputStream(imagePath);\n", "snippetText": "            try {\n                FileInputStream fis = new FileInputStream(imagePath);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt CaptchaDialog.java:[lines 91-340] \nIn class org.atalk.android.gui.chat.conference.CaptchaDialog \nIn method org.atalk.android.gui.chat.conference.CaptchaDialog.initCaptchaData() \nAt CaptchaDialog.java:[line 301] \nSink method java/net/URL.openConnection()Ljava/net/URLConnection; \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/xdata/FormField.getFirstValue()Ljava/lang/String; \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nAt CaptchaDialog.java:[line 300].", "description": "This web server request could be used by an attacker to expose internal services and filesystem. .", "internal_id": "URLCONNECTION_SSRF_FD/46c1150880c522832c4a77f75489cbb0", "severity": "moderate", "owasp_category": "a6-misconfiguration", "category": "URLCONNECTION SSRF FD", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt CaptchaDialog.java:[lines 91-340] \nIn class org.atalk.android.gui.chat.conference.CaptchaDialog \nIn method org.atalk.android.gui.chat.conference.CaptchaDialog.initCaptchaData() \nAt CaptchaDialog.java:[line 301] \nSink method java/net/URL.openConnection()Ljava/net/URLConnection; \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/xdata/FormField.getFirstValue()Ljava/lang/String; \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nAt CaptchaDialog.java:[line 300].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/android/gui/chat/conference/CaptchaDialog.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 301, "ruleId": "URLCONNECTION_SSRF_FD", "ruleName": "URLCONNECTION SSRF FD", "contextText": "                        bmCaptcha = BitmapFactory.decodeStream(uri.openConnection().getInputStream());\n", "snippetText": "                        URL uri = new URL(urlString);\n                        bmCaptcha = BitmapFactory.decodeStream(uri.openConnection().getInputStream());\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileHttpDownloadConversation.java:[lines 59-608] \nIn class org.atalk.android.gui.chat.filetransfer.FileHttpDownloadConversation \nIn method org.atalk.android.gui.chat.filetransfer.FileHttpDownloadConversation.checkProgress() \nAt FileHttpDownloadConversation.java:[line 546] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/filetransfer/FileHttpDownloadConversation.fileName \nAt FileHttpDownloadConversation.java:[line 546].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/6589a8f81afe04b63f3fcfcd1afbe7b9", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileHttpDownloadConversation.java:[lines 59-608] \nIn class org.atalk.android.gui.chat.filetransfer.FileHttpDownloadConversation \nIn method org.atalk.android.gui.chat.filetransfer.FileHttpDownloadConversation.checkProgress() \nAt FileHttpDownloadConversation.java:[line 546] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/filetransfer/FileHttpDownloadConversation.fileName \nAt FileHttpDownloadConversation.java:[line 546].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/android/gui/chat/filetransfer/FileHttpDownloadConversation.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 546, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "            File tmpFile = new File(FileBackend.getaTalkStore(FileBackend.TMP, true), fileName);\n", "snippetText": "        if (lastJobStatus == DownloadManager.STATUS_FAILED || waitTime < 0) {\n            File tmpFile = new File(FileBackend.getaTalkStore(FileBackend.TMP, true), fileName);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileHttpDownloadConversation.java:[lines 59-608] \nIn class org.atalk.android.gui.chat.filetransfer.FileHttpDownloadConversation \nIn method org.atalk.android.gui.chat.filetransfer.FileHttpDownloadConversation.download(Uri) \nAt FileHttpDownloadConversation.java:[line 362] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/filetransfer/FileHttpDownloadConversation.fileName \nAt FileHttpDownloadConversation.java:[line 362].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/cdadd0a870c4a85595460dff85c4c03b", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileHttpDownloadConversation.java:[lines 59-608] \nIn class org.atalk.android.gui.chat.filetransfer.FileHttpDownloadConversation \nIn method org.atalk.android.gui.chat.filetransfer.FileHttpDownloadConversation.download(Uri) \nAt FileHttpDownloadConversation.java:[line 362] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/filetransfer/FileHttpDownloadConversation.fileName \nAt FileHttpDownloadConversation.java:[line 362].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/android/gui/chat/filetransfer/FileHttpDownloadConversation.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 362, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "            File tmpFile = new File(FileBackend.getaTalkStore(FileBackend.TMP, true), fileName);\n", "snippetText": "        try {\n            File tmpFile = new File(FileBackend.getaTalkStore(FileBackend.TMP, true), fileName);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileHttpDownloadConversation.java:[lines 427-500] \nIn class org.atalk.android.gui.chat.filetransfer.FileHttpDownloadConversation$DownloadReceiver \nIn method org.atalk.android.gui.chat.filetransfer.FileHttpDownloadConversation$DownloadReceiver.onReceive(Context, Intent) \nAt FileHttpDownloadConversation.java:[line 443] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/FilePathHelper.getPath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source android/net/Uri.getLastPathSegment()Ljava/lang/String; \nUnknown source android/net/Uri.getPath()Ljava/lang/String; \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getRealPath(Landroid/content/ContentResolver;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getUriRealPathAboveKitkat(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePathWithCreate(Landroid/content/Context;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source android/database/Cursor.getString(I)Ljava/lang/String; \nAt FileHttpDownloadConversation.java:[line 443] \nAt FilePathHelper.java:[line 71] \nAt FilePathHelper.java:[line 73] \nAt FilePathHelper.java:[line 90] \nAt FilePathHelper.java:[line 94] \nAt FilePathHelper.java:[line 219] \nAt FilePathHelper.java:[line 251] \nAt FilePathHelper.java:[line 260].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/6f58d5ba10d25d10b8d770dc8b1ba080", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileHttpDownloadConversation.java:[lines 427-500] \nIn class org.atalk.android.gui.chat.filetransfer.FileHttpDownloadConversation$DownloadReceiver \nIn method org.atalk.android.gui.chat.filetransfer.FileHttpDownloadConversation$DownloadReceiver.onReceive(Context, Intent) \nAt FileHttpDownloadConversation.java:[line 443] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/FilePathHelper.getPath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source android/net/Uri.getLastPathSegment()Ljava/lang/String; \nUnknown source android/net/Uri.getPath()Ljava/lang/String; \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getRealPath(Landroid/content/ContentResolver;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getUriRealPathAboveKitkat(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePathWithCreate(Landroid/content/Context;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source android/database/Cursor.getString(I)Ljava/lang/String; \nAt FileHttpDownloadConversation.java:[line 443] \nAt FilePathHelper.java:[line 71] \nAt FilePathHelper.java:[line 73] \nAt FilePathHelper.java:[line 90] \nAt FilePathHelper.java:[line 94] \nAt FilePathHelper.java:[line 219] \nAt FilePathHelper.java:[line 251] \nAt FilePathHelper.java:[line 260].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/android/gui/chat/filetransfer/FileHttpDownloadConversation.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 443, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "                    File inFile = new File(FilePathHelper.getPath(context, fileUri));\n", "snippetText": "                    Uri fileUri = downloadManager.getUriForDownloadedFile(lastDownloadId);\n                    File inFile = new File(FilePathHelper.getPath(context, fileUri));\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileSendConversation.java:[lines 51-227] \nIn class org.atalk.android.gui.chat.filetransfer.FileSendConversation \nIn method org.atalk.android.gui.chat.filetransfer.FileSendConversation.newInstance(ChatFragment, String, String, String, boolean) \nAt FileSendConversation.java:[line 69] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/filetransfer/FileSendConversation.newInstance(Lorg/atalk/android/gui/chat/ChatFragment;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lorg/atalk/android/gui/chat/filetransfer/FileSendConversation; parameter 1 \nAt ChatFragment.java:[line 1387].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/5b31143120f4398cb65380841b7577fd", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileSendConversation.java:[lines 51-227] \nIn class org.atalk.android.gui.chat.filetransfer.FileSendConversation \nIn method org.atalk.android.gui.chat.filetransfer.FileSendConversation.newInstance(ChatFragment, String, String, String, boolean) \nAt FileSendConversation.java:[line 69] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/filetransfer/FileSendConversation.newInstance(Lorg/atalk/android/gui/chat/ChatFragment;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lorg/atalk/android/gui/chat/filetransfer/FileSendConversation; parameter 1 \nAt ChatFragment.java:[line 1387].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/android/gui/chat/filetransfer/FileSendConversation.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 69, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        fragmentSFC.mXferFile = new File(fileName);\n", "snippetText": "        fragmentSFC.mSendTo = sendTo;\n        fragmentSFC.mXferFile = new File(fileName);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileTransferConversation.java:[lines 62-1015] \nIn class org.atalk.android.gui.chat.filetransfer.FileTransferConversation \nIn method org.atalk.android.gui.chat.filetransfer.FileTransferConversation.setTransferFilePath(String, String) \nAt FileTransferConversation.java:[line 954] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/filetransfer/FileTransferConversation.setTransferFilePath(Ljava/lang/String;Ljava/lang/String;)V parameter 1 \nAt FileHttpDownloadConversation.java:[line 280] \nAt FileReceiveConversation.java:[line 222].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/90612de905216430ed884d05e87d5190", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileTransferConversation.java:[lines 62-1015] \nIn class org.atalk.android.gui.chat.filetransfer.FileTransferConversation \nIn method org.atalk.android.gui.chat.filetransfer.FileTransferConversation.setTransferFilePath(String, String) \nAt FileTransferConversation.java:[line 954] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/filetransfer/FileTransferConversation.setTransferFilePath(Ljava/lang/String;Ljava/lang/String;)V parameter 1 \nAt FileHttpDownloadConversation.java:[line 280] \nAt FileReceiveConversation.java:[line 222].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/android/gui/chat/filetransfer/FileTransferConversation.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 954, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        mXferFile = new File(downloadDir, fileName);\n", "snippetText": "        File downloadDir = FileBackend.getaTalkStore(downloadPath, true);\n        mXferFile = new File(downloadDir, fileName);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileTransferConversation.java:[lines 62-1015] \nIn class org.atalk.android.gui.chat.filetransfer.FileTransferConversation \nIn method org.atalk.android.gui.chat.filetransfer.FileTransferConversation.setTransferFilePath(String, String) \nAt FileTransferConversation.java:[line 965] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/filetransfer/FileTransferConversation.setTransferFilePath(Ljava/lang/String;Ljava/lang/String;)V parameter 1 \nAt FileHttpDownloadConversation.java:[line 280] \nAt FileReceiveConversation.java:[line 222] \nAt FileTransferConversation.java:[line 963] \nAt FileTransferConversation.java:[line 964].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/4803e169f43f5b7d93067a8d346b551b", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileTransferConversation.java:[lines 62-1015] \nIn class org.atalk.android.gui.chat.filetransfer.FileTransferConversation \nIn method org.atalk.android.gui.chat.filetransfer.FileTransferConversation.setTransferFilePath(String, String) \nAt FileTransferConversation.java:[line 965] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/filetransfer/FileTransferConversation.setTransferFilePath(Ljava/lang/String;Ljava/lang/String;)V parameter 1 \nAt FileHttpDownloadConversation.java:[line 280] \nAt FileReceiveConversation.java:[line 222] \nAt FileTransferConversation.java:[line 963] \nAt FileTransferConversation.java:[line 964].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/android/gui/chat/filetransfer/FileTransferConversation.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 965, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "            mXferFile = new File(downloadDir, newFileName);\n", "snippetText": "                    + ++index + fileName.substring(filenameLength);\n            mXferFile = new File(downloadDir, newFileName);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt IBRCaptchaProcessDialog.java:[lines 72-579] \nIn class org.atalk.android.gui.login.IBRCaptchaProcessDialog \nIn method org.atalk.android.gui.login.IBRCaptchaProcessDialog.lambda$getCaptcha$2(String) \nAt IBRCaptchaProcessDialog.java:[line 332] \nSink method java/net/URL.openConnection()Ljava/net/URLConnection; \nSink parameter 0 \nUnknown source org/atalk/android/gui/login/IBRCaptchaProcessDialog.lambda$getCaptcha$2(Ljava/lang/String;)V parameter 0 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nMethod usage not detected \nAt IBRCaptchaProcessDialog.java:[line 330] \nAt IBRCaptchaProcessDialog.java:[line 331].", "description": "This web server request could be used by an attacker to expose internal services and filesystem. .", "internal_id": "URLCONNECTION_SSRF_FD/6559cba193f0ef3def9124492dd831f9", "severity": "moderate", "owasp_category": "a6-misconfiguration", "category": "URLCONNECTION SSRF FD", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt IBRCaptchaProcessDialog.java:[lines 72-579] \nIn class org.atalk.android.gui.login.IBRCaptchaProcessDialog \nIn method org.atalk.android.gui.login.IBRCaptchaProcessDialog.lambda$getCaptcha$2(String) \nAt IBRCaptchaProcessDialog.java:[line 332] \nSink method java/net/URL.openConnection()Ljava/net/URLConnection; \nSink parameter 0 \nUnknown source org/atalk/android/gui/login/IBRCaptchaProcessDialog.lambda$getCaptcha$2(Ljava/lang/String;)V parameter 0 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nMethod usage not detected \nAt IBRCaptchaProcessDialog.java:[line 330] \nAt IBRCaptchaProcessDialog.java:[line 331].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/android/gui/login/IBRCaptchaProcessDialog.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 332, "ruleId": "URLCONNECTION_SSRF_FD", "ruleName": "URLCONNECTION SSRF FD", "contextText": "                    mCaptcha = BitmapFactory.decodeStream(uri.openConnection().getInputStream());\n", "snippetText": "                    URL uri = new URL(urlString);\n                    mCaptcha = BitmapFactory.decodeStream(uri.openConnection().getInputStream());\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt MediaPreviewAdapter.java:[lines 39-118] \nIn class org.atalk.android.gui.share.MediaPreviewAdapter \nIn method org.atalk.android.gui.share.MediaPreviewAdapter.onBindViewHolder(MediaPreviewAdapter$MediaPreviewViewHolder, int) \nAt MediaPreviewAdapter.java:[line 72] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/net/Uri.getLastPathSegment()Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getPath(Landroid/content/Context;Lorg/atalk/android/gui/share/Attachment;)Ljava/lang/String; \nUnknown source android/net/Uri.getPath()Ljava/lang/String; \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getRealPath(Landroid/content/ContentResolver;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getUriRealPathAboveKitkat(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePathWithCreate(Landroid/content/Context;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source android/database/Cursor.getString(I)Ljava/lang/String; \nAt MediaPreviewAdapter.java:[line 72] \nAt FilePathHelper.java:[line 56] \nAt FilePathHelper.java:[line 58] \nAt FilePathHelper.java:[line 90] \nAt FilePathHelper.java:[line 94] \nAt FilePathHelper.java:[line 219] \nAt FilePathHelper.java:[line 251] \nAt FilePathHelper.java:[line 260].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/13675f3074f37704827bb2b731dc5ad3", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt MediaPreviewAdapter.java:[lines 39-118] \nIn class org.atalk.android.gui.share.MediaPreviewAdapter \nIn method org.atalk.android.gui.share.MediaPreviewAdapter.onBindViewHolder(MediaPreviewAdapter$MediaPreviewViewHolder, int) \nAt MediaPreviewAdapter.java:[line 72] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/net/Uri.getLastPathSegment()Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getPath(Landroid/content/Context;Lorg/atalk/android/gui/share/Attachment;)Ljava/lang/String; \nUnknown source android/net/Uri.getPath()Ljava/lang/String; \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getRealPath(Landroid/content/ContentResolver;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getUriRealPathAboveKitkat(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePathWithCreate(Landroid/content/Context;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source android/database/Cursor.getString(I)Ljava/lang/String; \nAt MediaPreviewAdapter.java:[line 72] \nAt FilePathHelper.java:[line 56] \nAt FilePathHelper.java:[line 58] \nAt FilePathHelper.java:[line 90] \nAt FilePathHelper.java:[line 94] \nAt FilePathHelper.java:[line 219] \nAt FilePathHelper.java:[line 251] \nAt FilePathHelper.java:[line 260].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/android/gui/share/MediaPreviewAdapter.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 72, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        final File file = new File(FilePathHelper.getPath(chatActivity, attachment));\n", "snippetText": "        final Attachment attachment = mediaPreviews.get(position);\n        final File file = new File(FilePathHelper.getPath(chatActivity, attachment));\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt EntityListHelper.java:[lines 328-372] \nIn class org.atalk.android.gui.util.EntityListHelper$doEraseAllEntityHistory \nIn method org.atalk.android.gui.util.EntityListHelper$doEraseAllEntityHistory.doInBackground(Void[]) \nAt EntityListHelper.java:[line 352] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nUnknown source net/java/sip/communicator/service/msghistory/MessageHistoryService.getLocallyStoredFilePath()Ljava/util/List; \nAt EntityListHelper.java:[line 351].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/d5bd2cc47d94b9dee0e6352251a114f2", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt EntityListHelper.java:[lines 328-372] \nIn class org.atalk.android.gui.util.EntityListHelper$doEraseAllEntityHistory \nIn method org.atalk.android.gui.util.EntityListHelper$doEraseAllEntityHistory.doInBackground(Void[]) \nAt EntityListHelper.java:[line 352] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nUnknown source net/java/sip/communicator/service/msghistory/MessageHistoryService.getLocallyStoredFilePath()Ljava/util/List; \nAt EntityListHelper.java:[line 351].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/android/gui/util/EntityListHelper.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 352, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "                    File file = new File(msgFile);\n", "snippetText": "                for (String msgFile : msgFiles) {\n                    File file = new File(msgFile);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt EntityListHelper.java:[lines 222-290] \nIn class org.atalk.android.gui.util.EntityListHelper$doEraseEntityChatHistory \nIn method org.atalk.android.gui.util.EntityListHelper$doEraseEntityChatHistory.doInBackground(Object[]) \nAt EntityListHelper.java:[line 254] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nUnknown source net/java/sip/communicator/service/msghistory/MessageHistoryService.getLocallyStoredFilePath(Ljava/lang/Object;)Ljava/util/List; \nAt EntityListHelper.java:[line 253].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/18f6280b6bd1520ac45fa95e09c7445a", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt EntityListHelper.java:[lines 222-290] \nIn class org.atalk.android.gui.util.EntityListHelper$doEraseEntityChatHistory \nIn method org.atalk.android.gui.util.EntityListHelper$doEraseEntityChatHistory.doInBackground(Object[]) \nAt EntityListHelper.java:[line 254] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nUnknown source net/java/sip/communicator/service/msghistory/MessageHistoryService.getLocallyStoredFilePath(Ljava/lang/Object;)Ljava/util/List; \nAt EntityListHelper.java:[line 253].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/android/gui/util/EntityListHelper.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 254, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "                            msgFiles.add(new File(filePath));\n", "snippetText": "                        for (String filePath : filePathDel) {\n                            msgFiles.add(new File(filePath));\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt XhtmlImageParser.java:[lines 68-114] \nIn class org.atalk.android.gui.util.XhtmlImageParser$HttpGetDrawableTask \nIn method org.atalk.android.gui.util.XhtmlImageParser$HttpGetDrawableTask.getDrawable(String) \nAt XhtmlImageParser.java:[line 104] \nSink method java/net/URL.openConnection()Ljava/net/URLConnection; \nSink parameter 0 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nUnknown source org/atalk/android/gui/util/XhtmlImageParser$HttpGetDrawableTask.getDrawable(Ljava/lang/String;)Landroid/graphics/drawable/Drawable; parameter 0 \nMethod usage not detected \nAt XhtmlImageParser.java:[line 68] \nAt XhtmlImageParser.java:[line 74] \nAt XhtmlImageParser.java:[line 101] \nAt XhtmlImageParser.java:[line 103].", "description": "This web server request could be used by an attacker to expose internal services and filesystem. .", "internal_id": "URLCONNECTION_SSRF_FD/86a98af771f8e4cc53d10a2ef79d2421", "severity": "moderate", "owasp_category": "a6-misconfiguration", "category": "URLCONNECTION SSRF FD", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt XhtmlImageParser.java:[lines 68-114] \nIn class org.atalk.android.gui.util.XhtmlImageParser$HttpGetDrawableTask \nIn method org.atalk.android.gui.util.XhtmlImageParser$HttpGetDrawableTask.getDrawable(String) \nAt XhtmlImageParser.java:[line 104] \nSink method java/net/URL.openConnection()Ljava/net/URLConnection; \nSink parameter 0 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nUnknown source org/atalk/android/gui/util/XhtmlImageParser$HttpGetDrawableTask.getDrawable(Ljava/lang/String;)Landroid/graphics/drawable/Drawable; parameter 0 \nMethod usage not detected \nAt XhtmlImageParser.java:[line 68] \nAt XhtmlImageParser.java:[line 74] \nAt XhtmlImageParser.java:[line 101] \nAt XhtmlImageParser.java:[line 103].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/android/gui/util/XhtmlImageParser.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 104, "ruleId": "URLCONNECTION_SSRF_FD", "ruleName": "URLCONNECTION SSRF FD", "contextText": "                URLConnection urlConnection = sourceURL.openConnection();\n", "snippetText": "                URL sourceURL = new URL(urlString);\n                URLConnection urlConnection = sourceURL.openConnection();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "WebView with JavaScript enabled \nAt WebViewFragment.java:[lines 48-264] \nIn class org.atalk.android.gui.webview.WebViewFragment \nIn method org.atalk.android.gui.webview.WebViewFragment.onCreateView(LayoutInflater, ViewGroup, Bundle) \nAt WebViewFragment.java:[line 86].", "description": "WebView with JavaScript enabled .", "internal_id": "ANDROID_WEB_VIEW_JAVASCRIPT/46337f9be1af4797f43e7d0893a9ebaf", "severity": "moderate", "owasp_category": "", "category": "ANDROID WEB VIEW JAVASCRIPT", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "WebView with JavaScript enabled \nAt WebViewFragment.java:[lines 48-264] \nIn class org.atalk.android.gui.webview.WebViewFragment \nIn method org.atalk.android.gui.webview.WebViewFragment.onCreateView(LayoutInflater, ViewGroup, Bundle) \nAt WebViewFragment.java:[line 86].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/android/gui/webview/WebViewFragment.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 86, "ruleId": "ANDROID_WEB_VIEW_JAVASCRIPT", "ruleName": "ANDROID WEB VIEW JAVASCRIPT", "contextText": "        webSettings.setJavaScriptEnabled(true);\n", "snippetText": "        final WebSettings webSettings = webview.getSettings();\n        webSettings.setJavaScriptEnabled(true);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "WebView with JavaScript interface \nAt WebViewFragment.java:[lines 48-264] \nIn class org.atalk.android.gui.webview.WebViewFragment \nIn method org.atalk.android.gui.webview.WebViewFragment.onCreateView(LayoutInflater, ViewGroup, Bundle) \nAt WebViewFragment.java:[line 89].", "description": "WebView with JavaScript interface .", "internal_id": "ANDROID_WEB_VIEW_JAVASCRIPT_INTERFACE/20d15315fa440f76e4627d9cff97be7f", "severity": "moderate", "owasp_category": "", "category": "ANDROID WEB VIEW JAVASCRIPT INTERFACE", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "WebView with JavaScript interface \nAt WebViewFragment.java:[lines 48-264] \nIn class org.atalk.android.gui.webview.WebViewFragment \nIn method org.atalk.android.gui.webview.WebViewFragment.onCreateView(LayoutInflater, ViewGroup, Bundle) \nAt WebViewFragment.java:[line 89].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/android/gui/webview/WebViewFragment.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 89, "ruleId": "ANDROID_WEB_VIEW_JAVASCRIPT_INTERFACE", "ruleName": "ANDROID WEB VIEW JAVASCRIPT INTERFACE", "contextText": "        webview.addJavascriptInterface(aTalkApp.getGlobalContext(), \"Android\");\n", "snippetText": "\n        webview.addJavascriptInterface(aTalkApp.getGlobalContext(), \"Android\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt WebViewFragment.java:[lines 48-264] \nIn class org.atalk.android.gui.webview.WebViewFragment \nIn method org.atalk.android.gui.webview.WebViewFragment.getBitmapFromURL(String) \nAt WebViewFragment.java:[line 227] \nSink method java/net/URL.openConnection()Ljava/net/URLConnection; \nSink parameter 0 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nUnknown source org/atalk/android/gui/webview/WebViewFragment.getBitmapFromURL(Ljava/lang/String;)Landroid/graphics/Bitmap; parameter 0 \nMethod usage not detected \nAt WebViewFragment.java:[line 226].", "description": "This web server request could be used by an attacker to expose internal services and filesystem. .", "internal_id": "URLCONNECTION_SSRF_FD/1038a306678e628b4a41b30ad8884a8c", "severity": "moderate", "owasp_category": "a6-misconfiguration", "category": "URLCONNECTION SSRF FD", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt WebViewFragment.java:[lines 48-264] \nIn class org.atalk.android.gui.webview.WebViewFragment \nIn method org.atalk.android.gui.webview.WebViewFragment.getBitmapFromURL(String) \nAt WebViewFragment.java:[line 227] \nSink method java/net/URL.openConnection()Ljava/net/URLConnection; \nSink parameter 0 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nUnknown source org/atalk/android/gui/webview/WebViewFragment.getBitmapFromURL(Ljava/lang/String;)Landroid/graphics/Bitmap; parameter 0 \nMethod usage not detected \nAt WebViewFragment.java:[line 226].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/android/gui/webview/WebViewFragment.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 227, "ruleId": "URLCONNECTION_SSRF_FD", "ruleName": "URLCONNECTION SSRF FD", "contextText": "            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n", "snippetText": "            URL url = new URL(src);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input \nAt AudioBgService.java:[lines 37-624] \nIn class org.atalk.android.plugin.audioservice.AudioBgService \nIn method org.atalk.android.plugin.audioservice.AudioBgService.createMediaVoiceFile() \nAt AudioBgService.java:[line 620] \nSink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; \nSink parameter 0 \nUnknown source java/io/File.<init>(Ljava/lang/String;)V \nUnknown source org/atalk/persistance/FileBackend.getaTalkStore(Ljava/lang/String;Z)Ljava/io/File; \nAt AudioBgService.java:[line 613] \nAt FileBackend.java:[line 236].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/9adeddd950889eb75ae431d7e4dde1c8", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input \nAt AudioBgService.java:[lines 37-624] \nIn class org.atalk.android.plugin.audioservice.AudioBgService \nIn method org.atalk.android.plugin.audioservice.AudioBgService.createMediaVoiceFile() \nAt AudioBgService.java:[line 620] \nSink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; \nSink parameter 0 \nUnknown source java/io/File.<init>(Ljava/lang/String;)V \nUnknown source org/atalk/persistance/FileBackend.getaTalkStore(Ljava/lang/String;Z)Ljava/io/File; \nAt AudioBgService.java:[line 613] \nAt FileBackend.java:[line 236].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/android/plugin/audioservice/AudioBgService.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 620, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "            voiceFile = File.createTempFile(\"voice-\", \".3gp\", mediaDir);\n", "snippetText": "        try {\n            voiceFile = File.createTempFile(\"voice-\", \".3gp\", mediaDir);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AudioBgService.java:[lines 37-624] \nIn class org.atalk.android.plugin.audioservice.AudioBgService \nIn method org.atalk.android.plugin.audioservice.AudioBgService.onStartCommand(Intent, int, int) \nAt AudioBgService.java:[line 161] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String;.", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/b9378107d0a1e52172e28b4129a0f6af", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AudioBgService.java:[lines 37-624] \nIn class org.atalk.android.plugin.audioservice.AudioBgService \nIn method org.atalk.android.plugin.audioservice.AudioBgService.onStartCommand(Intent, int, int) \nAt AudioBgService.java:[line 161] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String;.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/android/plugin/audioservice/AudioBgService.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 161, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "                    File soundFile = new File(audioFile.getAbsolutePath());\n", "snippetText": "                if (audioFile != null) {\n                    File soundFile = new File(audioFile.getAbsolutePath());\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt CertConfigEntryDialog.java:[lines 56-479] \nIn class org.atalk.android.plugin.certconfig.CertConfigEntryDialog \nIn method org.atalk.android.plugin.certconfig.CertConfigEntryDialog.loadKeyStore() \nAt CertConfigEntryDialog.java:[line 232] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/lang/CharSequence.toString()Ljava/lang/String; \nUnknown source org/atalk/android/gui/util/ViewUtil.toString(Landroid/widget/TextView;)Ljava/lang/String; \nUnknown source android/widget/TextView.getText()Ljava/lang/CharSequence; \nAt ViewUtil.java:[line 185] \nAt CertConfigEntryDialog.java:[line 228].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/13afeb63634dc587d4a0a8b592f35dde", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt CertConfigEntryDialog.java:[lines 56-479] \nIn class org.atalk.android.plugin.certconfig.CertConfigEntryDialog \nIn method org.atalk.android.plugin.certconfig.CertConfigEntryDialog.loadKeyStore() \nAt CertConfigEntryDialog.java:[line 232] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/lang/CharSequence.toString()Ljava/lang/String; \nUnknown source org/atalk/android/gui/util/ViewUtil.toString(Landroid/widget/TextView;)Ljava/lang/String; \nUnknown source android/widget/TextView.getText()Ljava/lang/CharSequence; \nAt ViewUtil.java:[line 185] \nAt CertConfigEntryDialog.java:[line 228].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/android/plugin/certconfig/CertConfigEntryDialog.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 232, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        final File f = new File(keyStore);\n", "snippetText": "\n        final File f = new File(keyStore);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt CertConfigEntryDialog.java:[lines 56-479] \nIn class org.atalk.android.plugin.certconfig.CertConfigEntryDialog \nIn method org.atalk.android.plugin.certconfig.CertConfigEntryDialog.onActivityResult(int, int, Intent) \nAt CertConfigEntryDialog.java:[line 329] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/FilePathHelper.getPath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source android/net/Uri.getLastPathSegment()Ljava/lang/String; \nUnknown source android/net/Uri.getPath()Ljava/lang/String; \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getRealPath(Landroid/content/ContentResolver;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getUriRealPathAboveKitkat(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePathWithCreate(Landroid/content/Context;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source android/database/Cursor.getString(I)Ljava/lang/String; \nAt CertConfigEntryDialog.java:[line 329] \nAt FilePathHelper.java:[line 71] \nAt FilePathHelper.java:[line 73] \nAt FilePathHelper.java:[line 90] \nAt FilePathHelper.java:[line 94] \nAt FilePathHelper.java:[line 219] \nAt FilePathHelper.java:[line 251] \nAt FilePathHelper.java:[line 260].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/5aeb97cf707eabc6e20085ae2a16822e", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt CertConfigEntryDialog.java:[lines 56-479] \nIn class org.atalk.android.plugin.certconfig.CertConfigEntryDialog \nIn method org.atalk.android.plugin.certconfig.CertConfigEntryDialog.onActivityResult(int, int, Intent) \nAt CertConfigEntryDialog.java:[line 329] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/FilePathHelper.getPath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source android/net/Uri.getLastPathSegment()Ljava/lang/String; \nUnknown source android/net/Uri.getPath()Ljava/lang/String; \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getRealPath(Landroid/content/ContentResolver;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getUriRealPathAboveKitkat(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePathWithCreate(Landroid/content/Context;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source android/database/Cursor.getString(I)Ljava/lang/String; \nAt CertConfigEntryDialog.java:[line 329] \nAt FilePathHelper.java:[line 71] \nAt FilePathHelper.java:[line 73] \nAt FilePathHelper.java:[line 90] \nAt FilePathHelper.java:[line 94] \nAt FilePathHelper.java:[line 219] \nAt FilePathHelper.java:[line 251] \nAt FilePathHelper.java:[line 260].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/android/plugin/certconfig/CertConfigEntryDialog.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 329, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "                    File inFile = new File(FilePathHelper.getPath(mContext, fileUri));\n", "snippetText": "                if (fileUri != null) {\n                    File inFile = new File(FilePathHelper.getPath(mContext, fileUri));\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection \nAt ExceptionHandler.java:[lines 49-130] \nIn class org.atalk.android.plugin.errorhandler.ExceptionHandler \nIn method org.atalk.android.plugin.errorhandler.ExceptionHandler.uncaughtException(Thread, Throwable) \nAt ExceptionHandler.java:[line 87] \nSink method java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nAt ExceptionHandler.java:[line 87].", "description": "This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection .", "internal_id": "COMMAND_INJECTION/881c381aa8c1bce6aec5bf2465ba2db0", "severity": "moderate", "owasp_category": "", "category": "Command Injection", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection \nAt ExceptionHandler.java:[lines 49-130] \nIn class org.atalk.android.plugin.errorhandler.ExceptionHandler \nIn method org.atalk.android.plugin.errorhandler.ExceptionHandler.uncaughtException(Thread, Throwable) \nAt ExceptionHandler.java:[line 87] \nSink method java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nAt ExceptionHandler.java:[line 87].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/android/plugin/errorhandler/ExceptionHandler.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 87, "ruleId": "COMMAND_INJECTION", "ruleName": "Command Injection", "contextText": "\t\t\tRuntime.getRuntime().exec(\"logcat -v time -f \" + logcatFile.getAbsolutePath());\n", "snippetText": "\t\t\t\t\t.getPrivatePersistentFile(logcatFN, FileCategory.LOG);\n\t\t\tRuntime.getRuntime().exec(\"logcat -v time -f \" + logcatFile.getAbsolutePath());\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input \nAt TTSActivity.java:[lines 30-407] \nIn class org.atalk.android.plugin.textspeech.TTSActivity \nIn method org.atalk.android.plugin.textspeech.TTSActivity.createTtsSpeechFile() \nAt TTSActivity.java:[line 387] \nSink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; \nSink parameter 0 \nUnknown source java/io/File.<init>(Ljava/lang/String;)V \nUnknown source org/atalk/persistance/FileBackend.getaTalkStore(Ljava/lang/String;Z)Ljava/io/File; \nAt TTSActivity.java:[line 380] \nAt FileBackend.java:[line 236].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/4787557ef1fe969d3dc752a37de11639", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input \nAt TTSActivity.java:[lines 30-407] \nIn class org.atalk.android.plugin.textspeech.TTSActivity \nIn method org.atalk.android.plugin.textspeech.TTSActivity.createTtsSpeechFile() \nAt TTSActivity.java:[line 387] \nSink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; \nSink parameter 0 \nUnknown source java/io/File.<init>(Ljava/lang/String;)V \nUnknown source org/atalk/persistance/FileBackend.getaTalkStore(Ljava/lang/String;Z)Ljava/io/File; \nAt TTSActivity.java:[line 380] \nAt FileBackend.java:[line 236].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/android/plugin/textspeech/TTSActivity.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 387, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "            ttsFile = File.createTempFile(\"tts_\", \".wav\", mediaDir);\n", "snippetText": "        try {\n            ttsFile = File.createTempFile(\"tts_\", \".wav\", mediaDir);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt TTSActivity.java:[lines 30-407] \nIn class org.atalk.android.plugin.textspeech.TTSActivity \nIn method org.atalk.android.plugin.textspeech.TTSActivity.saveToAudioFile(String) \nAt TTSActivity.java:[line 349] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String;.", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/627a63c1c9a901a422f1f86a68f38f37", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt TTSActivity.java:[lines 30-407] \nIn class org.atalk.android.plugin.textspeech.TTSActivity \nIn method org.atalk.android.plugin.textspeech.TTSActivity.saveToAudioFile(String) \nAt TTSActivity.java:[line 349] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String;.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/android/plugin/textspeech/TTSActivity.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 349, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        mTTS.synthesizeToFile(text, null, new File(audioFilename), mUtteranceID);\n", "snippetText": "\n        mTTS.synthesizeToFile(text, null, new File(audioFilename), mUtteranceID);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "Possible information exposure through an error message \nAt AndroidLogFormatter.java:[lines 19-128] \nIn class org.atalk.android.util.AndroidLogFormatter \nIn method org.atalk.android.util.AndroidLogFormatter.format(LogRecord) \nAt AndroidLogFormatter.java:[line 78].", "description": "Possible information exposure through an error message .", "internal_id": "INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE/61577036e8d8e5b0d5603669fc466184", "severity": "moderate", "owasp_category": "", "category": "INFORMATION EXPOSURE THROUGH AN ERROR MESSAGE", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Possible information exposure through an error message \nAt AndroidLogFormatter.java:[lines 19-128] \nIn class org.atalk.android.util.AndroidLogFormatter \nIn method org.atalk.android.util.AndroidLogFormatter.format(LogRecord) \nAt AndroidLogFormatter.java:[line 78].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/android/util/AndroidLogFormatter.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 78, "ruleId": "INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE", "ruleName": "INFORMATION EXPOSURE THROUGH AN ERROR MESSAGE", "contextText": "\t\t\t\trecord.getThrown().printStackTrace(pw);\n", "snippetText": "\t\t\t\tPrintWriter pw = new PrintWriter(sw);\n\t\t\t\trecord.getThrown().printStackTrace(pw);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "Unsafe comparison of hash that are susceptible to timing attack \nAt X509CertificateView.java:[lines 55-370] \nIn class org.atalk.impl.androidcertdialog.X509CertificateView \nIn method org.atalk.impl.androidcertdialog.X509CertificateView.renderX509(StringBuilder, X509Certificate) \nAt X509CertificateView.java:[line 146] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source java/util/Map$Entry.getKey()Ljava/lang/Object; \nUnknown source org/atalk/impl/androidcertdialog/X509CertificateView.splitRdn(Ljava/lang/String;)Ljava/util/Map; \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nUnknown source android/content/Context.getString(I)Ljava/lang/String; \nUnknown source javax/security/auth/x500/X500Principal.getName()Ljava/lang/String; \nUnknown source java/util/Map.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; \nUnknown source java/util/Map.entrySet()Ljava/util/Set; \nUnknown source org/atalk/impl/androidcertdialog/X509CertificateView.splitRdn(Ljava/lang/String;)Ljava/util/Map; parameter 0 \nAt X509CertificateView.java:[line 132] \nAt X509CertificateView.java:[line 134] \nAt X509CertificateView.java:[line 135] \nAt X509CertificateView.java:[line 363] \nAt X509CertificateView.java:[line 368].", "description": "Unsafe comparison of hash that are susceptible to timing attack .", "internal_id": "UNSAFE_HASH_EQUALS/336a00303a43b75485d72f7cc061ba47", "severity": "moderate", "owasp_category": "", "category": "UNSAFE HASH EQUALS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Unsafe comparison of hash that are susceptible to timing attack \nAt X509CertificateView.java:[lines 55-370] \nIn class org.atalk.impl.androidcertdialog.X509CertificateView \nIn method org.atalk.impl.androidcertdialog.X509CertificateView.renderX509(StringBuilder, X509Certificate) \nAt X509CertificateView.java:[line 146] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source java/util/Map$Entry.getKey()Ljava/lang/Object; \nUnknown source org/atalk/impl/androidcertdialog/X509CertificateView.splitRdn(Ljava/lang/String;)Ljava/util/Map; \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nUnknown source android/content/Context.getString(I)Ljava/lang/String; \nUnknown source javax/security/auth/x500/X500Principal.getName()Ljava/lang/String; \nUnknown source java/util/Map.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; \nUnknown source java/util/Map.entrySet()Ljava/util/Set; \nUnknown source org/atalk/impl/androidcertdialog/X509CertificateView.splitRdn(Ljava/lang/String;)Ljava/util/Map; parameter 0 \nAt X509CertificateView.java:[line 132] \nAt X509CertificateView.java:[line 134] \nAt X509CertificateView.java:[line 135] \nAt X509CertificateView.java:[line 363] \nAt X509CertificateView.java:[line 368].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/androidcertdialog/X509CertificateView.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 146, "ruleId": "UNSAFE_HASH_EQUALS", "ruleName": "UNSAFE HASH EQUALS", "contextText": "                if ((\"!\" + lblKey + \"!\").equals(lbl))\n", "snippetText": "                }\n                if ((\"!\" + lblKey + \"!\").equals(lbl))\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "Unsafe comparison of hash that are susceptible to timing attack \nAt X509CertificateView.java:[lines 55-370] \nIn class org.atalk.impl.androidcertdialog.X509CertificateView \nIn method org.atalk.impl.androidcertdialog.X509CertificateView.renderX509(StringBuilder, X509Certificate) \nAt X509CertificateView.java:[line 173] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source java/util/Map$Entry.getKey()Ljava/lang/Object; \nUnknown source org/atalk/impl/androidcertdialog/X509CertificateView.splitRdn(Ljava/lang/String;)Ljava/util/Map; \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nUnknown source android/content/Context.getString(I)Ljava/lang/String; \nUnknown source javax/security/auth/x500/X500Principal.getName()Ljava/lang/String; \nUnknown source java/util/Map.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; \nUnknown source java/util/Map.entrySet()Ljava/util/Set; \nUnknown source org/atalk/impl/androidcertdialog/X509CertificateView.splitRdn(Ljava/lang/String;)Ljava/util/Map; parameter 0 \nAt X509CertificateView.java:[line 159] \nAt X509CertificateView.java:[line 161] \nAt X509CertificateView.java:[line 162] \nAt X509CertificateView.java:[line 363] \nAt X509CertificateView.java:[line 368].", "description": "Unsafe comparison of hash that are susceptible to timing attack .", "internal_id": "UNSAFE_HASH_EQUALS/4cbcda9466d7f162c402d70491236462", "severity": "moderate", "owasp_category": "", "category": "UNSAFE HASH EQUALS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Unsafe comparison of hash that are susceptible to timing attack \nAt X509CertificateView.java:[lines 55-370] \nIn class org.atalk.impl.androidcertdialog.X509CertificateView \nIn method org.atalk.impl.androidcertdialog.X509CertificateView.renderX509(StringBuilder, X509Certificate) \nAt X509CertificateView.java:[line 173] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source java/util/Map$Entry.getKey()Ljava/lang/Object; \nUnknown source org/atalk/impl/androidcertdialog/X509CertificateView.splitRdn(Ljava/lang/String;)Ljava/util/Map; \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nUnknown source android/content/Context.getString(I)Ljava/lang/String; \nUnknown source javax/security/auth/x500/X500Principal.getName()Ljava/lang/String; \nUnknown source java/util/Map.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; \nUnknown source java/util/Map.entrySet()Ljava/util/Set; \nUnknown source org/atalk/impl/androidcertdialog/X509CertificateView.splitRdn(Ljava/lang/String;)Ljava/util/Map; parameter 0 \nAt X509CertificateView.java:[line 159] \nAt X509CertificateView.java:[line 161] \nAt X509CertificateView.java:[line 162] \nAt X509CertificateView.java:[line 363] \nAt X509CertificateView.java:[line 368].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/androidcertdialog/X509CertificateView.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 173, "ruleId": "UNSAFE_HASH_EQUALS", "ruleName": "UNSAFE HASH EQUALS", "contextText": "                if ((\"!\" + lblKey + \"!\").equals(lbl))\n", "snippetText": "                }\n                if ((\"!\" + lblKey + \"!\").equals(lbl))\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt UpdateServiceImpl.java:[lines 40-436] \nIn class org.atalk.impl.androidupdate.UpdateServiceImpl \nIn method org.atalk.impl.androidupdate.UpdateServiceImpl.checkForUpdates(boolean) \nAt UpdateServiceImpl.java:[line 110] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/FilePathHelper.getPath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source android/net/Uri.getLastPathSegment()Ljava/lang/String; \nUnknown source android/net/Uri.getPath()Ljava/lang/String; \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getRealPath(Landroid/content/ContentResolver;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getUriRealPathAboveKitkat(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePathWithCreate(Landroid/content/Context;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source android/database/Cursor.getString(I)Ljava/lang/String; \nAt UpdateServiceImpl.java:[line 110] \nAt FilePathHelper.java:[line 71] \nAt FilePathHelper.java:[line 73] \nAt FilePathHelper.java:[line 90] \nAt FilePathHelper.java:[line 94] \nAt FilePathHelper.java:[line 219] \nAt FilePathHelper.java:[line 251] \nAt FilePathHelper.java:[line 260].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/a827f89780a57e54f01a64557b61d068", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt UpdateServiceImpl.java:[lines 40-436] \nIn class org.atalk.impl.androidupdate.UpdateServiceImpl \nIn method org.atalk.impl.androidupdate.UpdateServiceImpl.checkForUpdates(boolean) \nAt UpdateServiceImpl.java:[line 110] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/FilePathHelper.getPath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source android/net/Uri.getLastPathSegment()Ljava/lang/String; \nUnknown source android/net/Uri.getPath()Ljava/lang/String; \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getRealPath(Landroid/content/ContentResolver;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getUriRealPathAboveKitkat(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePathWithCreate(Landroid/content/Context;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source android/database/Cursor.getString(I)Ljava/lang/String; \nAt UpdateServiceImpl.java:[line 110] \nAt FilePathHelper.java:[line 71] \nAt FilePathHelper.java:[line 73] \nAt FilePathHelper.java:[line 90] \nAt FilePathHelper.java:[line 94] \nAt FilePathHelper.java:[line 219] \nAt FilePathHelper.java:[line 251] \nAt FilePathHelper.java:[line 260].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/debug/java/org/atalk/impl/androidupdate/UpdateServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 110, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "                    File apkFile = new File(FilePathHelper.getPath(aTalkApp.getGlobalContext(), fileUri));\n", "snippetText": "                    Uri fileUri = downloadManager.getUriForDownloadedFile(lastDownload);\n                    File apkFile = new File(FilePathHelper.getPath(aTalkApp.getGlobalContext(), fileUri));\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt UpdateServiceImpl.java:[lines 240-275] \nIn class org.atalk.impl.androidupdate.UpdateServiceImpl$DownloadReceiver \nIn method org.atalk.impl.androidupdate.UpdateServiceImpl$DownloadReceiver.onReceive(Context, Intent) \nAt UpdateServiceImpl.java:[line 253] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/FilePathHelper.getPath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source android/net/Uri.getLastPathSegment()Ljava/lang/String; \nUnknown source android/net/Uri.getPath()Ljava/lang/String; \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getRealPath(Landroid/content/ContentResolver;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getUriRealPathAboveKitkat(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePathWithCreate(Landroid/content/Context;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source android/database/Cursor.getString(I)Ljava/lang/String; \nAt UpdateServiceImpl.java:[line 253] \nAt FilePathHelper.java:[line 71] \nAt FilePathHelper.java:[line 73] \nAt FilePathHelper.java:[line 90] \nAt FilePathHelper.java:[line 94] \nAt FilePathHelper.java:[line 219] \nAt FilePathHelper.java:[line 251] \nAt FilePathHelper.java:[line 260].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/e71b7f796ab3e39d99b55430424ba7e8", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt UpdateServiceImpl.java:[lines 240-275] \nIn class org.atalk.impl.androidupdate.UpdateServiceImpl$DownloadReceiver \nIn method org.atalk.impl.androidupdate.UpdateServiceImpl$DownloadReceiver.onReceive(Context, Intent) \nAt UpdateServiceImpl.java:[line 253] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/FilePathHelper.getPath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source android/net/Uri.getLastPathSegment()Ljava/lang/String; \nUnknown source android/net/Uri.getPath()Ljava/lang/String; \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getRealPath(Landroid/content/ContentResolver;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getUriRealPathAboveKitkat(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePathWithCreate(Landroid/content/Context;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source android/database/Cursor.getString(I)Ljava/lang/String; \nAt UpdateServiceImpl.java:[line 253] \nAt FilePathHelper.java:[line 71] \nAt FilePathHelper.java:[line 73] \nAt FilePathHelper.java:[line 90] \nAt FilePathHelper.java:[line 94] \nAt FilePathHelper.java:[line 219] \nAt FilePathHelper.java:[line 251] \nAt FilePathHelper.java:[line 260].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/debug/java/org/atalk/impl/androidupdate/UpdateServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 253, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "                    File apkFile = new File(FilePathHelper.getPath(aTalkApp.getGlobalContext(), fileUri));\n", "snippetText": "                    Uri fileUri = downloadManager.getUriForDownloadedFile(lastDownload);\n                    File apkFile = new File(FilePathHelper.getPath(aTalkApp.getGlobalContext(), fileUri));\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ConfigurationServiceImpl.java:[lines 78-1455] \nIn class org.atalk.impl.configuration.ConfigurationServiceImpl \nIn method org.atalk.impl.configuration.ConfigurationServiceImpl.createConfigurationFile() \nAt ConfigurationServiceImpl.java:[line 762] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getName()Ljava/lang/String; \nAt ConfigurationServiceImpl.java:[line 762].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/cdc82cacbc173d26fb02799fb2a1bfb7", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ConfigurationServiceImpl.java:[lines 78-1455] \nIn class org.atalk.impl.configuration.ConfigurationServiceImpl \nIn method org.atalk.impl.configuration.ConfigurationServiceImpl.createConfigurationFile() \nAt ConfigurationServiceImpl.java:[line 762] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getName()Ljava/lang/String; \nAt ConfigurationServiceImpl.java:[line 762].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/configuration/ConfigurationServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 762, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "                        ((extensionBeginIndex > -1) ? name.substring(0, extensionBeginIndex) : name) + \".properties\");\n", "snippetText": "                File newConfigurationFile = new File(configurationFile.getParentFile(),\n                        ((extensionBeginIndex > -1) ? name.substring(0, extensionBeginIndex) : name) + \".properties\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ConfigurationServiceImpl.java:[lines 78-1455] \nIn class org.atalk.impl.configuration.ConfigurationServiceImpl \nIn method org.atalk.impl.configuration.ConfigurationServiceImpl.getConfigurationFile(String, boolean) \nAt ConfigurationServiceImpl.java:[line 923] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/configuration/ConfigurationServiceImpl.getSystemProperty(Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/impl/configuration/ConfigurationServiceImpl.getConfigurationFile(Ljava/lang/String;Z)Ljava/io/File; parameter 1 \nUnknown source org/jivesoftware/smack/util/StringUtils.returnIfNotEmptyTrimmed(Ljava/lang/String;)Ljava/lang/String; \nAt ConfigurationServiceImpl.java:[line 729] \nAt ConfigurationServiceImpl.java:[line 823] \nAt ConfigurationServiceImpl.java:[line 918] \nAt ConfigurationServiceImpl.java:[line 920] \nAt ConfigurationServiceImpl.java:[line 1343].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/96ed390cb40250961067068d3f6e0784", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ConfigurationServiceImpl.java:[lines 78-1455] \nIn class org.atalk.impl.configuration.ConfigurationServiceImpl \nIn method org.atalk.impl.configuration.ConfigurationServiceImpl.getConfigurationFile(String, boolean) \nAt ConfigurationServiceImpl.java:[line 923] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/configuration/ConfigurationServiceImpl.getSystemProperty(Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/impl/configuration/ConfigurationServiceImpl.getConfigurationFile(Ljava/lang/String;Z)Ljava/io/File; parameter 1 \nUnknown source org/jivesoftware/smack/util/StringUtils.returnIfNotEmptyTrimmed(Ljava/lang/String;)Ljava/lang/String; \nAt ConfigurationServiceImpl.java:[line 729] \nAt ConfigurationServiceImpl.java:[line 823] \nAt ConfigurationServiceImpl.java:[line 918] \nAt ConfigurationServiceImpl.java:[line 920] \nAt ConfigurationServiceImpl.java:[line 1343].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/configuration/ConfigurationServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 923, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        File configFileInCurrentDir = new File(pFileName);\n", "snippetText": "        // try to open the file in current directory\n        File configFileInCurrentDir = new File(pFileName);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ConfigurationServiceImpl.java:[lines 78-1455] \nIn class org.atalk.impl.configuration.ConfigurationServiceImpl \nIn method org.atalk.impl.configuration.ConfigurationServiceImpl.getConfigurationFile(String, boolean) \nAt ConfigurationServiceImpl.java:[line 932] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/configuration/ConfigurationServiceImpl.getString(Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/impl/configuration/ConfigurationServiceImpl.getSystemProperty(Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/impl/configuration/ConfigurationServiceImpl.getScHomeDirName()Ljava/lang/String; \nUnknown source org/jivesoftware/smack/util/StringUtils.returnIfNotEmptyTrimmed(Ljava/lang/String;)Ljava/lang/String; \nAt ConfigurationServiceImpl.java:[line 878] \nAt ConfigurationServiceImpl.java:[line 883] \nAt ConfigurationServiceImpl.java:[line 891] \nAt ConfigurationServiceImpl.java:[line 932].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/6c0a8d101ac91ef54c32b9aeb0c6ebab", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ConfigurationServiceImpl.java:[lines 78-1455] \nIn class org.atalk.impl.configuration.ConfigurationServiceImpl \nIn method org.atalk.impl.configuration.ConfigurationServiceImpl.getConfigurationFile(String, boolean) \nAt ConfigurationServiceImpl.java:[line 932] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/configuration/ConfigurationServiceImpl.getString(Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/impl/configuration/ConfigurationServiceImpl.getSystemProperty(Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/impl/configuration/ConfigurationServiceImpl.getScHomeDirName()Ljava/lang/String; \nUnknown source org/jivesoftware/smack/util/StringUtils.returnIfNotEmptyTrimmed(Ljava/lang/String;)Ljava/lang/String; \nAt ConfigurationServiceImpl.java:[line 878] \nAt ConfigurationServiceImpl.java:[line 883] \nAt ConfigurationServiceImpl.java:[line 891] \nAt ConfigurationServiceImpl.java:[line 932].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/configuration/ConfigurationServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 932, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        File configDir = new File(getScHomeDirLocation(), getScHomeDirName());\n", "snippetText": "\n        File configDir = new File(getScHomeDirLocation(), getScHomeDirName());\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ConfigurationServiceImpl.java:[lines 78-1455] \nIn class org.atalk.impl.configuration.ConfigurationServiceImpl \nIn method org.atalk.impl.configuration.ConfigurationServiceImpl.getConfigurationFile(String, boolean) \nAt ConfigurationServiceImpl.java:[line 933] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/configuration/ConfigurationServiceImpl.getSystemProperty(Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/impl/configuration/ConfigurationServiceImpl.getConfigurationFile(Ljava/lang/String;Z)Ljava/io/File; parameter 1 \nUnknown source org/jivesoftware/smack/util/StringUtils.returnIfNotEmptyTrimmed(Ljava/lang/String;)Ljava/lang/String; \nAt ConfigurationServiceImpl.java:[line 729] \nAt ConfigurationServiceImpl.java:[line 823] \nAt ConfigurationServiceImpl.java:[line 918] \nAt ConfigurationServiceImpl.java:[line 920] \nAt ConfigurationServiceImpl.java:[line 1343].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/0cc3cb7ca14bf81dc1777f363bfd8ec9", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ConfigurationServiceImpl.java:[lines 78-1455] \nIn class org.atalk.impl.configuration.ConfigurationServiceImpl \nIn method org.atalk.impl.configuration.ConfigurationServiceImpl.getConfigurationFile(String, boolean) \nAt ConfigurationServiceImpl.java:[line 933] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/configuration/ConfigurationServiceImpl.getSystemProperty(Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/impl/configuration/ConfigurationServiceImpl.getConfigurationFile(Ljava/lang/String;Z)Ljava/io/File; parameter 1 \nUnknown source org/jivesoftware/smack/util/StringUtils.returnIfNotEmptyTrimmed(Ljava/lang/String;)Ljava/lang/String; \nAt ConfigurationServiceImpl.java:[line 729] \nAt ConfigurationServiceImpl.java:[line 823] \nAt ConfigurationServiceImpl.java:[line 918] \nAt ConfigurationServiceImpl.java:[line 920] \nAt ConfigurationServiceImpl.java:[line 1343].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/configuration/ConfigurationServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 933, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        File configFileInUserHomeDir = new File(configDir, pFileName);\n", "snippetText": "        File configDir = new File(getScHomeDirLocation(), getScHomeDirName());\n        File configFileInUserHomeDir = new File(configDir, pFileName);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks \nAt XMLConfigurationStore.java:[lines 29-447] \nIn class org.atalk.impl.configuration.xml.XMLConfigurationStore \nIn method org.atalk.impl.configuration.xml.XMLConfigurationStore.loadConfiguration(File) \nAt XMLConfigurationStore.java:[line 170] \nValue DocumentBuilder.parse(...).", "description": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks .", "internal_id": "XXE_DOCUMENT/b8f104cc4b0e72563e025d740f598b18", "severity": "moderate", "owasp_category": "", "category": "Xxe Document", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks \nAt XMLConfigurationStore.java:[lines 29-447] \nIn class org.atalk.impl.configuration.xml.XMLConfigurationStore \nIn method org.atalk.impl.configuration.xml.XMLConfigurationStore.loadConfiguration(File) \nAt XMLConfigurationStore.java:[line 170] \nValue DocumentBuilder.parse(...).", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/configuration/xml/XMLConfigurationStore.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 170, "ruleId": "XXE_DOCUMENT", "ruleName": "Xxe Document", "contextText": "                propertiesDocument = builder.parse(file);\n", "snippetText": "            else\n                propertiesDocument = builder.parse(file);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FailSafeTransactionImpl.java:[lines 49-183] \nIn class org.atalk.impl.fileaccess.FailSafeTransactionImpl \nIn method org.atalk.impl.fileaccess.FailSafeTransactionImpl.beginTransaction() \nAt FailSafeTransactionImpl.java:[line 94] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nAt FailSafeTransactionImpl.java:[line 94].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/d29431a31974a2fab81ac9a9ca070f3c", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FailSafeTransactionImpl.java:[lines 49-183] \nIn class org.atalk.impl.fileaccess.FailSafeTransactionImpl \nIn method org.atalk.impl.fileaccess.FailSafeTransactionImpl.beginTransaction() \nAt FailSafeTransactionImpl.java:[line 94] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nAt FailSafeTransactionImpl.java:[line 94].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/fileaccess/FailSafeTransactionImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 94, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        this.backup = new File(this.file.getAbsolutePath() + BAK_EXT);\n", "snippetText": "        restoreFile();\n        this.backup = new File(this.file.getAbsolutePath() + BAK_EXT);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FailSafeTransactionImpl.java:[lines 49-183] \nIn class org.atalk.impl.fileaccess.FailSafeTransactionImpl \nIn method org.atalk.impl.fileaccess.FailSafeTransactionImpl.failsafeCopy(File, File) \nAt FailSafeTransactionImpl.java:[line 157] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nAt FailSafeTransactionImpl.java:[line 157].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/766604bb97a62d94e6280560f9bb9745", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FailSafeTransactionImpl.java:[lines 49-183] \nIn class org.atalk.impl.fileaccess.FailSafeTransactionImpl \nIn method org.atalk.impl.fileaccess.FailSafeTransactionImpl.failsafeCopy(File, File) \nAt FailSafeTransactionImpl.java:[line 157] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nAt FailSafeTransactionImpl.java:[line 157].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/fileaccess/FailSafeTransactionImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 157, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        File ptoF = new File(to.getAbsolutePath() + PART_EXT);\n", "snippetText": "\n        File ptoF = new File(to.getAbsolutePath() + PART_EXT);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FailSafeTransactionImpl.java:[lines 49-183] \nIn class org.atalk.impl.fileaccess.FailSafeTransactionImpl \nIn method org.atalk.impl.fileaccess.FailSafeTransactionImpl.restoreFile() \nAt FailSafeTransactionImpl.java:[line 67] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nAt FailSafeTransactionImpl.java:[line 67].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/50a4e6d100cfc0da893fe24d28a1b5e4", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FailSafeTransactionImpl.java:[lines 49-183] \nIn class org.atalk.impl.fileaccess.FailSafeTransactionImpl \nIn method org.atalk.impl.fileaccess.FailSafeTransactionImpl.restoreFile() \nAt FailSafeTransactionImpl.java:[line 67] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nAt FailSafeTransactionImpl.java:[line 67].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/fileaccess/FailSafeTransactionImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 67, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        File back = new File(this.file.getAbsolutePath() + BAK_EXT);\n", "snippetText": "    {\n        File back = new File(this.file.getAbsolutePath() + BAK_EXT);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/FileOutputStream.<init>(Ljava/lang/String;)V) writes to a file whose location might be specified by user input \nAt FailSafeTransactionImpl.java:[lines 49-183] \nIn class org.atalk.impl.fileaccess.FailSafeTransactionImpl \nIn method org.atalk.impl.fileaccess.FailSafeTransactionImpl.failsafeCopy(File, File) \nAt FailSafeTransactionImpl.java:[line 165] \nSink method java/io/FileOutputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/fileaccess/FailSafeTransactionImpl.failsafeCopy(Ljava/io/File;Ljava/io/File;)V parameter 0 \nAt FailSafeTransactionImpl.java:[line 71] \nAt FailSafeTransactionImpl.java:[line 97] \nAt FailSafeTransactionImpl.java:[line 132] \nAt FailSafeTransactionImpl.java:[line 165].", "description": "This API (java/io/FileOutputStream.<init>(Ljava/lang/String;)V) writes to a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_OUT/6e80b4b8ca5a5fa7a3fb4b50de84c721", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL OUT", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/FileOutputStream.<init>(Ljava/lang/String;)V) writes to a file whose location might be specified by user input \nAt FailSafeTransactionImpl.java:[lines 49-183] \nIn class org.atalk.impl.fileaccess.FailSafeTransactionImpl \nIn method org.atalk.impl.fileaccess.FailSafeTransactionImpl.failsafeCopy(File, File) \nAt FailSafeTransactionImpl.java:[line 165] \nSink method java/io/FileOutputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/fileaccess/FailSafeTransactionImpl.failsafeCopy(Ljava/io/File;Ljava/io/File;)V parameter 0 \nAt FailSafeTransactionImpl.java:[line 71] \nAt FailSafeTransactionImpl.java:[line 97] \nAt FailSafeTransactionImpl.java:[line 132] \nAt FailSafeTransactionImpl.java:[line 165].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/fileaccess/FailSafeTransactionImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 165, "ruleId": "PATH_TRAVERSAL_OUT", "ruleName": "PATH TRAVERSAL OUT", "contextText": "            out = new FileOutputStream(to + PART_EXT);\n", "snippetText": "            in = new FileInputStream(from);\n            out = new FileOutputStream(to + PART_EXT);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileAccessServiceImpl.java:[lines 46-331] \nIn class org.atalk.impl.fileaccess.FileAccessServiceImpl \nIn method org.atalk.impl.fileaccess.FileAccessServiceImpl.accessibleFile(File, String) \nAt FileAccessServiceImpl.java:[line 227] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/fileaccess/FileAccessServiceImpl.accessibleFile(Ljava/io/File;Ljava/lang/String;)Ljava/io/File; parameter 0 \nMethod usage not detected \nAt FileAccessServiceImpl.java:[line 97] \nAt FileAccessServiceImpl.java:[line 118].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/f52e981de550135a1acd768b96161bef", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileAccessServiceImpl.java:[lines 46-331] \nIn class org.atalk.impl.fileaccess.FileAccessServiceImpl \nIn method org.atalk.impl.fileaccess.FileAccessServiceImpl.accessibleFile(File, String) \nAt FileAccessServiceImpl.java:[line 227] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/fileaccess/FileAccessServiceImpl.accessibleFile(Ljava/io/File;Ljava/lang/String;)Ljava/io/File; parameter 0 \nMethod usage not detected \nAt FileAccessServiceImpl.java:[line 97] \nAt FileAccessServiceImpl.java:[line 118].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/fileaccess/FileAccessServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 227, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        File file = new File(homedir, fileName);\n", "snippetText": "    {\n        File file = new File(homedir, fileName);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileAccessServiceImpl.java:[lines 46-331] \nIn class org.atalk.impl.fileaccess.FileAccessServiceImpl \nIn method org.atalk.impl.fileaccess.FileAccessServiceImpl.getDefaultDownloadDirectory() \nAt FileAccessServiceImpl.java:[line 266] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 1 \nUnknown source org/atalk/impl/fileaccess/FileAccessServiceImpl.getSystemProperty(Ljava/lang/String;)Ljava/lang/String; \nUnknown source java/lang/System.getProperty(Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/impl/fileaccess/FileAccessServiceImpl.getSystemProperty(Ljava/lang/String;)Ljava/lang/String; parameter 0 \nAt FileAccessServiceImpl.java:[line 209] \nAt FileAccessServiceImpl.java:[line 210] \nAt FileAccessServiceImpl.java:[line 266].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/d59f2b85fa3d68df025522eebe18314d", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileAccessServiceImpl.java:[lines 46-331] \nIn class org.atalk.impl.fileaccess.FileAccessServiceImpl \nIn method org.atalk.impl.fileaccess.FileAccessServiceImpl.getDefaultDownloadDirectory() \nAt FileAccessServiceImpl.java:[line 266] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 1 \nUnknown source org/atalk/impl/fileaccess/FileAccessServiceImpl.getSystemProperty(Ljava/lang/String;)Ljava/lang/String; \nUnknown source java/lang/System.getProperty(Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/impl/fileaccess/FileAccessServiceImpl.getSystemProperty(Ljava/lang/String;)Ljava/lang/String; parameter 0 \nAt FileAccessServiceImpl.java:[line 209] \nAt FileAccessServiceImpl.java:[line 210] \nAt FileAccessServiceImpl.java:[line 266].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/fileaccess/FileAccessServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 266, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        return new File(getSystemProperty(\"user.home\"), \"Downloads\");\n", "snippetText": "        // For all other operating systems we return the Downloads folder.\n        return new File(getSystemProperty(\"user.home\"), \"Downloads\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileAccessServiceImpl.java:[lines 46-331] \nIn class org.atalk.impl.fileaccess.FileAccessServiceImpl \nIn method org.atalk.impl.fileaccess.FileAccessServiceImpl.getFullPath(FileCategory) \nAt FileAccessServiceImpl.java:[line 194] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/fileaccess/FileAccessServiceImpl.scHomeDirName \nAt FileAccessServiceImpl.java:[line 194].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/44624e717a1bb249042b4254376e36f5", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileAccessServiceImpl.java:[lines 46-331] \nIn class org.atalk.impl.fileaccess.FileAccessServiceImpl \nIn method org.atalk.impl.fileaccess.FileAccessServiceImpl.getFullPath(FileCategory) \nAt FileAccessServiceImpl.java:[line 194] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/fileaccess/FileAccessServiceImpl.scHomeDirName \nAt FileAccessServiceImpl.java:[line 194].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/fileaccess/FileAccessServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 194, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        return new File(directory, this.scHomeDirName);\n", "snippetText": "\n        return new File(directory, this.scHomeDirName);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileAccessServiceImpl.java:[lines 46-331] \nIn class org.atalk.impl.fileaccess.FileAccessServiceImpl \nIn method org.atalk.impl.fileaccess.FileAccessServiceImpl.getPrivatePersistentDirectory(String, FileCategory) \nAt FileAccessServiceImpl.java:[line 156] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/fileaccess/FileAccessServiceImpl.getPrivatePersistentDirectory(Ljava/lang/String;Lorg/atalk/service/fileaccess/FileCategory;)Ljava/io/File; parameter 1 \nMethod usage not detected \nAt FileAccessServiceImpl.java:[line 134].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/412bbed1817404a88767315321eae67b", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileAccessServiceImpl.java:[lines 46-331] \nIn class org.atalk.impl.fileaccess.FileAccessServiceImpl \nIn method org.atalk.impl.fileaccess.FileAccessServiceImpl.getPrivatePersistentDirectory(String, FileCategory) \nAt FileAccessServiceImpl.java:[line 156] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/fileaccess/FileAccessServiceImpl.getPrivatePersistentDirectory(Ljava/lang/String;Lorg/atalk/service/fileaccess/FileCategory;)Ljava/io/File; parameter 1 \nMethod usage not detected \nAt FileAccessServiceImpl.java:[line 134].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/fileaccess/FileAccessServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 156, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        File dir = new File(getFullPath(category), dirName);\n", "snippetText": "    {\n        File dir = new File(getFullPath(category), dirName);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileAccessServiceImpl.java:[lines 46-331] \nIn class org.atalk.impl.fileaccess.FileAccessServiceImpl \nIn method org.atalk.impl.fileaccess.FileAccessServiceImpl.getPrivatePersistentFile(String, FileCategory) \nAt FileAccessServiceImpl.java:[line 121] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/fileaccess/FileAccessServiceImpl.getPrivatePersistentFile(Ljava/lang/String;Lorg/atalk/service/fileaccess/FileCategory;)Ljava/io/File; parameter 1 \nMethod usage not detected \nAt FileAccessServiceImpl.java:[line 97].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/1ac2d5c348348ca29b3d4c5e0c7f0ebe", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileAccessServiceImpl.java:[lines 46-331] \nIn class org.atalk.impl.fileaccess.FileAccessServiceImpl \nIn method org.atalk.impl.fileaccess.FileAccessServiceImpl.getPrivatePersistentFile(String, FileCategory) \nAt FileAccessServiceImpl.java:[line 121] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/fileaccess/FileAccessServiceImpl.getPrivatePersistentFile(Ljava/lang/String;Lorg/atalk/service/fileaccess/FileCategory;)Ljava/io/File; parameter 1 \nMethod usage not detected \nAt FileAccessServiceImpl.java:[line 97].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/fileaccess/FileAccessServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 121, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "                    + new File(getFullPath(category), fileName).getPath());\n", "snippetText": "            throw new SecurityException(\"Insufficient rights to access this file in current user's home directory: \"\n                    + new File(getFullPath(category), fileName).getPath());\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt TempFileManager.java:[lines 28-180] \nIn class org.atalk.impl.fileaccess.TempFileManager \nIn method org.atalk.impl.fileaccess.TempFileManager.<static initializer for TempFileManager>() \nAt TempFileManager.java:[line 157] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getName()Ljava/lang/String; \nAt TempFileManager.java:[line 157].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/c020370f474e1ecb2e42aef37a891920", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt TempFileManager.java:[lines 28-180] \nIn class org.atalk.impl.fileaccess.TempFileManager \nIn method org.atalk.impl.fileaccess.TempFileManager.<static initializer for TempFileManager>() \nAt TempFileManager.java:[line 157] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getName()Ljava/lang/String; \nAt TempFileManager.java:[line 157].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/fileaccess/TempFileManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 157, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "            File lockFile = new File(tmpFile.getParent(), tmpFile.getName() + \".lck\");\n", "snippetText": "            // Create a file to represent the lock and test.\n            File lockFile = new File(tmpFile.getParent(), tmpFile.getName() + \".lck\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input \nAt TempFileManager.java:[lines 28-180] \nIn class org.atalk.impl.fileaccess.TempFileManager \nIn method org.atalk.impl.fileaccess.TempFileManager.createTempFile(String, String) \nAt TempFileManager.java:[line 55] \nSink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; \nSink parameter 0 \nUnknown source java/io/File.<init>(Ljava/lang/String;)V \nAt TempFileManager.java:[line 55].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/2fe38bb93cce00ca5b798177ab085fb7", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input \nAt TempFileManager.java:[lines 28-180] \nIn class org.atalk.impl.fileaccess.TempFileManager \nIn method org.atalk.impl.fileaccess.TempFileManager.createTempFile(String, String) \nAt TempFileManager.java:[line 55] \nSink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; \nSink parameter 0 \nUnknown source java/io/File.<init>(Ljava/lang/String;)V \nAt TempFileManager.java:[line 55].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/fileaccess/TempFileManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 55, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\t\tFile tmpDir = File.createTempFile(TEMP_DIR_PREFIX, \".tmp\", new File(tmpDirName));\n", "snippetText": "\t\t\tString tmpDirName = System.getProperty(\"java.io.tmpdir\");\n\t\t\tFile tmpDir = File.createTempFile(TEMP_DIR_PREFIX, \".tmp\", new File(tmpDirName));\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt TempFileManager.java:[lines 28-180] \nIn class org.atalk.impl.fileaccess.TempFileManager \nIn method org.atalk.impl.fileaccess.TempFileManager.createTempFile(String, String) \nAt TempFileManager.java:[line 65] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getName()Ljava/lang/String; \nAt TempFileManager.java:[line 65].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/dac3ec02310bb1b958e8d25524230087", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt TempFileManager.java:[lines 28-180] \nIn class org.atalk.impl.fileaccess.TempFileManager \nIn method org.atalk.impl.fileaccess.TempFileManager.createTempFile(String, String) \nAt TempFileManager.java:[line 65] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getName()Ljava/lang/String; \nAt TempFileManager.java:[line 65].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/fileaccess/TempFileManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 65, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\t\tFile lockFile = new File(tmpDirName, tmpDir.getName() + \".lck\");\n", "snippetText": "\t\t\t// to clean your temp dir.\n\t\t\tFile lockFile = new File(tmpDirName, tmpDir.getName() + \".lck\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input \nAt TempFileManager.java:[lines 28-180] \nIn class org.atalk.impl.fileaccess.TempFileManager \nIn method org.atalk.impl.fileaccess.TempFileManager.createTempFile(String, String) \nAt TempFileManager.java:[line 83] \nSink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; \nSink parameter 0 \nUnknown source org/atalk/impl/fileaccess/TempFileManager.sTmpDir \nUnknown source java/io/File.<init>(Ljava/lang/String;)V \nUnknown source java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; \nAt TempFileManager.java:[line 51] \nAt TempFileManager.java:[line 55] \nAt TempFileManager.java:[line 83].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/977cf54c81895a6cb0a7669e036097c0", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input \nAt TempFileManager.java:[lines 28-180] \nIn class org.atalk.impl.fileaccess.TempFileManager \nIn method org.atalk.impl.fileaccess.TempFileManager.createTempFile(String, String) \nAt TempFileManager.java:[line 83] \nSink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; \nSink parameter 0 \nUnknown source org/atalk/impl/fileaccess/TempFileManager.sTmpDir \nUnknown source java/io/File.<init>(Ljava/lang/String;)V \nUnknown source java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; \nAt TempFileManager.java:[line 51] \nAt TempFileManager.java:[line 55] \nAt TempFileManager.java:[line 83].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/fileaccess/TempFileManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 83, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\treturn File.createTempFile(prefix, suffix, sTmpDir);\n", "snippetText": "\t\t// and return it.\n\t\treturn File.createTempFile(prefix, suffix, sTmpDir);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This random generator (java.util.Random) is predictable \nAt MediaStreamImpl.java:[lines 65-3448] \nIn class org.atalk.impl.neomedia.MediaStreamImpl \nIn method new org.atalk.impl.neomedia.MediaStreamImpl(StreamConnector, MediaDevice, SrtpControl) \nAt MediaStreamImpl.java:[line 147] \nValue java.util.Random.", "description": "This random generator (java.util.Random) is predictable .", "internal_id": "PREDICTABLE_RANDOM/31095d4ccc70c49ba0b2af24d82b19a7", "severity": "moderate", "owasp_category": "", "category": "Predictable Random", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This random generator (java.util.Random) is predictable \nAt MediaStreamImpl.java:[lines 65-3448] \nIn class org.atalk.impl.neomedia.MediaStreamImpl \nIn method new org.atalk.impl.neomedia.MediaStreamImpl(StreamConnector, MediaDevice, SrtpControl) \nAt MediaStreamImpl.java:[line 147] \nValue java.util.Random.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/neomedia/MediaStreamImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 147, "ruleId": "PREDICTABLE_RANDOM", "ruleName": "Predictable Random", "contextText": "    private long localSourceID = (new Random().nextInt()) & 0x00000000FFFFFFFFL;\n", "snippetText": "     */\n    private long localSourceID = (new Random().nextInt()) & 0x00000000FFFFFFFFL;\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This random generator (java.util.Random) is predictable \nAt SSRCFactoryImpl.java:[lines 23-56] \nIn class org.atalk.impl.neomedia.SSRCFactoryImpl \nIn method new org.atalk.impl.neomedia.SSRCFactoryImpl(long) \nAt SSRCFactoryImpl.java:[line 30] \nValue java.util.Random.", "description": "This random generator (java.util.Random) is predictable .", "internal_id": "PREDICTABLE_RANDOM/be4352f341b446412287b9197dde4ccc", "severity": "moderate", "owasp_category": "", "category": "Predictable Random", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This random generator (java.util.Random) is predictable \nAt SSRCFactoryImpl.java:[lines 23-56] \nIn class org.atalk.impl.neomedia.SSRCFactoryImpl \nIn method new org.atalk.impl.neomedia.SSRCFactoryImpl(long) \nAt SSRCFactoryImpl.java:[line 30] \nValue java.util.Random.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/neomedia/SSRCFactoryImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 30, "ruleId": "PREDICTABLE_RANDOM", "ruleName": "Predictable Random", "contextText": "\tprivate final Random random = new Random();\n", "snippetText": "\t */\n\tprivate final Random random = new Random();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/FileInputStream.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt Coder.java:[lines 44-187] \nIn class org.atalk.impl.neomedia.codec.audio.g729.Coder \nIn method org.atalk.impl.neomedia.codec.audio.g729.Coder.main(String[]) \nAt Coder.java:[line 117] \nSink method java/io/FileInputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nTainted source org/atalk/impl/neomedia/codec/audio/g729/Coder.main([Ljava/lang/String;)V parameter 0.", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/98e643e86ab07cc01c662968c25545ca", "severity": "critical", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/FileInputStream.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt Coder.java:[lines 44-187] \nIn class org.atalk.impl.neomedia.codec.audio.g729.Coder \nIn method org.atalk.impl.neomedia.codec.audio.g729.Coder.main(String[]) \nAt Coder.java:[line 117] \nSink method java/io/FileInputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nTainted source org/atalk/impl/neomedia/codec/audio/g729/Coder.main([Ljava/lang/String;)V parameter 0.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/neomedia/codec/audio/g729/Coder.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 117, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\t\tf_speech = new FileInputStream(args[0]);\n", "snippetText": "\t\ttry {\n\t\t\tf_speech = new FileInputStream(args[0]);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/FileOutputStream.<init>(Ljava/lang/String;)V) writes to a file whose location might be specified by user input \nAt Coder.java:[lines 44-187] \nIn class org.atalk.impl.neomedia.codec.audio.g729.Coder \nIn method org.atalk.impl.neomedia.codec.audio.g729.Coder.main(String[]) \nAt Coder.java:[line 127] \nSink method java/io/FileOutputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nTainted source org/atalk/impl/neomedia/codec/audio/g729/Coder.main([Ljava/lang/String;)V parameter 0.", "description": "This API (java/io/FileOutputStream.<init>(Ljava/lang/String;)V) writes to a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_OUT/33a13871a83eaebbafb6c66bb8210a44", "severity": "critical", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL OUT", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/FileOutputStream.<init>(Ljava/lang/String;)V) writes to a file whose location might be specified by user input \nAt Coder.java:[lines 44-187] \nIn class org.atalk.impl.neomedia.codec.audio.g729.Coder \nIn method org.atalk.impl.neomedia.codec.audio.g729.Coder.main(String[]) \nAt Coder.java:[line 127] \nSink method java/io/FileOutputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nTainted source org/atalk/impl/neomedia/codec/audio/g729/Coder.main([Ljava/lang/String;)V parameter 0.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/neomedia/codec/audio/g729/Coder.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 127, "ruleId": "PATH_TRAVERSAL_OUT", "ruleName": "PATH TRAVERSAL OUT", "contextText": "\t\t\tf_serial = new FileOutputStream(args[1]);\n", "snippetText": "\t\ttry {\n\t\t\tf_serial = new FileOutputStream(args[1]);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/FileInputStream.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt Decoder.java:[lines 44-270] \nIn class org.atalk.impl.neomedia.codec.audio.g729.Decoder \nIn method org.atalk.impl.neomedia.codec.audio.g729.Decoder.main(String[]) \nAt Decoder.java:[line 179] \nSink method java/io/FileInputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nTainted source org/atalk/impl/neomedia/codec/audio/g729/Decoder.main([Ljava/lang/String;)V parameter 0.", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/40fa230ca8a9c08e74b7f931ff5d0328", "severity": "critical", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/FileInputStream.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt Decoder.java:[lines 44-270] \nIn class org.atalk.impl.neomedia.codec.audio.g729.Decoder \nIn method org.atalk.impl.neomedia.codec.audio.g729.Decoder.main(String[]) \nAt Decoder.java:[line 179] \nSink method java/io/FileInputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nTainted source org/atalk/impl/neomedia/codec/audio/g729/Decoder.main([Ljava/lang/String;)V parameter 0.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/neomedia/codec/audio/g729/Decoder.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 179, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\t\tf_serial = new FileInputStream(args[0]);\n", "snippetText": "\t\ttry {\n\t\t\tf_serial = new FileInputStream(args[0]);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/FileOutputStream.<init>(Ljava/lang/String;)V) writes to a file whose location might be specified by user input \nAt Decoder.java:[lines 44-270] \nIn class org.atalk.impl.neomedia.codec.audio.g729.Decoder \nIn method org.atalk.impl.neomedia.codec.audio.g729.Decoder.main(String[]) \nAt Decoder.java:[line 188] \nSink method java/io/FileOutputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nTainted source org/atalk/impl/neomedia/codec/audio/g729/Decoder.main([Ljava/lang/String;)V parameter 0.", "description": "This API (java/io/FileOutputStream.<init>(Ljava/lang/String;)V) writes to a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_OUT/6460f3cdf4b1b0ed5fcc34734371e6e3", "severity": "critical", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL OUT", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/FileOutputStream.<init>(Ljava/lang/String;)V) writes to a file whose location might be specified by user input \nAt Decoder.java:[lines 44-270] \nIn class org.atalk.impl.neomedia.codec.audio.g729.Decoder \nIn method org.atalk.impl.neomedia.codec.audio.g729.Decoder.main(String[]) \nAt Decoder.java:[line 188] \nSink method java/io/FileOutputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nTainted source org/atalk/impl/neomedia/codec/audio/g729/Decoder.main([Ljava/lang/String;)V parameter 0.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/neomedia/codec/audio/g729/Decoder.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 188, "ruleId": "PATH_TRAVERSAL_OUT", "ruleName": "PATH TRAVERSAL OUT", "contextText": "\t\t\tf_syn = new FileOutputStream(args[1]);\n", "snippetText": "\t\ttry {\n\t\t\tf_syn = new FileOutputStream(args[1]);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/FileInputStream.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt WaveHeader.java:[lines 49-256] \nIn class org.atalk.impl.neomedia.device.WaveHeader \nIn method new org.atalk.impl.neomedia.device.WaveHeader(String) \nAt WaveHeader.java:[line 51] \nSink method java/io/FileInputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/neomedia/device/WaveHeader.<init>(Ljava/lang/String;)V parameter 0 \nMethod usage not detected.", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/0fe9b53771afda21546a72815b3d4389", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/FileInputStream.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt WaveHeader.java:[lines 49-256] \nIn class org.atalk.impl.neomedia.device.WaveHeader \nIn method new org.atalk.impl.neomedia.device.WaveHeader(String) \nAt WaveHeader.java:[line 51] \nSink method java/io/FileInputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/neomedia/device/WaveHeader.<init>(Ljava/lang/String;)V parameter 0 \nMethod usage not detected.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/neomedia/device/WaveHeader.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 51, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\t\tInputStream inputStream = new FileInputStream(filename);\n", "snippetText": "\t\ttry {\n\t\t\tInputStream inputStream = new FileInputStream(filename);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt DataSource.java:[lines 43-1214] \nIn class org.atalk.impl.neomedia.jmfext.media.protocol.mediarecorder.DataSource \nIn method org.atalk.impl.neomedia.jmfext.media.protocol.mediarecorder.DataSource.obtainParameters(Camera, MediaRecorder) \nAt DataSource.java:[line 520] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getPath()Ljava/lang/String; \nAt DataSource.java:[line 472].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/ff7352398b379687884eb67a4a0cf7e9", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt DataSource.java:[lines 43-1214] \nIn class org.atalk.impl.neomedia.jmfext.media.protocol.mediarecorder.DataSource \nIn method org.atalk.impl.neomedia.jmfext.media.protocol.mediarecorder.DataSource.obtainParameters(Camera, MediaRecorder) \nAt DataSource.java:[line 520] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getPath()Ljava/lang/String; \nAt DataSource.java:[line 472].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/neomedia/jmfext/media/protocol/mediarecorder/DataSource.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 520, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        File file = new File(sampleFile);\n", "snippetText": "        // Remove sample video\n        File file = new File(sampleFile);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/FileOutputStream.<init>(Ljava/lang/String;)V) writes to a file whose location might be specified by user input \nAt DataSource.java:[lines 43-1214] \nIn class org.atalk.impl.neomedia.jmfext.media.protocol.mediarecorder.DataSource \nIn method org.atalk.impl.neomedia.jmfext.media.protocol.mediarecorder.DataSource.localSocketAccepted(LocalSocket, InputStream) \nAt DataSource.java:[line 704] \nSink method java/io/FileOutputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/neomedia/jmfext/media/protocol/mediarecorder/DataSource.readLine(Ljava/io/InputStream;I)Ljava/lang/String; \nAt DataSource.java:[line 685] \nAt DataSource.java:[line 704] \nAt DataSource.java:[line 865].", "description": "This API (java/io/FileOutputStream.<init>(Ljava/lang/String;)V) writes to a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_OUT/9621c6b37d01c2e88766e095ed927c84", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL OUT", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/FileOutputStream.<init>(Ljava/lang/String;)V) writes to a file whose location might be specified by user input \nAt DataSource.java:[lines 43-1214] \nIn class org.atalk.impl.neomedia.jmfext.media.protocol.mediarecorder.DataSource \nIn method org.atalk.impl.neomedia.jmfext.media.protocol.mediarecorder.DataSource.localSocketAccepted(LocalSocket, InputStream) \nAt DataSource.java:[line 704] \nSink method java/io/FileOutputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/neomedia/jmfext/media/protocol/mediarecorder/DataSource.readLine(Ljava/io/InputStream;I)Ljava/lang/String; \nAt DataSource.java:[line 685] \nAt DataSource.java:[line 704] \nAt DataSource.java:[line 865].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/neomedia/jmfext/media/protocol/mediarecorder/DataSource.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 704, "ruleId": "PATH_TRAVERSAL_OUT", "ruleName": "PATH TRAVERSAL OUT", "contextText": "                dump = new FileOutputStream(DUMP_FILE + \".\" + localSocketKey);\n", "snippetText": "            if (DUMP_FILE != null)\n                dump = new FileOutputStream(DUMP_FILE + \".\" + localSocketKey);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/RandomAccessFile.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt H264Parameters.java:[lines 47-330] \nIn class org.atalk.impl.neomedia.jmfext.media.protocol.mediarecorder.H264Parameters \nIn method new org.atalk.impl.neomedia.jmfext.media.protocol.mediarecorder.H264Parameters(String) \nAt H264Parameters.java:[line 49] \nSink method java/io/RandomAccessFile.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 1 \nUnknown source org/atalk/impl/neomedia/jmfext/media/protocol/mediarecorder/H264Parameters.<init>(Ljava/lang/String;)V parameter 0 \nAt DataSource.java:[line 472] \nAt DataSource.java:[line 517].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/9064a26ef62bd4990bab8c416c687aea", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/RandomAccessFile.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt H264Parameters.java:[lines 47-330] \nIn class org.atalk.impl.neomedia.jmfext.media.protocol.mediarecorder.H264Parameters \nIn method new org.atalk.impl.neomedia.jmfext.media.protocol.mediarecorder.H264Parameters(String) \nAt H264Parameters.java:[line 49] \nSink method java/io/RandomAccessFile.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 1 \nUnknown source org/atalk/impl/neomedia/jmfext/media/protocol/mediarecorder/H264Parameters.<init>(Ljava/lang/String;)V parameter 0 \nAt DataSource.java:[line 472] \nAt DataSource.java:[line 517].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/neomedia/jmfext/media/protocol/mediarecorder/H264Parameters.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 49, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        RandomAccessFile sampleFile = new RandomAccessFile(path, \"r\");\n", "snippetText": "\n        RandomAccessFile sampleFile = new RandomAccessFile(path, \"r\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/RandomAccessFile.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt RtpdumpFileReader.java:[lines 64-121] \nIn class org.atalk.impl.neomedia.jmfext.media.protocol.rtpdumpfile.RtpdumpFileReader \nIn method new org.atalk.impl.neomedia.jmfext.media.protocol.rtpdumpfile.RtpdumpFileReader(String) \nAt RtpdumpFileReader.java:[line 66] \nSink method java/io/RandomAccessFile.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 1 \nUnknown source org/atalk/impl/neomedia/jmfext/media/protocol/rtpdumpfile/RtpdumpFileReader.<init>(Ljava/lang/String;)V parameter 0 \nAt RtpdumpStream.java:[line 90].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/c6a3d365aee74b334a2c57077969d5b2", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/RandomAccessFile.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt RtpdumpFileReader.java:[lines 64-121] \nIn class org.atalk.impl.neomedia.jmfext.media.protocol.rtpdumpfile.RtpdumpFileReader \nIn method new org.atalk.impl.neomedia.jmfext.media.protocol.rtpdumpfile.RtpdumpFileReader(String) \nAt RtpdumpFileReader.java:[line 66] \nSink method java/io/RandomAccessFile.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 1 \nUnknown source org/atalk/impl/neomedia/jmfext/media/protocol/rtpdumpfile/RtpdumpFileReader.<init>(Ljava/lang/String;)V parameter 0 \nAt RtpdumpStream.java:[line 90].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/neomedia/jmfext/media/protocol/rtpdumpfile/RtpdumpFileReader.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 66, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\t\tstream = new RandomAccessFile(filePath, \"r\");\n", "snippetText": "\t\ttry {\n\t\t\tstream = new RandomAccessFile(filePath, \"r\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt JavaSoundClipImpl.java:[lines 20-126] \nIn class org.atalk.impl.neomedia.notify.JavaSoundClipImpl \nIn method new org.atalk.impl.neomedia.notify.JavaSoundClipImpl(String, AudioNotifierService) \nAt JavaSoundClipImpl.java:[line 95] \nSink method java/net/URL.openStream()Ljava/io/InputStream; \nSink parameter 0 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nUnknown source org/atalk/impl/neomedia/notify/JavaSoundClipImpl.<init>(Ljava/lang/String;Lorg/atalk/service/audionotifier/AudioNotifierService;)V parameter 1 \nMethod usage not detected \nAt AudioNotifierServiceImpl.java:[line 91] \nAt AudioNotifierServiceImpl.java:[line 117] \nAt JavaSoundClipImpl.java:[line 95].", "description": "This web server request could be used by an attacker to expose internal services and filesystem. .", "internal_id": "URLCONNECTION_SSRF_FD/3549d4794f3d24d7c9de0ac14e0103e0", "severity": "moderate", "owasp_category": "a6-misconfiguration", "category": "URLCONNECTION SSRF FD", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt JavaSoundClipImpl.java:[lines 20-126] \nIn class org.atalk.impl.neomedia.notify.JavaSoundClipImpl \nIn method new org.atalk.impl.neomedia.notify.JavaSoundClipImpl(String, AudioNotifierService) \nAt JavaSoundClipImpl.java:[line 95] \nSink method java/net/URL.openStream()Ljava/io/InputStream; \nSink parameter 0 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nUnknown source org/atalk/impl/neomedia/notify/JavaSoundClipImpl.<init>(Ljava/lang/String;Lorg/atalk/service/audionotifier/AudioNotifierService;)V parameter 1 \nMethod usage not detected \nAt AudioNotifierServiceImpl.java:[line 91] \nAt AudioNotifierServiceImpl.java:[line 117] \nAt JavaSoundClipImpl.java:[line 95].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/neomedia/notify/JavaSoundClipImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 95, "ruleId": "URLCONNECTION_SSRF_FD", "ruleName": "URLCONNECTION SSRF FD", "contextText": "\t\taudioClip = createAppletAudioClip(new URL(uri).openStream());\n", "snippetText": "\t\tsuper(uri, audioNotifier);\n\t\taudioClip = createAppletAudioClip(new URL(uri).openStream());\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt RecorderEventHandlerJSONImpl.java:[lines 31-219] \nIn class org.atalk.impl.neomedia.recording.RecorderEventHandlerJSONImpl \nIn method new org.atalk.impl.neomedia.recording.RecorderEventHandlerJSONImpl(String) \nAt RecorderEventHandlerJSONImpl.java:[line 53] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/neomedia/recording/RecorderEventHandlerJSONImpl.<init>(Ljava/lang/String;)V parameter 0 \nMethod usage not detected \nAt MediaServiceImpl.java:[line 1469].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/fc5e09b50e4332ebb80662d1e2ed9422", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt RecorderEventHandlerJSONImpl.java:[lines 31-219] \nIn class org.atalk.impl.neomedia.recording.RecorderEventHandlerJSONImpl \nIn method new org.atalk.impl.neomedia.recording.RecorderEventHandlerJSONImpl(String) \nAt RecorderEventHandlerJSONImpl.java:[line 53] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/neomedia/recording/RecorderEventHandlerJSONImpl.<init>(Ljava/lang/String;)V parameter 0 \nMethod usage not detected \nAt MediaServiceImpl.java:[line 1469].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/neomedia/recording/RecorderEventHandlerJSONImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 53, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        file = new File(filename);\n", "snippetText": "    {\n        file = new File(filename);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt RecorderRtpImpl.java:[lines 54-1012] \nIn class org.atalk.impl.neomedia.recording.RecorderRtpImpl \nIn method org.atalk.impl.neomedia.recording.RecorderRtpImpl.getNextFilename(String, String) \nAt RecorderRtpImpl.java:[line 836] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/neomedia/recording/RecorderRtpImpl.getNextFilename(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0 \nUnknown source org/atalk/impl/neomedia/recording/RecorderRtpImpl.getNextFilename(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1 \nAt RecorderRtpImpl.java:[line 677] \nAt RecorderRtpImpl.java:[line 680] \nAt RecorderRtpImpl.java:[line 751] \nAt RecorderRtpImpl.java:[line 836].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/68f999c2dade03598f384f4a01f0293f", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt RecorderRtpImpl.java:[lines 54-1012] \nIn class org.atalk.impl.neomedia.recording.RecorderRtpImpl \nIn method org.atalk.impl.neomedia.recording.RecorderRtpImpl.getNextFilename(String, String) \nAt RecorderRtpImpl.java:[line 836] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/neomedia/recording/RecorderRtpImpl.getNextFilename(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0 \nUnknown source org/atalk/impl/neomedia/recording/RecorderRtpImpl.getNextFilename(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1 \nAt RecorderRtpImpl.java:[line 677] \nAt RecorderRtpImpl.java:[line 680] \nAt RecorderRtpImpl.java:[line 751] \nAt RecorderRtpImpl.java:[line 836].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/neomedia/recording/RecorderRtpImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 836, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        if (!new File(prefix + suffix).exists())\n", "snippetText": "    {\n        if (!new File(prefix + suffix).exists())\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt RecorderRtpImpl.java:[lines 54-1012] \nIn class org.atalk.impl.neomedia.recording.RecorderRtpImpl \nIn method org.atalk.impl.neomedia.recording.RecorderRtpImpl.getNextFilename(String, String) \nAt RecorderRtpImpl.java:[line 843] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/neomedia/recording/RecorderRtpImpl.getNextFilename(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0 \nUnknown source org/atalk/impl/neomedia/recording/RecorderRtpImpl.getNextFilename(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1 \nAt RecorderRtpImpl.java:[line 677] \nAt RecorderRtpImpl.java:[line 680] \nAt RecorderRtpImpl.java:[line 751] \nAt RecorderRtpImpl.java:[line 836] \nAt RecorderRtpImpl.java:[line 842].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/7a90170388a7f6c5ab66b12319da2692", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt RecorderRtpImpl.java:[lines 54-1012] \nIn class org.atalk.impl.neomedia.recording.RecorderRtpImpl \nIn method org.atalk.impl.neomedia.recording.RecorderRtpImpl.getNextFilename(String, String) \nAt RecorderRtpImpl.java:[line 843] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/neomedia/recording/RecorderRtpImpl.getNextFilename(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0 \nUnknown source org/atalk/impl/neomedia/recording/RecorderRtpImpl.getNextFilename(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1 \nAt RecorderRtpImpl.java:[line 677] \nAt RecorderRtpImpl.java:[line 680] \nAt RecorderRtpImpl.java:[line 751] \nAt RecorderRtpImpl.java:[line 836] \nAt RecorderRtpImpl.java:[line 842].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/neomedia/recording/RecorderRtpImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 843, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "            if (!new File(s).exists())\n", "snippetText": "            s = prefix + \"-\" + i + suffix;\n            if (!new File(s).exists())\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This random generator (java.util.Random) is predictable \nAt SendSideBandwidthEstimation.java:[lines 40-605] \nIn class org.atalk.impl.neomedia.rtp.sendsidebandwidthestimation.SendSideBandwidthEstimation \nIn method org.atalk.impl.neomedia.rtp.sendsidebandwidthestimation.SendSideBandwidthEstimation.<static initializer for SendSideBandwidthEstimation>() \nAt SendSideBandwidthEstimation.java:[line 164] \nValue java.util.Random.", "description": "This random generator (java.util.Random) is predictable .", "internal_id": "PREDICTABLE_RANDOM/9554613224ed7bb90b8362295cda9bee", "severity": "moderate", "owasp_category": "", "category": "Predictable Random", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This random generator (java.util.Random) is predictable \nAt SendSideBandwidthEstimation.java:[lines 40-605] \nIn class org.atalk.impl.neomedia.rtp.sendsidebandwidthestimation.SendSideBandwidthEstimation \nIn method org.atalk.impl.neomedia.rtp.sendsidebandwidthestimation.SendSideBandwidthEstimation.<static initializer for SendSideBandwidthEstimation>() \nAt SendSideBandwidthEstimation.java:[line 164] \nValue java.util.Random.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/neomedia/rtp/sendsidebandwidthestimation/SendSideBandwidthEstimation.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 164, "ruleId": "PREDICTABLE_RANDOM", "ruleName": "Predictable Random", "contextText": "    private static final Random kRandom = new Random();\n", "snippetText": "     */\n    private static final Random kRandom = new Random();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This random generator (java.util.Random) is predictable \nAt RtxTransformer.java:[lines 46-517] \nIn class org.atalk.impl.neomedia.transform.RtxTransformer \nIn method org.atalk.impl.neomedia.transform.RtxTransformer.getNextRtxSequenceNumber(long) \nAt RtxTransformer.java:[line 158] \nValue java.util.Random.", "description": "This random generator (java.util.Random) is predictable .", "internal_id": "PREDICTABLE_RANDOM/063cfc1fcf27c9f497a58da8168235e5", "severity": "moderate", "owasp_category": "", "category": "Predictable Random", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This random generator (java.util.Random) is predictable \nAt RtxTransformer.java:[lines 46-517] \nIn class org.atalk.impl.neomedia.transform.RtxTransformer \nIn method org.atalk.impl.neomedia.transform.RtxTransformer.getNextRtxSequenceNumber(long) \nAt RtxTransformer.java:[line 158] \nValue java.util.Random.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/neomedia/transform/RtxTransformer.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 158, "ruleId": "PREDICTABLE_RANDOM", "ruleName": "Predictable Random", "contextText": "                seq = new Random().nextInt(0xffff);\n", "snippetText": "            if (seq == null)\n                seq = new Random().nextInt(0xffff);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "Hard coded cryptographic key found \nAt DtlsControlImpl.java:[lines 52-845] \nIn class org.atalk.impl.neomedia.transform.dtls.DtlsControlImpl \nValue is hard coded in field org.atalk.impl.neomedia.transform.dtls.DtlsControlImpl.RSA_KEY_PUBLIC_EXPONENTLjava/math/BigInteger; with suspicious name \nAt DtlsControlImpl.java:[lines 52-845].", "description": "Hard coded cryptographic key found .", "internal_id": "HARD_CODE_KEY/7485b62b5b35ed1d5b93323bd251db07", "severity": "moderate", "owasp_category": "", "category": "HARD CODE KEY", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Hard coded cryptographic key found \nAt DtlsControlImpl.java:[lines 52-845] \nIn class org.atalk.impl.neomedia.transform.dtls.DtlsControlImpl \nValue is hard coded in field org.atalk.impl.neomedia.transform.dtls.DtlsControlImpl.RSA_KEY_PUBLIC_EXPONENTLjava/math/BigInteger; with suspicious name \nAt DtlsControlImpl.java:[lines 52-845].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/neomedia/transform/dtls/DtlsControlImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 52, "ruleId": "HARD_CODE_KEY", "ruleName": "HARD CODE KEY", "contextText": "public class DtlsControlImpl extends AbstractSrtpControl<DtlsTransformEngine> implements DtlsControl\n", "snippetText": " */\npublic class DtlsControlImpl extends AbstractSrtpControl<DtlsTransformEngine> implements DtlsControl\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This random generator (java.util.Random) is predictable \nAt Aes.java:[lines 27-470] \nIn class org.atalk.impl.neomedia.transform.srtp.crypto.Aes \nIn method org.atalk.impl.neomedia.transform.srtp.crypto.Aes.<static initializer for Aes>() \nAt Aes.java:[line 107] \nValue java.util.Random.", "description": "This random generator (java.util.Random) is predictable .", "internal_id": "PREDICTABLE_RANDOM/6575a59148e2bcd41cfec940d98abf29", "severity": "moderate", "owasp_category": "", "category": "Predictable Random", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This random generator (java.util.Random) is predictable \nAt Aes.java:[lines 27-470] \nIn class org.atalk.impl.neomedia.transform.srtp.crypto.Aes \nIn method org.atalk.impl.neomedia.transform.srtp.crypto.Aes.<static initializer for Aes>() \nAt Aes.java:[line 107] \nValue java.util.Random.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/neomedia/transform/srtp/crypto/Aes.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 107, "ruleId": "PREDICTABLE_RANDOM", "ruleName": "Predictable Random", "contextText": "    private static final Random random = new Random();\n", "snippetText": "     */\n    private static final Random random = new Random();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "Unsafe comparison of hash that are susceptible to timing attack \nAt ZRTPTransformEngine.java:[lines 137-1433] \nIn class org.atalk.impl.neomedia.transform.zrtp.ZRTPTransformEngine \nIn method org.atalk.impl.neomedia.transform.zrtp.ZRTPTransformEngine.sendInfo(ZrtpCodes$MessageSeverity, EnumSet) \nAt ZRTPTransformEngine.java:[line 941] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source org/atalk/impl/neomedia/transform/zrtp/ZRTPTransformEngine.receivedSignaledZRTPVersion \nAt ZRTPTransformEngine.java:[line 941].", "description": "Unsafe comparison of hash that are susceptible to timing attack .", "internal_id": "UNSAFE_HASH_EQUALS/f172daefdfdf4fd30ff3092dac7ee21e", "severity": "moderate", "owasp_category": "", "category": "UNSAFE HASH EQUALS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Unsafe comparison of hash that are susceptible to timing attack \nAt ZRTPTransformEngine.java:[lines 137-1433] \nIn class org.atalk.impl.neomedia.transform.zrtp.ZRTPTransformEngine \nIn method org.atalk.impl.neomedia.transform.zrtp.ZRTPTransformEngine.sendInfo(ZrtpCodes$MessageSeverity, EnumSet) \nAt ZRTPTransformEngine.java:[line 941] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source org/atalk/impl/neomedia/transform/zrtp/ZRTPTransformEngine.receivedSignaledZRTPVersion \nAt ZRTPTransformEngine.java:[line 941].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/neomedia/transform/zrtp/ZRTPTransformEngine.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 941, "ruleId": "UNSAFE_HASH_EQUALS", "ruleName": "UNSAFE HASH EQUALS", "contextText": "            if (!peerHelloVersion.equals(receivedSignaledZRTPVersion)\n", "snippetText": "\n            if (!peerHelloVersion.equals(receivedSignaledZRTPVersion)\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "Unsafe comparison of hash that are susceptible to timing attack \nAt ZRTPTransformEngine.java:[lines 137-1433] \nIn class org.atalk.impl.neomedia.transform.zrtp.ZRTPTransformEngine \nIn method org.atalk.impl.neomedia.transform.zrtp.ZRTPTransformEngine.sendInfo(ZrtpCodes$MessageSeverity, EnumSet) \nAt ZRTPTransformEngine.java:[line 942] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source org/atalk/impl/neomedia/transform/zrtp/ZRTPTransformEngine.receivedSignaledZRTPHashValue \nAt ZRTPTransformEngine.java:[line 941].", "description": "Unsafe comparison of hash that are susceptible to timing attack .", "internal_id": "UNSAFE_HASH_EQUALS/a08fbea82b75b4d7dcde28705e3679b5", "severity": "moderate", "owasp_category": "", "category": "UNSAFE HASH EQUALS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Unsafe comparison of hash that are susceptible to timing attack \nAt ZRTPTransformEngine.java:[lines 137-1433] \nIn class org.atalk.impl.neomedia.transform.zrtp.ZRTPTransformEngine \nIn method org.atalk.impl.neomedia.transform.zrtp.ZRTPTransformEngine.sendInfo(ZrtpCodes$MessageSeverity, EnumSet) \nAt ZRTPTransformEngine.java:[line 942] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source org/atalk/impl/neomedia/transform/zrtp/ZRTPTransformEngine.receivedSignaledZRTPHashValue \nAt ZRTPTransformEngine.java:[line 941].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/impl/neomedia/transform/zrtp/ZRTPTransformEngine.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 942, "ruleId": "UNSAFE_HASH_EQUALS", "ruleName": "UNSAFE HASH EQUALS", "contextText": "                    || !peerHelloHash.equals(receivedSignaledZRTPHashValue)) {\n", "snippetText": "            if (!peerHelloVersion.equals(receivedSignaledZRTPVersion)\n                    || !peerHelloHash.equals(receivedSignaledZRTPHashValue)) {\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "Files could be saved to external storage \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.getaTalkStore(String, boolean) \nAt FileBackend.java:[line 236].", "description": "Files could be saved to external storage .", "internal_id": "ANDROID_EXTERNAL_FILE_ACCESS/2df1a92e179afd68ddf024e196083565", "severity": "moderate", "owasp_category": "", "category": "ANDROID EXTERNAL FILE ACCESS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Files could be saved to external storage \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.getaTalkStore(String, boolean) \nAt FileBackend.java:[line 236].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/persistance/FileBackend.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 236, "ruleId": "ANDROID_EXTERNAL_FILE_ACCESS", "ruleName": "ANDROID EXTERNAL FILE ACCESS", "contextText": "        File atalkDLDir = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS) + filePath);\n", "snippetText": "        // File atalkDLDir = new File(Environment.getExternalStorageDirectory(), filePath);\n        File atalkDLDir = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS) + filePath);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.copyRecursive(File, File, String) \nAt FileBackend.java:[line 118] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/FileBackend.copyRecursive(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)V parameter 0 \nMethod usage not detected.", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/2172d1a31f47096bf4761d911ddedbf0", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.copyRecursive(File, File, String) \nAt FileBackend.java:[line 118] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/FileBackend.copyRecursive(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)V parameter 0 \nMethod usage not detected.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/persistance/FileBackend.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 118, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "            dstPath = new File(targetPath, subFolder);\n", "snippetText": "        if (subFolder != null)\n            dstPath = new File(targetPath, subFolder);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.copyRecursive(File, File, String) \nAt FileBackend.java:[line 139] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getName()Ljava/lang/String;.", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/2798c3e1cfea834d74ce8fcef21fe104", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.copyRecursive(File, File, String) \nAt FileBackend.java:[line 139] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getName()Ljava/lang/String;.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/persistance/FileBackend.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 139, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "                copyRecursive(new File(srcPath, fileName), dstPath, fileName);\n", "snippetText": "                String fileName = file.getName();\n                copyRecursive(new File(srcPath, fileName), dstPath, fileName);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.getOutputMediaFile(int) \nAt FileBackend.java:[line 255] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/text/SimpleDateFormat.format(Ljava/util/Date;)Ljava/lang/String; \nAt FileBackend.java:[line 255].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/7edd6baee828d65f574dcd9866dfe1b7", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.getOutputMediaFile(int) \nAt FileBackend.java:[line 255] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/text/SimpleDateFormat.format(Ljava/util/Date;)Ljava/lang/String; \nAt FileBackend.java:[line 255].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/persistance/FileBackend.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 255, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "            mediaFile = new File(aTalkMediaDir, \"IMG_\" + timeStamp + \".jpg\");\n", "snippetText": "        if (type == MEDIA_TYPE_IMAGE) {\n            mediaFile = new File(aTalkMediaDir, \"IMG_\" + timeStamp + \".jpg\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.getOutputMediaFile(int) \nAt FileBackend.java:[line 258] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/text/SimpleDateFormat.format(Ljava/util/Date;)Ljava/lang/String; \nAt FileBackend.java:[line 258].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/f677b1d9b03b7574964f049bc7710cef", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.getOutputMediaFile(int) \nAt FileBackend.java:[line 258] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/text/SimpleDateFormat.format(Ljava/util/Date;)Ljava/lang/String; \nAt FileBackend.java:[line 258].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/persistance/FileBackend.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 258, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "            mediaFile = new File(aTalkMediaDir, \"VID_\" + timeStamp + \".mp4\");\n", "snippetText": "        else if (type == MEDIA_TYPE_VIDEO) {\n            mediaFile = new File(aTalkMediaDir, \"VID_\" + timeStamp + \".mp4\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.getaTalkStore(String, boolean) \nAt FileBackend.java:[line 236] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/FileBackend.FP_aTALK \nUnknown source android/os/Environment.getExternalStoragePublicDirectory(Ljava/lang/String;)Ljava/io/File; \nUnknown source org/atalk/persistance/FileBackend.getaTalkStore(Ljava/lang/String;Z)Ljava/io/File; parameter 1 \nAt LogUploadServiceImpl.java:[line 49] \nAt FileHttpDownloadConversation.java:[line 279] \nAt FileHttpDownloadConversation.java:[line 280] \nAt FileHttpDownloadConversation.java:[line 362] \nAt FileHttpDownloadConversation.java:[line 546] \nAt FileReceiveConversation.java:[line 222] \nAt FileTransferConversation.java:[line 946] \nAt FileTransferConversation.java:[line 948] \nAt FileTransferConversation.java:[line 949] \nAt FileTransferConversation.java:[line 950] \nAt FileTransferConversation.java:[line 953] \nAt AudioBgService.java:[line 613] \nAt TTSActivity.java:[line 380] \nAt FileBackend.java:[line 229] \nAt FileBackend.java:[line 230] \nAt FileBackend.java:[line 231] \nAt FileBackend.java:[line 236] \nAt FileBackend.java:[line 249] \nAt FilePathHelper.java:[line 135] \nAt ServerPersistentStoresRefreshDialog.java:[line 297].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/87e6d29327487d8b068b783b5f74573c", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.getaTalkStore(String, boolean) \nAt FileBackend.java:[line 236] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/FileBackend.FP_aTALK \nUnknown source android/os/Environment.getExternalStoragePublicDirectory(Ljava/lang/String;)Ljava/io/File; \nUnknown source org/atalk/persistance/FileBackend.getaTalkStore(Ljava/lang/String;Z)Ljava/io/File; parameter 1 \nAt LogUploadServiceImpl.java:[line 49] \nAt FileHttpDownloadConversation.java:[line 279] \nAt FileHttpDownloadConversation.java:[line 280] \nAt FileHttpDownloadConversation.java:[line 362] \nAt FileHttpDownloadConversation.java:[line 546] \nAt FileReceiveConversation.java:[line 222] \nAt FileTransferConversation.java:[line 946] \nAt FileTransferConversation.java:[line 948] \nAt FileTransferConversation.java:[line 949] \nAt FileTransferConversation.java:[line 950] \nAt FileTransferConversation.java:[line 953] \nAt AudioBgService.java:[line 613] \nAt TTSActivity.java:[line 380] \nAt FileBackend.java:[line 229] \nAt FileBackend.java:[line 230] \nAt FileBackend.java:[line 231] \nAt FileBackend.java:[line 236] \nAt FileBackend.java:[line 249] \nAt FilePathHelper.java:[line 135] \nAt ServerPersistentStoresRefreshDialog.java:[line 297].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/persistance/FileBackend.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 236, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        File atalkDLDir = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS) + filePath);\n", "snippetText": "        // File atalkDLDir = new File(Environment.getExternalStorageDirectory(), filePath);\n        File atalkDLDir = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS) + filePath);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "Files could be saved to external storage \nAt FilePathHelper.java:[lines 44-386] \nIn class org.atalk.persistance.FilePathHelper \nIn method org.atalk.persistance.FilePathHelper.getUriRealPathAboveKitkat(Context, Uri) \nAt FilePathHelper.java:[line 270].", "description": "Files could be saved to external storage .", "internal_id": "ANDROID_EXTERNAL_FILE_ACCESS/ed3fd59cd216267ea0adc1318f12ebb5", "severity": "moderate", "owasp_category": "", "category": "ANDROID EXTERNAL FILE ACCESS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Files could be saved to external storage \nAt FilePathHelper.java:[lines 44-386] \nIn class org.atalk.persistance.FilePathHelper \nIn method org.atalk.persistance.FilePathHelper.getUriRealPathAboveKitkat(Context, Uri) \nAt FilePathHelper.java:[line 270].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/persistance/FilePathHelper.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 270, "ruleId": "ANDROID_EXTERNAL_FILE_ACCESS", "ruleName": "ANDROID EXTERNAL FILE ACCESS", "contextText": "                            filePath = ctx.getExternalFilesDir(realDocId).getAbsolutePath();\n", "snippetText": "                        if (\"primary\".equalsIgnoreCase(type)) {\n                            filePath = ctx.getExternalFilesDir(realDocId).getAbsolutePath();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FilePathHelper.java:[lines 44-386] \nIn class org.atalk.persistance.FilePathHelper \nIn method org.atalk.persistance.FilePathHelper.getFilePathWithCreate(Context, Uri, String) \nAt FilePathHelper.java:[line 135] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/content/ContentResolver.getType(Landroid/net/Uri;)Ljava/lang/String; \nUnknown source android/webkit/MimeTypeMap.getMimeTypeFromExtension(Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePathWithCreate(Landroid/content/Context;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; parameter 0 \nUnknown source org/atalk/persistance/FileBackend.getMimeType(Landroid/content/Context;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; parameter 0 \nUnknown source org/atalk/persistance/FileBackend.getMimeType(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFileName(Landroid/net/Uri;)Ljava/lang/String; \nUnknown source android/net/Uri.getPath()Ljava/lang/String; \nUnknown source org/atalk/persistance/FileBackend.getMimeType(Landroid/content/Context;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source android/net/Uri.getQueryParameter(Ljava/lang/String;)Ljava/lang/String; \nAt Attachment.java:[line 87] \nAt FileBackend.java:[line 324] \nAt FileBackend.java:[line 332] \nAt FilePathHelper.java:[line 58] \nAt FilePathHelper.java:[line 73] \nAt FilePathHelper.java:[line 113] \nAt FilePathHelper.java:[line 114] \nAt FilePathHelper.java:[line 124] \nAt FilePathHelper.java:[line 125] \nAt FilePathHelper.java:[line 126] \nAt FilePathHelper.java:[line 128] \nAt FilePathHelper.java:[line 131] \nAt FilePathHelper.java:[line 164] \nAt FilePathHelper.java:[line 165] \nAt FilePathHelper.java:[line 166] \nAt FilePathHelper.java:[line 167] \nAt FilePathHelper.java:[line 168] \nAt FilePathHelper.java:[line 171] \nAt FilePathHelper.java:[line 173].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/5e45af7c45febef2f9b7b1f03563cb85", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FilePathHelper.java:[lines 44-386] \nIn class org.atalk.persistance.FilePathHelper \nIn method org.atalk.persistance.FilePathHelper.getFilePathWithCreate(Context, Uri, String) \nAt FilePathHelper.java:[line 135] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/content/ContentResolver.getType(Landroid/net/Uri;)Ljava/lang/String; \nUnknown source android/webkit/MimeTypeMap.getMimeTypeFromExtension(Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePathWithCreate(Landroid/content/Context;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; parameter 0 \nUnknown source org/atalk/persistance/FileBackend.getMimeType(Landroid/content/Context;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; parameter 0 \nUnknown source org/atalk/persistance/FileBackend.getMimeType(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFileName(Landroid/net/Uri;)Ljava/lang/String; \nUnknown source android/net/Uri.getPath()Ljava/lang/String; \nUnknown source org/atalk/persistance/FileBackend.getMimeType(Landroid/content/Context;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source android/net/Uri.getQueryParameter(Ljava/lang/String;)Ljava/lang/String; \nAt Attachment.java:[line 87] \nAt FileBackend.java:[line 324] \nAt FileBackend.java:[line 332] \nAt FilePathHelper.java:[line 58] \nAt FilePathHelper.java:[line 73] \nAt FilePathHelper.java:[line 113] \nAt FilePathHelper.java:[line 114] \nAt FilePathHelper.java:[line 124] \nAt FilePathHelper.java:[line 125] \nAt FilePathHelper.java:[line 126] \nAt FilePathHelper.java:[line 128] \nAt FilePathHelper.java:[line 131] \nAt FilePathHelper.java:[line 164] \nAt FilePathHelper.java:[line 165] \nAt FilePathHelper.java:[line 166] \nAt FilePathHelper.java:[line 167] \nAt FilePathHelper.java:[line 168] \nAt FilePathHelper.java:[line 171] \nAt FilePathHelper.java:[line 173].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/persistance/FilePathHelper.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 135, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "            File destFile = new File(FileBackend.getaTalkStore(FileBackend.TMP, true), fileName);\n", "snippetText": "            }\n            File destFile = new File(FileBackend.getaTalkStore(FileBackend.TMP, true), fileName);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt MigrateDir.java:[lines 32-49] \nIn class org.atalk.persistance.migrations.MigrateDir \nIn method org.atalk.persistance.migrations.MigrateDir.purgeAvatarCache() \nAt MigrateDir.java:[line 41] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/content/Context.getFilesDir()Ljava/io/File; \nAt MigrateDir.java:[line 41].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/777722ded8b36e2d91968d1dfcb8376b", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt MigrateDir.java:[lines 32-49] \nIn class org.atalk.persistance.migrations.MigrateDir \nIn method org.atalk.persistance.migrations.MigrateDir.purgeAvatarCache() \nAt MigrateDir.java:[line 41] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/content/Context.getFilesDir()Ljava/io/File; \nAt MigrateDir.java:[line 41].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/org/atalk/persistance/migrations/MigrateDir.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 41, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "", "snippetText": ""}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of android/database/sqlite/SQLiteDatabase.execSQL(Ljava/lang/String;)V can be vulnerable to SQL injection (with Android SQL) \nAt MigrationTo2.java:[lines 9-27] \nIn class org.atalk.persistance.migrations.MigrationTo2 \nIn method org.atalk.persistance.migrations.MigrationTo2.createOmemoTables(SQLiteDatabase) \nAt MigrationTo2.java:[line 14] \nSink method android/database/sqlite/SQLiteDatabase.execSQL(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/DatabaseBackend.CREATE_OMEMO_DEVICES_STATEMENT \nAt MigrationTo2.java:[line 14].", "description": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) .", "internal_id": "SQL_INJECTION_ANDROID/c6e0e4972dc67105d6c5c8e6919db1ae", "severity": "moderate", "owasp_category": "", "category": "SQL INJECTION ANDROID", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of android/database/sqlite/SQLiteDatabase.execSQL(Ljava/lang/String;)V can be vulnerable to SQL injection (with Android SQL) \nAt MigrationTo2.java:[lines 9-27] \nIn class org.atalk.persistance.migrations.MigrationTo2 \nIn method org.atalk.persistance.migrations.MigrationTo2.createOmemoTables(SQLiteDatabase) \nAt MigrationTo2.java:[line 14] \nSink method android/database/sqlite/SQLiteDatabase.execSQL(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/DatabaseBackend.CREATE_OMEMO_DEVICES_STATEMENT \nAt MigrationTo2.java:[line 14].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/org/atalk/persistance/migrations/MigrationTo2.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 14, "ruleId": "SQL_INJECTION_ANDROID", "ruleName": "SQL INJECTION ANDROID", "contextText": "", "snippetText": ""}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of android/database/sqlite/SQLiteDatabase.execSQL(Ljava/lang/String;)V can be vulnerable to SQL injection (with Android SQL) \nAt MigrationTo2.java:[lines 9-27] \nIn class org.atalk.persistance.migrations.MigrationTo2 \nIn method org.atalk.persistance.migrations.MigrationTo2.createOmemoTables(SQLiteDatabase) \nAt MigrationTo2.java:[line 17] \nSink method android/database/sqlite/SQLiteDatabase.execSQL(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/DatabaseBackend.CREATE_PREKEYS_STATEMENT \nAt MigrationTo2.java:[line 17].", "description": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) .", "internal_id": "SQL_INJECTION_ANDROID/072566f9ce076a4ee81c5c9f9a5a79f8", "severity": "moderate", "owasp_category": "", "category": "SQL INJECTION ANDROID", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of android/database/sqlite/SQLiteDatabase.execSQL(Ljava/lang/String;)V can be vulnerable to SQL injection (with Android SQL) \nAt MigrationTo2.java:[lines 9-27] \nIn class org.atalk.persistance.migrations.MigrationTo2 \nIn method org.atalk.persistance.migrations.MigrationTo2.createOmemoTables(SQLiteDatabase) \nAt MigrationTo2.java:[line 17] \nSink method android/database/sqlite/SQLiteDatabase.execSQL(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/DatabaseBackend.CREATE_PREKEYS_STATEMENT \nAt MigrationTo2.java:[line 17].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/org/atalk/persistance/migrations/MigrationTo2.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 17, "ruleId": "SQL_INJECTION_ANDROID", "ruleName": "SQL INJECTION ANDROID", "contextText": "", "snippetText": ""}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of android/database/sqlite/SQLiteDatabase.execSQL(Ljava/lang/String;)V can be vulnerable to SQL injection (with Android SQL) \nAt MigrationTo2.java:[lines 9-27] \nIn class org.atalk.persistance.migrations.MigrationTo2 \nIn method org.atalk.persistance.migrations.MigrationTo2.createOmemoTables(SQLiteDatabase) \nAt MigrationTo2.java:[line 20] \nSink method android/database/sqlite/SQLiteDatabase.execSQL(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/DatabaseBackend.CREATE_SIGNED_PREKEYS_STATEMENT \nAt MigrationTo2.java:[line 20].", "description": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) .", "internal_id": "SQL_INJECTION_ANDROID/12ce0d06ac0cfe76e6d3fb0de9ba6607", "severity": "moderate", "owasp_category": "", "category": "SQL INJECTION ANDROID", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of android/database/sqlite/SQLiteDatabase.execSQL(Ljava/lang/String;)V can be vulnerable to SQL injection (with Android SQL) \nAt MigrationTo2.java:[lines 9-27] \nIn class org.atalk.persistance.migrations.MigrationTo2 \nIn method org.atalk.persistance.migrations.MigrationTo2.createOmemoTables(SQLiteDatabase) \nAt MigrationTo2.java:[line 20] \nSink method android/database/sqlite/SQLiteDatabase.execSQL(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/DatabaseBackend.CREATE_SIGNED_PREKEYS_STATEMENT \nAt MigrationTo2.java:[line 20].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/org/atalk/persistance/migrations/MigrationTo2.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 20, "ruleId": "SQL_INJECTION_ANDROID", "ruleName": "SQL INJECTION ANDROID", "contextText": "", "snippetText": ""}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of android/database/sqlite/SQLiteDatabase.execSQL(Ljava/lang/String;)V can be vulnerable to SQL injection (with Android SQL) \nAt MigrationTo2.java:[lines 9-27] \nIn class org.atalk.persistance.migrations.MigrationTo2 \nIn method org.atalk.persistance.migrations.MigrationTo2.createOmemoTables(SQLiteDatabase) \nAt MigrationTo2.java:[line 23] \nSink method android/database/sqlite/SQLiteDatabase.execSQL(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/DatabaseBackend.CREATE_IDENTITIES_STATEMENT \nAt MigrationTo2.java:[line 23].", "description": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) .", "internal_id": "SQL_INJECTION_ANDROID/f9128985e7c188ca31b722cacab204fb", "severity": "moderate", "owasp_category": "", "category": "SQL INJECTION ANDROID", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of android/database/sqlite/SQLiteDatabase.execSQL(Ljava/lang/String;)V can be vulnerable to SQL injection (with Android SQL) \nAt MigrationTo2.java:[lines 9-27] \nIn class org.atalk.persistance.migrations.MigrationTo2 \nIn method org.atalk.persistance.migrations.MigrationTo2.createOmemoTables(SQLiteDatabase) \nAt MigrationTo2.java:[line 23] \nSink method android/database/sqlite/SQLiteDatabase.execSQL(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/DatabaseBackend.CREATE_IDENTITIES_STATEMENT \nAt MigrationTo2.java:[line 23].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/org/atalk/persistance/migrations/MigrationTo2.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 23, "ruleId": "SQL_INJECTION_ANDROID", "ruleName": "SQL INJECTION ANDROID", "contextText": "", "snippetText": ""}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of android/database/sqlite/SQLiteDatabase.execSQL(Ljava/lang/String;)V can be vulnerable to SQL injection (with Android SQL) \nAt MigrationTo2.java:[lines 9-27] \nIn class org.atalk.persistance.migrations.MigrationTo2 \nIn method org.atalk.persistance.migrations.MigrationTo2.createOmemoTables(SQLiteDatabase) \nAt MigrationTo2.java:[line 26] \nSink method android/database/sqlite/SQLiteDatabase.execSQL(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/DatabaseBackend.CREATE_SESSIONS_STATEMENT \nAt MigrationTo2.java:[line 26].", "description": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) .", "internal_id": "SQL_INJECTION_ANDROID/182ae31f200c5dfc4165e488bec55fbf", "severity": "moderate", "owasp_category": "", "category": "SQL INJECTION ANDROID", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of android/database/sqlite/SQLiteDatabase.execSQL(Ljava/lang/String;)V can be vulnerable to SQL injection (with Android SQL) \nAt MigrationTo2.java:[lines 9-27] \nIn class org.atalk.persistance.migrations.MigrationTo2 \nIn method org.atalk.persistance.migrations.MigrationTo2.createOmemoTables(SQLiteDatabase) \nAt MigrationTo2.java:[line 26] \nSink method android/database/sqlite/SQLiteDatabase.execSQL(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/DatabaseBackend.CREATE_SESSIONS_STATEMENT \nAt MigrationTo2.java:[line 26].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/org/atalk/persistance/migrations/MigrationTo2.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 26, "ruleId": "SQL_INJECTION_ANDROID", "ruleName": "SQL INJECTION ANDROID", "contextText": "", "snippetText": ""}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt MigrationTo3.java:[lines 15-67] \nIn class org.atalk.persistance.migrations.MigrationTo3 \nIn method org.atalk.persistance.migrations.MigrationTo3.deleteOldDatabase() \nAt MigrationTo3.java:[line 41] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getPath()Ljava/lang/String;.", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/b4c0051c5e812143508aa45334f15032", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt MigrationTo3.java:[lines 15-67] \nIn class org.atalk.persistance.migrations.MigrationTo3 \nIn method org.atalk.persistance.migrations.MigrationTo3.deleteOldDatabase() \nAt MigrationTo3.java:[line 41] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getPath()Ljava/lang/String;.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/org/atalk/persistance/migrations/MigrationTo3.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 41, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "", "snippetText": ""}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt MigrationTo3.java:[lines 15-67] \nIn class org.atalk.persistance.migrations.MigrationTo3 \nIn method org.atalk.persistance.migrations.MigrationTo3.deleteOldDatabase() \nAt MigrationTo3.java:[line 48] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nAt MigrationTo3.java:[line 48].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/91edd16d66f05cf56cb47ec4355337e3", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt MigrationTo3.java:[lines 15-67] \nIn class org.atalk.persistance.migrations.MigrationTo3 \nIn method org.atalk.persistance.migrations.MigrationTo3.deleteOldDatabase() \nAt MigrationTo3.java:[line 48] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nAt MigrationTo3.java:[line 48].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/org/atalk/persistance/migrations/MigrationTo3.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 48, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "", "snippetText": ""}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt MigrationTo3.java:[lines 15-67] \nIn class org.atalk.persistance.migrations.MigrationTo3 \nIn method org.atalk.persistance.migrations.MigrationTo3.deleteOldDatabase() \nAt MigrationTo3.java:[line 49] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nAt MigrationTo3.java:[line 48] \nAt MigrationTo3.java:[line 49].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/f9e11ce4f26e021634c5fd904532bbce", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt MigrationTo3.java:[lines 15-67] \nIn class org.atalk.persistance.migrations.MigrationTo3 \nIn method org.atalk.persistance.migrations.MigrationTo3.deleteOldDatabase() \nAt MigrationTo3.java:[line 49] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nAt MigrationTo3.java:[line 48] \nAt MigrationTo3.java:[line 49].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/org/atalk/persistance/migrations/MigrationTo3.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 49, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "", "snippetText": ""}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt MigrationTo3.java:[lines 15-67] \nIn class org.atalk.persistance.migrations.MigrationTo3 \nIn method org.atalk.persistance.migrations.MigrationTo3.deleteOldDatabase() \nAt MigrationTo3.java:[line 50] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nAt MigrationTo3.java:[line 48] \nAt MigrationTo3.java:[line 49] \nAt MigrationTo3.java:[line 50].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/884c605a4d28c90ea6b19adc56f1b055", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt MigrationTo3.java:[lines 15-67] \nIn class org.atalk.persistance.migrations.MigrationTo3 \nIn method org.atalk.persistance.migrations.MigrationTo3.deleteOldDatabase() \nAt MigrationTo3.java:[line 50] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nAt MigrationTo3.java:[line 48] \nAt MigrationTo3.java:[line 49] \nAt MigrationTo3.java:[line 50].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/org/atalk/persistance/migrations/MigrationTo3.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 50, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "", "snippetText": ""}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ConfigUtils.java:[lines 25-216] \nIn class org.atalk.util.ConfigUtils \nIn method org.atalk.util.ConfigUtils.getAbsoluteFile(String, ConfigurationService) \nAt ConfigUtils.java:[line 42] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/util/ConfigUtils.getAbsoluteFile(Ljava/lang/String;Lorg/atalk/service/configuration/ConfigurationService;)Ljava/io/File; parameter 1 \nMethod usage not detected.", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/edaa203d47312fc92341e6c0a0fc8d13", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ConfigUtils.java:[lines 25-216] \nIn class org.atalk.util.ConfigUtils \nIn method org.atalk.util.ConfigUtils.getAbsoluteFile(String, ConfigurationService) \nAt ConfigUtils.java:[line 42] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/util/ConfigUtils.getAbsoluteFile(Ljava/lang/String;Lorg/atalk/service/configuration/ConfigurationService;)Ljava/io/File; parameter 1 \nMethod usage not detected.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/util/ConfigUtils.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 42, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        File file = new File(path);\n", "snippetText": "    {\n        File file = new File(path);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ConfigUtils.java:[lines 25-216] \nIn class org.atalk.util.ConfigUtils \nIn method org.atalk.util.ConfigUtils.getAbsoluteFile(String, ConfigurationService) \nAt ConfigUtils.java:[line 61] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/util/ConfigUtils.getAbsoluteFile(Ljava/lang/String;Lorg/atalk/service/configuration/ConfigurationService;)Ljava/io/File; parameter 1 \nMethod usage not detected.", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/1736b5d0b0b32dd285ceb0806c0abfae", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ConfigUtils.java:[lines 25-216] \nIn class org.atalk.util.ConfigUtils \nIn method org.atalk.util.ConfigUtils.getAbsoluteFile(String, ConfigurationService) \nAt ConfigUtils.java:[line 61] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/util/ConfigUtils.getAbsoluteFile(Ljava/lang/String;Lorg/atalk/service/configuration/ConfigurationService;)Ljava/io/File; parameter 1 \nMethod usage not detected.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/util/ConfigUtils.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 61, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "            file = new File(new File(scHomeDirLocation, scHomeDirName), path).getAbsoluteFile();\n", "snippetText": "                scHomeDirName = \".\";\n            file = new File(new File(scHomeDirLocation, scHomeDirName), path).getAbsoluteFile();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ConfigUtils.java:[lines 25-216] \nIn class org.atalk.util.ConfigUtils \nIn method org.atalk.util.ConfigUtils.getAbsoluteFile(String, ConfigurationService) \nAt ConfigUtils.java:[line 61] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/service/configuration/ConfigurationService.getScHomeDirName()Ljava/lang/String;.", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/1736b5d0b0b32dd285ceb0806c0abfae", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ConfigUtils.java:[lines 25-216] \nIn class org.atalk.util.ConfigUtils \nIn method org.atalk.util.ConfigUtils.getAbsoluteFile(String, ConfigurationService) \nAt ConfigUtils.java:[line 61] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/service/configuration/ConfigurationService.getScHomeDirName()Ljava/lang/String;.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/util/ConfigUtils.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 61, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "            file = new File(new File(scHomeDirLocation, scHomeDirName), path).getAbsoluteFile();\n", "snippetText": "                scHomeDirName = \".\";\n            file = new File(new File(scHomeDirLocation, scHomeDirName), path).getAbsoluteFile();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileHandler.java:[lines 36-189] \nIn class org.atalk.util.logging.FileHandler \nIn method org.atalk.util.logging.FileHandler.createDestinationDirectory(String) \nAt FileHandler.java:[line 185] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/util/logging/FileHandler.createDestinationDirectory(Ljava/lang/String;)V parameter 0 \nAt FileHandler.java:[line 133] \nAt FileHandler.java:[line 136] \nAt FileHandler.java:[line 142] \nAt FileHandler.java:[line 145] \nAt FileHandler.java:[line 147] \nAt FileHandler.java:[line 181] \nAt FileHandler.java:[line 182] \nAt FileHandler.java:[line 183].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/6a75aee0b4e970d6975ede8a5b3892ac", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileHandler.java:[lines 36-189] \nIn class org.atalk.util.logging.FileHandler \nIn method org.atalk.util.logging.FileHandler.createDestinationDirectory(String) \nAt FileHandler.java:[line 185] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/util/logging/FileHandler.createDestinationDirectory(Ljava/lang/String;)V parameter 0 \nAt FileHandler.java:[line 133] \nAt FileHandler.java:[line 136] \nAt FileHandler.java:[line 142] \nAt FileHandler.java:[line 145] \nAt FileHandler.java:[line 147] \nAt FileHandler.java:[line 181] \nAt FileHandler.java:[line 182] \nAt FileHandler.java:[line 183].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/util/logging/FileHandler.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 185, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "                new File(dirName).mkdirs();\n", "snippetText": "\n                new File(dirName).mkdirs();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks \nAt XMLUtils.java:[lines 37-725] \nIn class org.atalk.util.xml.XMLUtils \nIn method org.atalk.util.xml.XMLUtils.createDocument(String, boolean) \nAt XMLUtils.java:[line 610] \nValue DocumentBuilder.parse(...).", "description": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks .", "internal_id": "XXE_DOCUMENT/ecf071c3ea936a947a48eac3d299d290", "severity": "moderate", "owasp_category": "", "category": "Xxe Document", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks \nAt XMLUtils.java:[lines 37-725] \nIn class org.atalk.util.xml.XMLUtils \nIn method org.atalk.util.xml.XMLUtils.createDocument(String, boolean) \nAt XMLUtils.java:[line 610] \nValue DocumentBuilder.parse(...).", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/util/xml/XMLUtils.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 610, "ruleId": "XXE_DOCUMENT", "ruleName": "Xxe Document", "contextText": "            return documentBuilder.parse(input);\n", "snippetText": "            InputStream input = StringUtils.fromString(xml);\n            return documentBuilder.parse(input);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "The use of TransformerFactory.newInstance(...) (TransformerFactory) is vulnerable to XML External Entity attacks \nAt XMLUtils.java:[lines 37-725] \nIn class org.atalk.util.xml.XMLUtils \nIn method org.atalk.util.xml.XMLUtils.createXml(Document) \nAt XMLUtils.java:[line 640] \nValue TransformerFactory.newInstance(...).", "description": "The use of TransformerFactory.newInstance(...) (TransformerFactory) is vulnerable to XML External Entity attacks .", "internal_id": "XXE_DTD_TRANSFORM_FACTORY/225760eb656f9d85d43b9af31c620b19", "severity": "moderate", "owasp_category": "", "category": "XXE DTD TRANSFORM FACTORY", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The use of TransformerFactory.newInstance(...) (TransformerFactory) is vulnerable to XML External Entity attacks \nAt XMLUtils.java:[lines 37-725] \nIn class org.atalk.util.xml.XMLUtils \nIn method org.atalk.util.xml.XMLUtils.createXml(Document) \nAt XMLUtils.java:[line 640] \nValue TransformerFactory.newInstance(...).", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/util/xml/XMLUtils.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 640, "ruleId": "XXE_DTD_TRANSFORM_FACTORY", "ruleName": "XXE DTD TRANSFORM FACTORY", "contextText": "        TransformerFactory transformerFactory = TransformerFactory.newInstance();\n", "snippetText": "    {\n        TransformerFactory transformerFactory = TransformerFactory.newInstance();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "The use of TransformerFactory.newInstance(...) (TransformerFactory) is vulnerable to XML External Entity attacks \nAt XMLUtils.java:[lines 37-725] \nIn class org.atalk.util.xml.XMLUtils \nIn method org.atalk.util.xml.XMLUtils.writeXML(Document, StreamResult, String, String) \nAt XMLUtils.java:[line 248] \nValue TransformerFactory.newInstance(...).", "description": "The use of TransformerFactory.newInstance(...) (TransformerFactory) is vulnerable to XML External Entity attacks .", "internal_id": "XXE_DTD_TRANSFORM_FACTORY/f5642a30a11d1b813a1971d62b743b86", "severity": "moderate", "owasp_category": "", "category": "XXE DTD TRANSFORM FACTORY", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The use of TransformerFactory.newInstance(...) (TransformerFactory) is vulnerable to XML External Entity attacks \nAt XMLUtils.java:[lines 37-725] \nIn class org.atalk.util.xml.XMLUtils \nIn method org.atalk.util.xml.XMLUtils.writeXML(Document, StreamResult, String, String) \nAt XMLUtils.java:[line 248] \nValue TransformerFactory.newInstance(...).", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/util/xml/XMLUtils.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 248, "ruleId": "XXE_DTD_TRANSFORM_FACTORY", "ruleName": "XXE DTD TRANSFORM FACTORY", "contextText": "            TransformerFactory tf = TransformerFactory.newInstance();\n", "snippetText": "            DOMSource domSource = new DOMSource(document);\n            TransformerFactory tf = TransformerFactory.newInstance();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "The use of TransformerFactory.newInstance(...) is vulnerable to XSLT External Entity attacks \nAt XMLUtils.java:[lines 37-725] \nIn class org.atalk.util.xml.XMLUtils \nIn method org.atalk.util.xml.XMLUtils.createXml(Document) \nAt XMLUtils.java:[line 640] \nValue TransformerFactory.newInstance(...).", "description": "The use of TransformerFactory.newInstance(...) is vulnerable to XSLT External Entity attacks .", "internal_id": "XXE_XSLT_TRANSFORM_FACTORY/17b6498e0c1749e136d7f3e3188a26b0", "severity": "moderate", "owasp_category": "", "category": "XXE XSLT TRANSFORM FACTORY", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The use of TransformerFactory.newInstance(...) is vulnerable to XSLT External Entity attacks \nAt XMLUtils.java:[lines 37-725] \nIn class org.atalk.util.xml.XMLUtils \nIn method org.atalk.util.xml.XMLUtils.createXml(Document) \nAt XMLUtils.java:[line 640] \nValue TransformerFactory.newInstance(...).", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/util/xml/XMLUtils.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 640, "ruleId": "XXE_XSLT_TRANSFORM_FACTORY", "ruleName": "XXE XSLT TRANSFORM FACTORY", "contextText": "        TransformerFactory transformerFactory = TransformerFactory.newInstance();\n", "snippetText": "    {\n        TransformerFactory transformerFactory = TransformerFactory.newInstance();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "The use of TransformerFactory.newInstance(...) is vulnerable to XSLT External Entity attacks \nAt XMLUtils.java:[lines 37-725] \nIn class org.atalk.util.xml.XMLUtils \nIn method org.atalk.util.xml.XMLUtils.writeXML(Document, StreamResult, String, String) \nAt XMLUtils.java:[line 248] \nValue TransformerFactory.newInstance(...).", "description": "The use of TransformerFactory.newInstance(...) is vulnerable to XSLT External Entity attacks .", "internal_id": "XXE_XSLT_TRANSFORM_FACTORY/8988112680cf263ac605ffa1ed465353", "severity": "moderate", "owasp_category": "", "category": "XXE XSLT TRANSFORM FACTORY", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The use of TransformerFactory.newInstance(...) is vulnerable to XSLT External Entity attacks \nAt XMLUtils.java:[lines 37-725] \nIn class org.atalk.util.xml.XMLUtils \nIn method org.atalk.util.xml.XMLUtils.writeXML(Document, StreamResult, String, String) \nAt XMLUtils.java:[line 248] \nValue TransformerFactory.newInstance(...).", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/atalk/util/xml/XMLUtils.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 248, "ruleId": "XXE_XSLT_TRANSFORM_FACTORY", "ruleName": "XXE XSLT TRANSFORM FACTORY", "contextText": "            TransformerFactory tf = TransformerFactory.newInstance();\n", "snippetText": "            DOMSource domSource = new DOMSource(document);\n            TransformerFactory tf = TransformerFactory.newInstance();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt AvatarManager.java:[lines 54-548] \nIn class org.jivesoftware.smackx.avatar.AvatarManager \nIn method org.jivesoftware.smackx.avatar.AvatarManager.getAvatarImageByJid(BareJid) \nAt AvatarManager.java:[line 258] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nTainted source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarImageByJid(Lorg/jxmpp/jid/BareJid;)[B parameter 0 \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131].", "description": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages .", "internal_id": "CRLF_INJECTION_LOGS/187ba9e05cb47e62f86b6f6bbe161671", "severity": "moderate", "owasp_category": "", "category": "CRLF INJECTION LOGS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt AvatarManager.java:[lines 54-548] \nIn class org.jivesoftware.smackx.avatar.AvatarManager \nIn method org.jivesoftware.smackx.avatar.AvatarManager.getAvatarImageByJid(BareJid) \nAt AvatarManager.java:[line 258] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nTainted source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarImageByJid(Lorg/jxmpp/jid/BareJid;)[B parameter 0 \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/jivesoftware/smackx/avatar/AvatarManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 258, "ruleId": "CRLF_INJECTION_LOGS", "ruleName": "CRLF INJECTION LOGS", "contextText": "        LOGGER.log(Level.FINE, \"Fetching avatar from local storage for: (\" + jid + \") => \" + avatarId);\n", "snippetText": "        String avatarId = getAvatarHashByJid(jid);\n        LOGGER.log(Level.FINE, \"Fetching avatar from local storage for: (\" + jid + \") => \" + avatarId);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt AvatarManager.java:[lines 54-548] \nIn class org.jivesoftware.smackx.avatar.AvatarManager \nIn method org.jivesoftware.smackx.avatar.AvatarManager.purgeAvatarImageByJid(BareJid) \nAt AvatarManager.java:[line 333] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nTainted source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.purgeAvatarImageByJid(Lorg/jxmpp/jid/BareJid;)V parameter 0 \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 332] \nAt AvatarManager.java:[line 333] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131].", "description": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages .", "internal_id": "CRLF_INJECTION_LOGS/bb4ed080c06d20e4c6e99482ecf02797", "severity": "moderate", "owasp_category": "", "category": "CRLF INJECTION LOGS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt AvatarManager.java:[lines 54-548] \nIn class org.jivesoftware.smackx.avatar.AvatarManager \nIn method org.jivesoftware.smackx.avatar.AvatarManager.purgeAvatarImageByJid(BareJid) \nAt AvatarManager.java:[line 333] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nTainted source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.purgeAvatarImageByJid(Lorg/jxmpp/jid/BareJid;)V parameter 0 \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 332] \nAt AvatarManager.java:[line 333] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/jivesoftware/smackx/avatar/AvatarManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 333, "ruleId": "CRLF_INJECTION_LOGS", "ruleName": "CRLF INJECTION LOGS", "contextText": "        LOGGER.log(Level.INFO, \"Purge avatar from store for: (\" + jid + \") => \" + avatarId);\n", "snippetText": "        String avatarId = getAvatarHashByJid(jid);\n        LOGGER.log(Level.INFO, \"Purge avatar from store for: (\" + jid + \") => \" + avatarId);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "Unsafe comparison of hash that are susceptible to timing attack \nAt AvatarManager.java:[lines 54-548] \nIn class org.jivesoftware.smackx.avatar.AvatarManager \nIn method org.jivesoftware.smackx.avatar.AvatarManager.isHashMultipleOwner(BareJid, String) \nAt AvatarManager.java:[line 386] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.isHashMultipleOwner(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)Z parameter 0 \nMethod usage with tainted arguments detected \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt UserAvatarManager.java:[line 317] \nAt UserAvatarManager.java:[line 334] \nAt UserAvatarManager.java:[line 335] \nAt VCardAvatarManager.java:[line 185] \nAt VCardAvatarManager.java:[line 213] \nAt VCardAvatarManager.java:[line 214].", "description": "Unsafe comparison of hash that are susceptible to timing attack .", "internal_id": "UNSAFE_HASH_EQUALS/2cea42c8941dd99b96e74f83d548366e", "severity": "critical", "owasp_category": "", "category": "UNSAFE HASH EQUALS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Unsafe comparison of hash that are susceptible to timing attack \nAt AvatarManager.java:[lines 54-548] \nIn class org.jivesoftware.smackx.avatar.AvatarManager \nIn method org.jivesoftware.smackx.avatar.AvatarManager.isHashMultipleOwner(BareJid, String) \nAt AvatarManager.java:[line 386] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.isHashMultipleOwner(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)Z parameter 0 \nMethod usage with tainted arguments detected \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt UserAvatarManager.java:[line 317] \nAt UserAvatarManager.java:[line 334] \nAt UserAvatarManager.java:[line 335] \nAt VCardAvatarManager.java:[line 185] \nAt VCardAvatarManager.java:[line 213] \nAt VCardAvatarManager.java:[line 214].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/jivesoftware/smackx/avatar/AvatarManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 386, "ruleId": "UNSAFE_HASH_EQUALS", "ruleName": "UNSAFE HASH EQUALS", "contextText": "                if (!TextUtils.isEmpty(imageHash) && imageHash.equals(avatarHash)) {\n", "snippetText": "                String imageHash = getAvatarHashByJid(contactJid);\n                if (!TextUtils.isEmpty(imageHash) && imageHash.equals(avatarHash)) {\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API SHA1 (SHA-1) is not a recommended cryptographic hash function \nAt AvatarManager.java:[lines 54-548] \nIn class org.jivesoftware.smackx.avatar.AvatarManager \nIn method org.jivesoftware.smackx.avatar.AvatarManager.getAvatarHash(byte[]) \nAt AvatarManager.java:[line 501] \nValue SHA1.", "description": "This API SHA-1 (SHA-1) is not a recommended cryptographic hash function .", "internal_id": "WEAK_MESSAGE_DIGEST_SHA1/b9183e9971429cc13365f7aa968ddf08", "severity": "moderate", "owasp_category": "", "category": "WEAK MESSAGE DIGEST SHA1", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API SHA1 (SHA-1) is not a recommended cryptographic hash function \nAt AvatarManager.java:[lines 54-548] \nIn class org.jivesoftware.smackx.avatar.AvatarManager \nIn method org.jivesoftware.smackx.avatar.AvatarManager.getAvatarHash(byte[]) \nAt AvatarManager.java:[line 501] \nValue SHA1.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/jivesoftware/smackx/avatar/AvatarManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 501, "ruleId": "WEAK_MESSAGE_DIGEST_SHA1", "ruleName": "WEAK MESSAGE DIGEST SHA1", "contextText": "                MessageDigest messageDigest = MessageDigest.getInstance(\"SHA1\");\n", "snippetText": "            if (imageData != null) {\n                MessageDigest messageDigest = MessageDigest.getInstance(\"SHA1\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AvatarCacheFile.java:[lines 33-170] \nIn class org.jivesoftware.smackx.avatar.cache.AvatarCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.AvatarCacheFile.getAvatarForHash(String) \nAt AvatarCacheFile.java:[line 119] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.getAvatarForHash(Ljava/lang/String;)[B parameter 0 \nMethod usage with tainted arguments detected \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1649] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1702] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1706] \nAt AvatarManager.java:[line 238] \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 260] \nAt AvatarManager.java:[line 278] \nAt AvatarManager.java:[line 279] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 316] \nAt AvatarManager.java:[line 317] \nAt JidToHashCacheFile.java:[line 96].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/107bf97ff276533f4def324809074362", "severity": "critical", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AvatarCacheFile.java:[lines 33-170] \nIn class org.jivesoftware.smackx.avatar.cache.AvatarCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.AvatarCacheFile.getAvatarForHash(String) \nAt AvatarCacheFile.java:[line 119] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.getAvatarForHash(Ljava/lang/String;)[B parameter 0 \nMethod usage with tainted arguments detected \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1649] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1702] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1706] \nAt AvatarManager.java:[line 238] \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 260] \nAt AvatarManager.java:[line 278] \nAt AvatarManager.java:[line 279] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 316] \nAt AvatarManager.java:[line 317] \nAt JidToHashCacheFile.java:[line 96].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 119, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\tFile file = new File(mStoreDir, id);\n", "snippetText": "\t\tbyte[] avatarImage = null;\n\t\tFile file = new File(mStoreDir, id);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AvatarCacheFile.java:[lines 33-170] \nIn class org.jivesoftware.smackx.avatar.cache.AvatarCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.AvatarCacheFile.purgeItemFor(String) \nAt AvatarCacheFile.java:[line 158] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.purgeItemFor(Ljava/lang/String;)Z parameter 0 \nMethod usage with tainted arguments detected \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 332] \nAt AvatarManager.java:[line 335] \nAt AvatarManager.java:[line 337] \nAt AvatarManager.java:[line 445] \nAt AvatarManager.java:[line 448] \nAt AvatarManager.java:[line 451] \nAt AvatarManager.java:[line 462] \nAt AvatarManager.java:[line 463] \nAt AvatarManager.java:[line 464] \nAt JidToHashCacheFile.java:[line 96] \nAt UserAvatarManager.java:[line 317] \nAt UserAvatarManager.java:[line 334] \nAt UserAvatarManager.java:[line 336] \nAt VCardAvatarManager.java:[line 185] \nAt VCardAvatarManager.java:[line 213] \nAt VCardAvatarManager.java:[line 215].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/de768b02edfe71988725aff604ced842", "severity": "critical", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AvatarCacheFile.java:[lines 33-170] \nIn class org.jivesoftware.smackx.avatar.cache.AvatarCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.AvatarCacheFile.purgeItemFor(String) \nAt AvatarCacheFile.java:[line 158] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.purgeItemFor(Ljava/lang/String;)Z parameter 0 \nMethod usage with tainted arguments detected \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 332] \nAt AvatarManager.java:[line 335] \nAt AvatarManager.java:[line 337] \nAt AvatarManager.java:[line 445] \nAt AvatarManager.java:[line 448] \nAt AvatarManager.java:[line 451] \nAt AvatarManager.java:[line 462] \nAt AvatarManager.java:[line 463] \nAt AvatarManager.java:[line 464] \nAt JidToHashCacheFile.java:[line 96] \nAt UserAvatarManager.java:[line 317] \nAt UserAvatarManager.java:[line 334] \nAt UserAvatarManager.java:[line 336] \nAt VCardAvatarManager.java:[line 185] \nAt VCardAvatarManager.java:[line 213] \nAt VCardAvatarManager.java:[line 215].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 158, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\tFile file = new File(mStoreDir, photoHash);\n", "snippetText": "\t{\n\t\tFile file = new File(mStoreDir, photoHash);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AvatarCacheFile.java:[lines 33-170] \nIn class org.jivesoftware.smackx.avatar.cache.AvatarCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.AvatarCacheFile.addAvatarByHash(String, InputStream) \nAt AvatarCacheFile.java:[line 88] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.addAvatarByHash(Ljava/lang/String;Ljava/io/InputStream;)V parameter 1 \nMethod usage not detected.", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/25b346e96b00f73f3b223091c8efa5b3", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AvatarCacheFile.java:[lines 33-170] \nIn class org.jivesoftware.smackx.avatar.cache.AvatarCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.AvatarCacheFile.addAvatarByHash(String, InputStream) \nAt AvatarCacheFile.java:[line 88] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.addAvatarByHash(Ljava/lang/String;Ljava/io/InputStream;)V parameter 1 \nMethod usage not detected.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 88, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\tFile file = new File(mStoreDir, id);\n", "snippetText": "\t{\n\t\tFile file = new File(mStoreDir, id);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AvatarCacheFile.java:[lines 33-170] \nIn class org.jivesoftware.smackx.avatar.cache.AvatarCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.AvatarCacheFile.addAvatarByHash(String, byte[]) \nAt AvatarCacheFile.java:[line 61] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.addAvatarByHash(Ljava/lang/String;[B)V parameter 1 \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1705] \nAt AvatarManager.java:[line 196] \nAt AvatarManager.java:[line 199] \nAt AvatarManager.java:[line 216] \nAt AvatarManager.java:[line 217] \nAt AvatarManager.java:[line 218] \nAt AvatarManager.java:[line 278] \nAt AvatarManager.java:[line 280] \nAt AvatarManager.java:[line 281] \nAt AvatarManager.java:[line 531] \nAt AvatarManager.java:[line 539] \nAt UserAvatarManager.java:[line 160] \nAt UserAvatarManager.java:[line 164] \nAt UserAvatarManager.java:[line 324].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/430da6cbb4a6a92154b9c64101c52949", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AvatarCacheFile.java:[lines 33-170] \nIn class org.jivesoftware.smackx.avatar.cache.AvatarCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.AvatarCacheFile.addAvatarByHash(String, byte[]) \nAt AvatarCacheFile.java:[line 61] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.addAvatarByHash(Ljava/lang/String;[B)V parameter 1 \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1705] \nAt AvatarManager.java:[line 196] \nAt AvatarManager.java:[line 199] \nAt AvatarManager.java:[line 216] \nAt AvatarManager.java:[line 217] \nAt AvatarManager.java:[line 218] \nAt AvatarManager.java:[line 278] \nAt AvatarManager.java:[line 280] \nAt AvatarManager.java:[line 281] \nAt AvatarManager.java:[line 531] \nAt AvatarManager.java:[line 539] \nAt UserAvatarManager.java:[line 160] \nAt UserAvatarManager.java:[line 164] \nAt UserAvatarManager.java:[line 324].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 61, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\tFile file = new File(mStoreDir, id);\n", "snippetText": "\t{\n\t\tFile file = new File(mStoreDir, id);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AvatarCacheFile.java:[lines 33-170] \nIn class org.jivesoftware.smackx.avatar.cache.AvatarCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.AvatarCacheFile.contains(String) \nAt AvatarCacheFile.java:[line 151] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.contains(Ljava/lang/String;)Z parameter 0 \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1705] \nAt AvatarManager.java:[line 196] \nAt AvatarManager.java:[line 216] \nAt AvatarManager.java:[line 217] \nAt AvatarManager.java:[line 218] \nAt AvatarManager.java:[line 278] \nAt AvatarManager.java:[line 280] \nAt AvatarManager.java:[line 281] \nAt AvatarManager.java:[line 363] \nAt AvatarManager.java:[line 531] \nAt AvatarManager.java:[line 537] \nAt AvatarManager.java:[line 539] \nAt UserAvatarManager.java:[line 160] \nAt UserAvatarManager.java:[line 164] \nAt UserAvatarManager.java:[line 315] \nAt UserAvatarManager.java:[line 324] \nAt VCardAvatarManager.java:[line 281] \nAt VCardAvatarManager.java:[line 284] \nAt VCardTempXUpdate.java:[line 109].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/b1036f29419652dbe500060b4093332d", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AvatarCacheFile.java:[lines 33-170] \nIn class org.jivesoftware.smackx.avatar.cache.AvatarCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.AvatarCacheFile.contains(String) \nAt AvatarCacheFile.java:[line 151] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.contains(Ljava/lang/String;)Z parameter 0 \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1705] \nAt AvatarManager.java:[line 196] \nAt AvatarManager.java:[line 216] \nAt AvatarManager.java:[line 217] \nAt AvatarManager.java:[line 218] \nAt AvatarManager.java:[line 278] \nAt AvatarManager.java:[line 280] \nAt AvatarManager.java:[line 281] \nAt AvatarManager.java:[line 363] \nAt AvatarManager.java:[line 531] \nAt AvatarManager.java:[line 537] \nAt AvatarManager.java:[line 539] \nAt UserAvatarManager.java:[line 160] \nAt UserAvatarManager.java:[line 164] \nAt UserAvatarManager.java:[line 315] \nAt UserAvatarManager.java:[line 324] \nAt VCardAvatarManager.java:[line 281] \nAt VCardAvatarManager.java:[line 284] \nAt VCardTempXUpdate.java:[line 109].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 151, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\tFile file = new File(mStoreDir, photoHash);\n", "snippetText": "\t{\n\t\tFile file = new File(mStoreDir, photoHash);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages \nAt JidToHashCacheFile.java:[lines 35-143] \nIn class org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile.getHashForJid(BareJid) \nAt JidToHashCacheFile.java:[line 99] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V \nSink parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nMethod usage with tainted arguments detected \nAt MetaContactImpl.java:[line 634] \nAt GlobalDisplayDetailsImpl.java:[line 135] \nAt GlobalDisplayDetailsImpl.java:[line 136] \nAt GlobalDisplayDetailsImpl.java:[line 305] \nAt GlobalDisplayDetailsImpl.java:[line 306] \nAt InfoRetriever.java:[line 62] \nAt InfoRetriever.java:[line 83] \nAt InfoRetriever.java:[line 119] \nAt InfoRetriever.java:[line 147] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1651] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1687] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1705] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 110] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 129] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 140] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 269] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 307] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 393] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 59] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 87] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 111] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 152] \nAt ServerStoredContactListJabberImpl.java:[line 1544] \nAt ServerStoredContactListJabberImpl.java:[line 1550] \nAt AccountID.java:[line 245] \nAt AccountInfoPresenceActivity.java:[line 759] \nAt AccountsListActivity.java:[line 242] \nAt AccountsListActivity.java:[line 244] \nAt AndroidCallListener.java:[line 225] \nAt CallEnded.java:[line 40] \nAt CallManager.java:[line 581] \nAt JingleMessageCallActivity.java:[line 153] \nAt JingleMessageHelper.java:[line 279] \nAt JingleMessageHelper.java:[line 385] \nAt ChatSessionFragment.java:[line 297] \nAt ChatSessionFragment.java:[line 298] \nAt ChatSessionRecord.java:[line 108] \nAt AvatarManager.java:[line 196] \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 332] \nAt AvatarManager.java:[line 359] \nAt AvatarManager.java:[line 385] \nAt AvatarManager.java:[line 437] \nAt AvatarManager.java:[line 438] \nAt AvatarManager.java:[line 445] \nAt AvatarManager.java:[line 462] \nAt AvatarManager.java:[line 537] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 99] \nAt JidToHashCacheFile.java:[line 131] \nAt UserAvatarManager.java:[line 198] \nAt UserAvatarManager.java:[line 315] \nAt UserAvatarManager.java:[line 317] \nAt VCardAvatarManager.java:[line 175] \nAt VCardAvatarManager.java:[line 181] \nAt VCardAvatarManager.java:[line 185] \nAt VCardAvatarManager.java:[line 270] \nAt VCardAvatarManager.java:[line 284] \nAt VCardAvatarManager.java:[line 290] \nAt VCardAvatarManager.java:[line 142].", "description": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages .", "internal_id": "CRLF_INJECTION_LOGS/bfeb2eb10ac398506b6c33affb64f881", "severity": "moderate", "owasp_category": "", "category": "CRLF INJECTION LOGS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages \nAt JidToHashCacheFile.java:[lines 35-143] \nIn class org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile.getHashForJid(BareJid) \nAt JidToHashCacheFile.java:[line 99] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V \nSink parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nMethod usage with tainted arguments detected \nAt MetaContactImpl.java:[line 634] \nAt GlobalDisplayDetailsImpl.java:[line 135] \nAt GlobalDisplayDetailsImpl.java:[line 136] \nAt GlobalDisplayDetailsImpl.java:[line 305] \nAt GlobalDisplayDetailsImpl.java:[line 306] \nAt InfoRetriever.java:[line 62] \nAt InfoRetriever.java:[line 83] \nAt InfoRetriever.java:[line 119] \nAt InfoRetriever.java:[line 147] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1651] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1687] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1705] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 110] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 129] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 140] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 269] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 307] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 393] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 59] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 87] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 111] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 152] \nAt ServerStoredContactListJabberImpl.java:[line 1544] \nAt ServerStoredContactListJabberImpl.java:[line 1550] \nAt AccountID.java:[line 245] \nAt AccountInfoPresenceActivity.java:[line 759] \nAt AccountsListActivity.java:[line 242] \nAt AccountsListActivity.java:[line 244] \nAt AndroidCallListener.java:[line 225] \nAt CallEnded.java:[line 40] \nAt CallManager.java:[line 581] \nAt JingleMessageCallActivity.java:[line 153] \nAt JingleMessageHelper.java:[line 279] \nAt JingleMessageHelper.java:[line 385] \nAt ChatSessionFragment.java:[line 297] \nAt ChatSessionFragment.java:[line 298] \nAt ChatSessionRecord.java:[line 108] \nAt AvatarManager.java:[line 196] \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 332] \nAt AvatarManager.java:[line 359] \nAt AvatarManager.java:[line 385] \nAt AvatarManager.java:[line 437] \nAt AvatarManager.java:[line 438] \nAt AvatarManager.java:[line 445] \nAt AvatarManager.java:[line 462] \nAt AvatarManager.java:[line 537] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 99] \nAt JidToHashCacheFile.java:[line 131] \nAt UserAvatarManager.java:[line 198] \nAt UserAvatarManager.java:[line 315] \nAt UserAvatarManager.java:[line 317] \nAt VCardAvatarManager.java:[line 175] \nAt VCardAvatarManager.java:[line 181] \nAt VCardAvatarManager.java:[line 185] \nAt VCardAvatarManager.java:[line 270] \nAt VCardAvatarManager.java:[line 284] \nAt VCardAvatarManager.java:[line 290] \nAt VCardAvatarManager.java:[line 142].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 99, "ruleId": "CRLF_INJECTION_LOGS", "ruleName": "CRLF INJECTION LOGS", "contextText": "\t\t\tLOGGER.log(Level.WARNING, \"Could not restore photoHash from file: \" + id, e);\n", "snippetText": "\t\tcatch (IOException e) {\n\t\t\tLOGGER.log(Level.WARNING, \"Could not restore photoHash from file: \" + id, e);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages \nAt JidToHashCacheFile.java:[lines 35-143] \nIn class org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile.getHashForJid(BareJid) \nAt JidToHashCacheFile.java:[line 106] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V \nSink parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nMethod usage with tainted arguments detected \nAt MetaContactImpl.java:[line 634] \nAt GlobalDisplayDetailsImpl.java:[line 135] \nAt GlobalDisplayDetailsImpl.java:[line 136] \nAt GlobalDisplayDetailsImpl.java:[line 305] \nAt GlobalDisplayDetailsImpl.java:[line 306] \nAt InfoRetriever.java:[line 62] \nAt InfoRetriever.java:[line 83] \nAt InfoRetriever.java:[line 119] \nAt InfoRetriever.java:[line 147] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1651] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1687] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1705] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 110] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 129] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 140] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 269] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 307] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 393] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 59] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 87] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 111] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 152] \nAt ServerStoredContactListJabberImpl.java:[line 1544] \nAt ServerStoredContactListJabberImpl.java:[line 1550] \nAt AccountID.java:[line 245] \nAt AccountInfoPresenceActivity.java:[line 759] \nAt AccountsListActivity.java:[line 242] \nAt AccountsListActivity.java:[line 244] \nAt AndroidCallListener.java:[line 225] \nAt CallEnded.java:[line 40] \nAt CallManager.java:[line 581] \nAt JingleMessageCallActivity.java:[line 153] \nAt JingleMessageHelper.java:[line 279] \nAt JingleMessageHelper.java:[line 385] \nAt ChatSessionFragment.java:[line 297] \nAt ChatSessionFragment.java:[line 298] \nAt ChatSessionRecord.java:[line 108] \nAt AvatarManager.java:[line 196] \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 332] \nAt AvatarManager.java:[line 359] \nAt AvatarManager.java:[line 385] \nAt AvatarManager.java:[line 437] \nAt AvatarManager.java:[line 438] \nAt AvatarManager.java:[line 445] \nAt AvatarManager.java:[line 462] \nAt AvatarManager.java:[line 537] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 106] \nAt JidToHashCacheFile.java:[line 131] \nAt UserAvatarManager.java:[line 198] \nAt UserAvatarManager.java:[line 315] \nAt UserAvatarManager.java:[line 317] \nAt VCardAvatarManager.java:[line 175] \nAt VCardAvatarManager.java:[line 181] \nAt VCardAvatarManager.java:[line 185] \nAt VCardAvatarManager.java:[line 270] \nAt VCardAvatarManager.java:[line 284] \nAt VCardAvatarManager.java:[line 290] \nAt VCardAvatarManager.java:[line 142].", "description": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages .", "internal_id": "CRLF_INJECTION_LOGS/0cb2191b29c01f946cb0a3e50daebf9a", "severity": "moderate", "owasp_category": "", "category": "CRLF INJECTION LOGS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages \nAt JidToHashCacheFile.java:[lines 35-143] \nIn class org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile.getHashForJid(BareJid) \nAt JidToHashCacheFile.java:[line 106] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V \nSink parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nMethod usage with tainted arguments detected \nAt MetaContactImpl.java:[line 634] \nAt GlobalDisplayDetailsImpl.java:[line 135] \nAt GlobalDisplayDetailsImpl.java:[line 136] \nAt GlobalDisplayDetailsImpl.java:[line 305] \nAt GlobalDisplayDetailsImpl.java:[line 306] \nAt InfoRetriever.java:[line 62] \nAt InfoRetriever.java:[line 83] \nAt InfoRetriever.java:[line 119] \nAt InfoRetriever.java:[line 147] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1651] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1687] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1705] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 110] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 129] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 140] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 269] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 307] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 393] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 59] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 87] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 111] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 152] \nAt ServerStoredContactListJabberImpl.java:[line 1544] \nAt ServerStoredContactListJabberImpl.java:[line 1550] \nAt AccountID.java:[line 245] \nAt AccountInfoPresenceActivity.java:[line 759] \nAt AccountsListActivity.java:[line 242] \nAt AccountsListActivity.java:[line 244] \nAt AndroidCallListener.java:[line 225] \nAt CallEnded.java:[line 40] \nAt CallManager.java:[line 581] \nAt JingleMessageCallActivity.java:[line 153] \nAt JingleMessageHelper.java:[line 279] \nAt JingleMessageHelper.java:[line 385] \nAt ChatSessionFragment.java:[line 297] \nAt ChatSessionFragment.java:[line 298] \nAt ChatSessionRecord.java:[line 108] \nAt AvatarManager.java:[line 196] \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 332] \nAt AvatarManager.java:[line 359] \nAt AvatarManager.java:[line 385] \nAt AvatarManager.java:[line 437] \nAt AvatarManager.java:[line 438] \nAt AvatarManager.java:[line 445] \nAt AvatarManager.java:[line 462] \nAt AvatarManager.java:[line 537] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 106] \nAt JidToHashCacheFile.java:[line 131] \nAt UserAvatarManager.java:[line 198] \nAt UserAvatarManager.java:[line 315] \nAt UserAvatarManager.java:[line 317] \nAt VCardAvatarManager.java:[line 175] \nAt VCardAvatarManager.java:[line 181] \nAt VCardAvatarManager.java:[line 185] \nAt VCardAvatarManager.java:[line 270] \nAt VCardAvatarManager.java:[line 284] \nAt VCardAvatarManager.java:[line 290] \nAt VCardAvatarManager.java:[line 142].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 106, "ruleId": "CRLF_INJECTION_LOGS", "ruleName": "CRLF INJECTION LOGS", "contextText": "\t\t\t\tLOGGER.log(Level.WARNING, \"Error while closing stream: \" + id, e);\n", "snippetText": "\t\t\tcatch (IOException e) {\n\t\t\t\tLOGGER.log(Level.WARNING, \"Error while closing stream: \" + id, e);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt JidToHashCacheFile.java:[lines 35-143] \nIn class org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile.getFileFor(BareJid) \nAt JidToHashCacheFile.java:[line 132] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smack/util/stringencoder/StringEncoder.encode(Ljava/lang/Object;)Ljava/lang/String;.", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/c2e7ef84ffc95e7e3ed29547b4b6fda6", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt JidToHashCacheFile.java:[lines 35-143] \nIn class org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile.getFileFor(BareJid) \nAt JidToHashCacheFile.java:[line 132] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smack/util/stringencoder/StringEncoder.encode(Ljava/lang/Object;)Ljava/lang/String;.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 132, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\treturn new File(mStoreDir, filename);\n", "snippetText": "\t\tString filename = filenameEncoder.encode(id.toString());\n\t\treturn new File(mStoreDir, filename);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt HttpAvatarRetriever.java:[lines 38-71] \nIn class org.jivesoftware.smackx.avatar.useravatar.HttpAvatarRetriever \nIn method org.jivesoftware.smackx.avatar.useravatar.HttpAvatarRetriever.getAvatar() \nAt HttpAvatarRetriever.java:[line 58] \nSink method java/net/URL.openStream()Ljava/io/InputStream; \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/useravatar/HttpAvatarRetriever.mUrl \nAt HttpAvatarRetriever.java:[line 58].", "description": "This web server request could be used by an attacker to expose internal services and filesystem. .", "internal_id": "URLCONNECTION_SSRF_FD/daa9923c1b7969985500b3778604d5a2", "severity": "moderate", "owasp_category": "a6-misconfiguration", "category": "URLCONNECTION SSRF FD", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt HttpAvatarRetriever.java:[lines 38-71] \nIn class org.jivesoftware.smackx.avatar.useravatar.HttpAvatarRetriever \nIn method org.jivesoftware.smackx.avatar.useravatar.HttpAvatarRetriever.getAvatar() \nAt HttpAvatarRetriever.java:[line 58] \nSink method java/net/URL.openStream()Ljava/io/InputStream; \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/useravatar/HttpAvatarRetriever.mUrl \nAt HttpAvatarRetriever.java:[line 58].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/jivesoftware/smackx/avatar/useravatar/HttpAvatarRetriever.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 58, "ruleId": "URLCONNECTION_SSRF_FD", "ruleName": "URLCONNECTION SSRF FD", "contextText": "        InputStream in = mUrl.openStream();\n", "snippetText": "            mUrl = new URL(mUrlString);\n        InputStream in = mUrl.openStream();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt UserAvatarManager.java:[lines 57-429] \nIn class org.jivesoftware.smackx.avatar.useravatar.UserAvatarManager \nIn method org.jivesoftware.smackx.avatar.useravatar.UserAvatarManager.downloadAvatar(EntityBareJid, String, AvatarMetadata$Info) \nAt UserAvatarManager.java:[line 338] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.purgeItemFor(Ljava/lang/String;)Z parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nTainted source org/jivesoftware/smackx/avatar/useravatar/UserAvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/useravatar/UserAvatarManager.downloadAvatar(Lorg/jxmpp/jid/EntityBareJid;Ljava/lang/String;Lorg/jivesoftware/smackx/avatar/useravatar/packet/AvatarMetadata$Info;)Z parameter 2 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.addJidToAvatarHashIndex(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/useravatar/UserAvatarManager.downloadAvatar(Lorg/jxmpp/jid/EntityBareJid;Ljava/lang/String;Lorg/jivesoftware/smackx/avatar/useravatar/packet/AvatarMetadata$Info;)Z parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.addJidToAvatarHashIndex(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/useravatar/AvatarRetrieverFactory.getRetriever(Lorg/jivesoftware/smack/XMPPConnection;Lorg/jxmpp/jid/EntityBareJid;Lorg/jivesoftware/smackx/avatar/useravatar/packet/AvatarMetadata$Info;)Lorg/jivesoftware/smackx/avatar/useravatar/AvatarRetriever; parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.isAvatarNew(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)Z parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.addHashByJid(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/useravatar/XmppAvatarRetriever.<init>(Lorg/jivesoftware/smack/XMPPConnection;Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.isHashMultipleOwner(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)Z parameter 0 \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 316] \nAt AvatarManager.java:[line 317] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131] \nAt UserAvatarManager.java:[line 317] \nAt UserAvatarManager.java:[line 334] \nAt UserAvatarManager.java:[line 338] \nAt XmppAvatarRetriever.java:[line 51].", "description": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages .", "internal_id": "CRLF_INJECTION_LOGS/b35630d22f68d9b97fb6a98488f62315", "severity": "moderate", "owasp_category": "", "category": "CRLF INJECTION LOGS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt UserAvatarManager.java:[lines 57-429] \nIn class org.jivesoftware.smackx.avatar.useravatar.UserAvatarManager \nIn method org.jivesoftware.smackx.avatar.useravatar.UserAvatarManager.downloadAvatar(EntityBareJid, String, AvatarMetadata$Info) \nAt UserAvatarManager.java:[line 338] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.purgeItemFor(Ljava/lang/String;)Z parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nTainted source org/jivesoftware/smackx/avatar/useravatar/UserAvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/useravatar/UserAvatarManager.downloadAvatar(Lorg/jxmpp/jid/EntityBareJid;Ljava/lang/String;Lorg/jivesoftware/smackx/avatar/useravatar/packet/AvatarMetadata$Info;)Z parameter 2 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.addJidToAvatarHashIndex(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/useravatar/UserAvatarManager.downloadAvatar(Lorg/jxmpp/jid/EntityBareJid;Ljava/lang/String;Lorg/jivesoftware/smackx/avatar/useravatar/packet/AvatarMetadata$Info;)Z parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.addJidToAvatarHashIndex(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/useravatar/AvatarRetrieverFactory.getRetriever(Lorg/jivesoftware/smack/XMPPConnection;Lorg/jxmpp/jid/EntityBareJid;Lorg/jivesoftware/smackx/avatar/useravatar/packet/AvatarMetadata$Info;)Lorg/jivesoftware/smackx/avatar/useravatar/AvatarRetriever; parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.isAvatarNew(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)Z parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.addHashByJid(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/useravatar/XmppAvatarRetriever.<init>(Lorg/jivesoftware/smack/XMPPConnection;Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.isHashMultipleOwner(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)Z parameter 0 \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 316] \nAt AvatarManager.java:[line 317] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131] \nAt UserAvatarManager.java:[line 317] \nAt UserAvatarManager.java:[line 334] \nAt UserAvatarManager.java:[line 338] \nAt XmppAvatarRetriever.java:[line 51].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/jivesoftware/smackx/avatar/useravatar/UserAvatarManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 338, "ruleId": "CRLF_INJECTION_LOGS", "ruleName": "CRLF INJECTION LOGS", "contextText": "                LOGGER.log(Level.INFO, \"Avatar with new avatarHash received (old => new) \"\n", "snippetText": "\n                LOGGER.log(Level.INFO, \"Avatar with new avatarHash received (old => new) \"\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "Unsafe comparison of hash that are susceptible to timing attack \nAt UserAvatarManager.java:[lines 57-429] \nIn class org.jivesoftware.smackx.avatar.useravatar.UserAvatarManager \nIn method org.jivesoftware.smackx.avatar.useravatar.UserAvatarManager.downloadAvatar(EntityBareJid, String, AvatarMetadata$Info) \nAt UserAvatarManager.java:[line 334] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/useravatar/UserAvatarManager.downloadAvatar(Lorg/jxmpp/jid/EntityBareJid;Ljava/lang/String;Lorg/jivesoftware/smackx/avatar/useravatar/packet/AvatarMetadata$Info;)Z parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.addJidToAvatarHashIndex(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 0 \nMethod usage not detected \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1705] \nAt AvatarManager.java:[line 316] \nAt AvatarManager.java:[line 317].", "description": "Unsafe comparison of hash that are susceptible to timing attack .", "internal_id": "UNSAFE_HASH_EQUALS/c87874cd16bd0984941c5178eeb6a516", "severity": "moderate", "owasp_category": "", "category": "UNSAFE HASH EQUALS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Unsafe comparison of hash that are susceptible to timing attack \nAt UserAvatarManager.java:[lines 57-429] \nIn class org.jivesoftware.smackx.avatar.useravatar.UserAvatarManager \nIn method org.jivesoftware.smackx.avatar.useravatar.UserAvatarManager.downloadAvatar(EntityBareJid, String, AvatarMetadata$Info) \nAt UserAvatarManager.java:[line 334] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/useravatar/UserAvatarManager.downloadAvatar(Lorg/jxmpp/jid/EntityBareJid;Ljava/lang/String;Lorg/jivesoftware/smackx/avatar/useravatar/packet/AvatarMetadata$Info;)Z parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.addJidToAvatarHashIndex(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 0 \nMethod usage not detected \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1705] \nAt AvatarManager.java:[line 316] \nAt AvatarManager.java:[line 317].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/jivesoftware/smackx/avatar/useravatar/UserAvatarManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 334, "ruleId": "UNSAFE_HASH_EQUALS", "ruleName": "UNSAFE HASH EQUALS", "contextText": "                if (!TextUtils.isEmpty(currentAvatarHash) && !currentAvatarHash.equals(avatarId)\n", "snippetText": "                 */\n                if (!TextUtils.isEmpty(currentAvatarHash) && !currentAvatarHash.equals(avatarId)\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt VCardAvatarManager.java:[lines 49-363] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager \nIn method org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager.downloadVCard(BareJid) \nAt VCardAvatarManager.java:[line 181] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.downloadVCard(Lorg/jxmpp/jid/BareJid;)Lorg/jivesoftware/smackx/vcardtemp/packet/VCard; parameter 0 \nUnknown source java/lang/Exception.getMessage()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.mAccount \nMethod usage with tainted arguments detected \nAt InfoRetriever.java:[line 62] \nAt InfoRetriever.java:[line 83] \nAt InfoRetriever.java:[line 119] \nAt InfoRetriever.java:[line 147] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1651] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 110] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 129] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 140] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 269] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 307] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 393] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 59] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 87] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 111] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 152] \nAt ServerStoredContactListJabberImpl.java:[line 1550] \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131] \nAt VCardAvatarManager.java:[line 175] \nAt VCardAvatarManager.java:[line 181] \nAt VCardAvatarManager.java:[line 290].", "description": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages .", "internal_id": "CRLF_INJECTION_LOGS/b7e364d8e247c19d738731e9e2478f91", "severity": "moderate", "owasp_category": "", "category": "CRLF INJECTION LOGS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt VCardAvatarManager.java:[lines 49-363] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager \nIn method org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager.downloadVCard(BareJid) \nAt VCardAvatarManager.java:[line 181] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.downloadVCard(Lorg/jxmpp/jid/BareJid;)Lorg/jivesoftware/smackx/vcardtemp/packet/VCard; parameter 0 \nUnknown source java/lang/Exception.getMessage()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.mAccount \nMethod usage with tainted arguments detected \nAt InfoRetriever.java:[line 62] \nAt InfoRetriever.java:[line 83] \nAt InfoRetriever.java:[line 119] \nAt InfoRetriever.java:[line 147] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1651] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 110] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 129] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 140] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 269] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 307] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 393] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 59] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 87] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 111] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 152] \nAt ServerStoredContactListJabberImpl.java:[line 1550] \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131] \nAt VCardAvatarManager.java:[line 175] \nAt VCardAvatarManager.java:[line 181] \nAt VCardAvatarManager.java:[line 290].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 181, "ruleId": "CRLF_INJECTION_LOGS", "ruleName": "CRLF INJECTION LOGS", "contextText": "            LOGGER.log(Level.WARNING, \"Error while downloading VCard for: '\" + userId + \"'. \" + e.getMessage());\n", "snippetText": "                | SmackException.NotConnectedException | InterruptedException e) {\n            LOGGER.log(Level.WARNING, \"Error while downloading VCard for: '\" + userId + \"'. \" + e.getMessage());\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt VCardAvatarManager.java:[lines 49-363] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager \nIn method org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager.downloadVCard(BareJid) \nAt VCardAvatarManager.java:[line 218] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.downloadVCard(Lorg/jxmpp/jid/BareJid;)Lorg/jivesoftware/smackx/vcardtemp/packet/VCard; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smack/util/StringUtils.encodeHex([B)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.mAccount \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.addAvatarImage([B)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.addJidToAvatarHashIndex(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.addJidToAvatarHashIndex(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source java/lang/Exception.getMessage()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.addHashByJid(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.setAvatarHash(Ljava/lang/String;)Z parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHash([B)Ljava/lang/String; \nMethod usage with tainted arguments detected \nAt InfoRetriever.java:[line 62] \nAt InfoRetriever.java:[line 83] \nAt InfoRetriever.java:[line 119] \nAt InfoRetriever.java:[line 147] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1651] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 110] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 129] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 140] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 269] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 307] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 393] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 59] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 87] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 111] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 152] \nAt ServerStoredContactListJabberImpl.java:[line 1550] \nAt AvatarManager.java:[line 216] \nAt AvatarManager.java:[line 217] \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 316] \nAt AvatarManager.java:[line 317] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131] \nAt VCardAvatarManager.java:[line 175] \nAt VCardAvatarManager.java:[line 181] \nAt VCardAvatarManager.java:[line 192] \nAt VCardAvatarManager.java:[line 199] \nAt VCardAvatarManager.java:[line 218] \nAt VCardAvatarManager.java:[line 290].", "description": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages .", "internal_id": "CRLF_INJECTION_LOGS/bae7423c95655b5a1e68cfda99b625aa", "severity": "moderate", "owasp_category": "", "category": "CRLF INJECTION LOGS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt VCardAvatarManager.java:[lines 49-363] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager \nIn method org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager.downloadVCard(BareJid) \nAt VCardAvatarManager.java:[line 218] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.downloadVCard(Lorg/jxmpp/jid/BareJid;)Lorg/jivesoftware/smackx/vcardtemp/packet/VCard; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smack/util/StringUtils.encodeHex([B)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.mAccount \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.addAvatarImage([B)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.addJidToAvatarHashIndex(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.addJidToAvatarHashIndex(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source java/lang/Exception.getMessage()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.addHashByJid(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.setAvatarHash(Ljava/lang/String;)Z parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHash([B)Ljava/lang/String; \nMethod usage with tainted arguments detected \nAt InfoRetriever.java:[line 62] \nAt InfoRetriever.java:[line 83] \nAt InfoRetriever.java:[line 119] \nAt InfoRetriever.java:[line 147] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1651] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 110] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 129] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 140] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 269] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 307] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 393] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 59] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 87] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 111] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 152] \nAt ServerStoredContactListJabberImpl.java:[line 1550] \nAt AvatarManager.java:[line 216] \nAt AvatarManager.java:[line 217] \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 316] \nAt AvatarManager.java:[line 317] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131] \nAt VCardAvatarManager.java:[line 175] \nAt VCardAvatarManager.java:[line 181] \nAt VCardAvatarManager.java:[line 192] \nAt VCardAvatarManager.java:[line 199] \nAt VCardAvatarManager.java:[line 218] \nAt VCardAvatarManager.java:[line 290].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 218, "ruleId": "CRLF_INJECTION_LOGS", "ruleName": "CRLF INJECTION LOGS", "contextText": "            LOGGER.log(Level.INFO, \"Downloaded vcard info for: \" + userId + \"; Hash = \" + avatarHash);\n", "snippetText": "            }\n            LOGGER.log(Level.INFO, \"Downloaded vcard info for: \" + userId + \"; Hash = \" + avatarHash);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt VCardAvatarManager.java:[lines 49-363] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager \nIn method org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager.processContactPhotoPresence(Stanza) \nAt VCardAvatarManager.java:[line 293] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.getAvatarHash()Ljava/lang/String; \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nTainted source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nUnknown source org/jivesoftware/smack/packet/Stanza.getFrom()Lorg/jxmpp/jid/Jid; \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.mAvatarHash \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt VCardAvatarManager.java:[line 270] \nAt VCardAvatarManager.java:[line 281] \nAt VCardAvatarManager.java:[line 293] \nAt VCardTempXUpdate.java:[line 109].", "description": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages .", "internal_id": "CRLF_INJECTION_LOGS/8ed666d3b58b2ff2d2477e12902cf599", "severity": "moderate", "owasp_category": "", "category": "CRLF INJECTION LOGS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt VCardAvatarManager.java:[lines 49-363] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager \nIn method org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager.processContactPhotoPresence(Stanza) \nAt VCardAvatarManager.java:[line 293] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.getAvatarHash()Ljava/lang/String; \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nTainted source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nUnknown source org/jivesoftware/smack/packet/Stanza.getFrom()Lorg/jxmpp/jid/Jid; \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.mAvatarHash \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt VCardAvatarManager.java:[line 270] \nAt VCardAvatarManager.java:[line 281] \nAt VCardAvatarManager.java:[line 293] \nAt VCardTempXUpdate.java:[line 109].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 293, "ruleId": "CRLF_INJECTION_LOGS", "ruleName": "CRLF INJECTION LOGS", "contextText": "                        LOGGER.log(Level.INFO, \"Presence with new avatarHash received (old => new) from: \"\n", "snippetText": "                    if ((mVCard != null) && (mVCard.getAvatar() != null)) {\n                        LOGGER.log(Level.INFO, \"Presence with new avatarHash received (old => new) from: \"\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "Unsafe comparison of hash that are susceptible to timing attack \nAt VCardAvatarManager.java:[lines 49-363] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager \nIn method org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager.downloadVCard(BareJid) \nAt VCardAvatarManager.java:[line 193] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nTainted source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt VCardAvatarManager.java:[line 185].", "description": "Unsafe comparison of hash that are susceptible to timing attack .", "internal_id": "UNSAFE_HASH_EQUALS/e929329db317f0a89ec332c025228c57", "severity": "moderate", "owasp_category": "", "category": "UNSAFE HASH EQUALS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Unsafe comparison of hash that are susceptible to timing attack \nAt VCardAvatarManager.java:[lines 49-363] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager \nIn method org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager.downloadVCard(BareJid) \nAt VCardAvatarManager.java:[line 193] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nTainted source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt VCardAvatarManager.java:[line 185].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 193, "ruleId": "UNSAFE_HASH_EQUALS", "ruleName": "UNSAFE HASH EQUALS", "contextText": "                if (!avatarHash.equals(currentAvatarHash)) {\n", "snippetText": "                avatarHash = addAvatarImage(avatarImage);\n                if (!avatarHash.equals(currentAvatarHash)) {\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt VCardTempXUpdate.java:[lines 42-158] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.packet.VCardTempXUpdate \nIn method org.jivesoftware.smackx.avatar.vcardavatar.packet.VCardTempXUpdate.setAvatarHash(String) \nAt VCardTempXUpdate.java:[line 94] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.setAvatarHash(Ljava/lang/String;)Z parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.mAvatarHash \nMethod usage with tainted arguments detected \nAt AvatarManager.java:[line 216] \nAt AvatarManager.java:[line 217] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 531] \nAt AvatarManager.java:[line 535] \nAt JidToHashCacheFile.java:[line 96] \nAt VCardAvatarManager.java:[line 192] \nAt VCardAvatarManager.java:[line 200] \nAt VCardAvatarManager.java:[line 142] \nAt VCardAvatarManager.java:[line 144] \nAt VCardTempXUpdate.java:[line 94].", "description": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages .", "internal_id": "CRLF_INJECTION_LOGS/473bec45414796bfea8ff799f6d7b095", "severity": "moderate", "owasp_category": "", "category": "CRLF INJECTION LOGS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt VCardTempXUpdate.java:[lines 42-158] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.packet.VCardTempXUpdate \nIn method org.jivesoftware.smackx.avatar.vcardavatar.packet.VCardTempXUpdate.setAvatarHash(String) \nAt VCardTempXUpdate.java:[line 94] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.setAvatarHash(Ljava/lang/String;)Z parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.mAvatarHash \nMethod usage with tainted arguments detected \nAt AvatarManager.java:[line 216] \nAt AvatarManager.java:[line 217] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 531] \nAt AvatarManager.java:[line 535] \nAt JidToHashCacheFile.java:[line 96] \nAt VCardAvatarManager.java:[line 192] \nAt VCardAvatarManager.java:[line 200] \nAt VCardAvatarManager.java:[line 142] \nAt VCardAvatarManager.java:[line 144] \nAt VCardTempXUpdate.java:[line 94].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 94, "ruleId": "CRLF_INJECTION_LOGS", "ruleName": "CRLF INJECTION LOGS", "contextText": "            LOGGER.log(Level.INFO, \"Account avatar hash updated with (old => new): \" + \"\\n\"\n", "snippetText": "        if ((avatarHash != null) && !avatarHash.equals(mAvatarHash)) {\n            LOGGER.log(Level.INFO, \"Account avatar hash updated with (old => new): \" + \"\\n\"\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "Unsafe comparison of hash that are susceptible to timing attack \nAt VCardTempXUpdate.java:[lines 42-158] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.packet.VCardTempXUpdate \nIn method org.jivesoftware.smackx.avatar.vcardavatar.packet.VCardTempXUpdate.setAvatarHash(String) \nAt VCardTempXUpdate.java:[line 93] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.mAvatarHash \nAt VCardTempXUpdate.java:[line 93].", "description": "Unsafe comparison of hash that are susceptible to timing attack .", "internal_id": "UNSAFE_HASH_EQUALS/53d8450cb095e0641cbcb892c351185a", "severity": "moderate", "owasp_category": "", "category": "UNSAFE HASH EQUALS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Unsafe comparison of hash that are susceptible to timing attack \nAt VCardTempXUpdate.java:[lines 42-158] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.packet.VCardTempXUpdate \nIn method org.jivesoftware.smackx.avatar.vcardavatar.packet.VCardTempXUpdate.setAvatarHash(String) \nAt VCardTempXUpdate.java:[line 93] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.mAvatarHash \nAt VCardTempXUpdate.java:[line 93].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 93, "ruleId": "UNSAFE_HASH_EQUALS", "ruleName": "UNSAFE HASH EQUALS", "contextText": "        if ((avatarHash != null) && !avatarHash.equals(mAvatarHash)) {\n", "snippetText": "        boolean isNewHash = false;\n        if ((avatarHash != null) && !avatarHash.equals(mAvatarHash)) {\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt HttpFileUploadManager.java:[lines 77-602] \nIn class org.jivesoftware.smackx.httpfileupload.HttpFileUploadManager \nIn method org.jivesoftware.smackx.httpfileupload.HttpFileUploadManager.upload(InputStream, long, Slot, UploadProgressListener) \nAt HttpFileUploadManager.java:[line 511] \nSink method java/net/URL.openConnection()Ljava/net/URLConnection; \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/httpfileupload/element/Slot.getPutUrl()Ljava/net/URL;.", "description": "This web server request could be used by an attacker to expose internal services and filesystem. .", "internal_id": "URLCONNECTION_SSRF_FD/0c4e6c669d88adcf91f77c5228038fa4", "severity": "moderate", "owasp_category": "a6-misconfiguration", "category": "URLCONNECTION SSRF FD", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt HttpFileUploadManager.java:[lines 77-602] \nIn class org.jivesoftware.smackx.httpfileupload.HttpFileUploadManager \nIn method org.jivesoftware.smackx.httpfileupload.HttpFileUploadManager.upload(InputStream, long, Slot, UploadProgressListener) \nAt HttpFileUploadManager.java:[line 511] \nSink method java/net/URL.openConnection()Ljava/net/URLConnection; \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/httpfileupload/element/Slot.getPutUrl()Ljava/net/URL;.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/jivesoftware/smackx/httpfileupload/HttpFileUploadManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 511, "ruleId": "URLCONNECTION_SSRF_FD", "ruleName": "URLCONNECTION SSRF FD", "contextText": "        final HttpURLConnection urlConnection = (HttpURLConnection) putUrl.openConnection();\n", "snippetText": "\n        final HttpURLConnection urlConnection = (HttpURLConnection) putUrl.openConnection();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "The initialization vector (IV) is not properly generated \nAt OmemoMediaSharingUtils.java:[lines 36-114] \nIn class org.jivesoftware.smackx.omemo_media_sharing.OmemoMediaSharingUtils \nIn method org.jivesoftware.smackx.omemo_media_sharing.OmemoMediaSharingUtils.decryptionCipherFrom(byte[], byte[]) \nAt OmemoMediaSharingUtils.java:[line 111].", "description": "The initialization vector (IV) is not properly generated .", "internal_id": "STATIC_IV/d302dd5d778b810d97f9d0d9d429cf59", "severity": "moderate", "owasp_category": "", "category": "Static Iv", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The initialization vector (IV) is not properly generated \nAt OmemoMediaSharingUtils.java:[lines 36-114] \nIn class org.jivesoftware.smackx.omemo_media_sharing.OmemoMediaSharingUtils \nIn method org.jivesoftware.smackx.omemo_media_sharing.OmemoMediaSharingUtils.decryptionCipherFrom(byte[], byte[]) \nAt OmemoMediaSharingUtils.java:[line 111].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/jivesoftware/smackx/omemo_media_sharing/OmemoMediaSharingUtils.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 111, "ruleId": "STATIC_IV", "ruleName": "Static Iv", "contextText": "        IvParameterSpec ivSpec = new IvParameterSpec(iv);\n", "snippetText": "        SecretKey secretKey = new SecretKeySpec(key, KEYTYPE);\n        IvParameterSpec ivSpec = new IvParameterSpec(iv);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "The initialization vector (IV) is not properly generated \nAt OmemoMediaSharingUtils.java:[lines 36-114] \nIn class org.jivesoftware.smackx.omemo_media_sharing.OmemoMediaSharingUtils \nIn method org.jivesoftware.smackx.omemo_media_sharing.OmemoMediaSharingUtils.encryptionCipherFrom(byte[], byte[]) \nAt OmemoMediaSharingUtils.java:[line 88].", "description": "The initialization vector (IV) is not properly generated .", "internal_id": "STATIC_IV/309fbbc8b1beda09fc85cf7f382be39a", "severity": "moderate", "owasp_category": "", "category": "Static Iv", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The initialization vector (IV) is not properly generated \nAt OmemoMediaSharingUtils.java:[lines 36-114] \nIn class org.jivesoftware.smackx.omemo_media_sharing.OmemoMediaSharingUtils \nIn method org.jivesoftware.smackx.omemo_media_sharing.OmemoMediaSharingUtils.encryptionCipherFrom(byte[], byte[]) \nAt OmemoMediaSharingUtils.java:[line 88].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/jivesoftware/smackx/omemo_media_sharing/OmemoMediaSharingUtils.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 88, "ruleId": "STATIC_IV", "ruleName": "Static Iv", "contextText": "        IvParameterSpec ivSpec = new IvParameterSpec(iv);\n", "snippetText": "        SecretKey secretKey = new SecretKeySpec(key, KEYTYPE);\n        IvParameterSpec ivSpec = new IvParameterSpec(iv);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This random generator (java.lang.Math.random()) is predictable \nAt RelayChannel.java:[lines 11-234] \nIn class org.xmpp.jnodes.RelayChannel \nIn method org.xmpp.jnodes.RelayChannel.createLocalRelayChannel(String, int, int) \nAt RelayChannel.java:[line 38] \nValue java.lang.Math.random().", "description": "This random generator (java.util.Random) is predictable .", "internal_id": "PREDICTABLE_RANDOM/3d31d31563f2604711e3ffad752e7d2f", "severity": "moderate", "owasp_category": "", "category": "Predictable Random", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This random generator (java.lang.Math.random()) is predictable \nAt RelayChannel.java:[lines 11-234] \nIn class org.xmpp.jnodes.RelayChannel \nIn method org.xmpp.jnodes.RelayChannel.createLocalRelayChannel(String, int, int) \nAt RelayChannel.java:[line 38] \nValue java.lang.Math.random().", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/xmpp/jnodes/RelayChannel.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 38, "ruleId": "PREDICTABLE_RANDOM", "ruleName": "Predictable Random", "contextText": "                int a = Math.round((int) (Math.random() * range)) + minPort;\n", "snippetText": "            try {\n                int a = Math.round((int) (Math.random() * range)) + minPort;\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This random generator (java.util.Random) is predictable \nAt PublicIPResolver.java:[lines 8-172] \nIn class org.xmpp.jnodes.nio.PublicIPResolver \nIn method org.xmpp.jnodes.nio.PublicIPResolver.<static initializer for PublicIPResolver>() \nAt PublicIPResolver.java:[line 13] \nValue java.util.Random.", "description": "This random generator (java.util.Random) is predictable .", "internal_id": "PREDICTABLE_RANDOM/5ff5341b73a38ea071737fdd5d43fc98", "severity": "moderate", "owasp_category": "", "category": "Predictable Random", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This random generator (java.util.Random) is predictable \nAt PublicIPResolver.java:[lines 8-172] \nIn class org.xmpp.jnodes.nio.PublicIPResolver \nIn method org.xmpp.jnodes.nio.PublicIPResolver.<static initializer for PublicIPResolver>() \nAt PublicIPResolver.java:[line 13] \nValue java.util.Random.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant28/aTalk/src/main/java/org/xmpp/jnodes/nio/PublicIPResolver.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 13, "ruleId": "PREDICTABLE_RANDOM", "ruleName": "Predictable Random", "contextText": "    private final static Random r = new Random(System.nanoTime());\n", "snippetText": "    private final static byte[] CHANGE_REQUEST_NO_CHANGE = {0, 3, 0, 4, 0, 0, 0, 0};\n    private final static Random r = new Random(System.nanoTime());\n"}, "tags": []}]}
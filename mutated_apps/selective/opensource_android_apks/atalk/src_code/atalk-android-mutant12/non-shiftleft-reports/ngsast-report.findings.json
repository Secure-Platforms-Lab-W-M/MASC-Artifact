{"findings": [{"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt OtrKeyManagerImpl.java:[lines 30-107] \nIn class net.java.otr4j.OtrKeyManagerImpl$DefaultPropertiesStore \nIn method net.java.otr4j.OtrKeyManagerImpl$DefaultPropertiesStore.getConfigurationFile() \nAt OtrKeyManagerImpl.java:[line 50] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/otr4j/OtrKeyManagerImpl$DefaultPropertiesStore.filepath \nAt OtrKeyManagerImpl.java:[line 50].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/d2746d75c78d65ae3020bc8062c278fe", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt OtrKeyManagerImpl.java:[lines 30-107] \nIn class net.java.otr4j.OtrKeyManagerImpl$DefaultPropertiesStore \nIn method net.java.otr4j.OtrKeyManagerImpl$DefaultPropertiesStore.getConfigurationFile() \nAt OtrKeyManagerImpl.java:[line 50] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/otr4j/OtrKeyManagerImpl$DefaultPropertiesStore.filepath \nAt OtrKeyManagerImpl.java:[line 50].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/otr4j/OtrKeyManagerImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 50, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "            File configFile = new File(filepath);\n", "snippetText": "        {\n            File configFile = new File(filepath);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API SHA-1 (SHA-1) is not a recommended cryptographic hash function \nAt OtrCryptoEngineImpl.java:[lines 31-342] \nIn class net.java.otr4j.crypto.OtrCryptoEngineImpl \nIn method net.java.otr4j.crypto.OtrCryptoEngineImpl.sha1Hash(byte[]) \nAt OtrCryptoEngineImpl.java:[line 153] \nValue SHA-1.", "description": "This API SHA-1 (SHA-1) is not a recommended cryptographic hash function .", "internal_id": "WEAK_MESSAGE_DIGEST_SHA1/486ad32da71d5c755a4711380552c4d2", "severity": "moderate", "owasp_category": "", "category": "WEAK MESSAGE DIGEST SHA1", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API SHA-1 (SHA-1) is not a recommended cryptographic hash function \nAt OtrCryptoEngineImpl.java:[lines 31-342] \nIn class net.java.otr4j.crypto.OtrCryptoEngineImpl \nIn method net.java.otr4j.crypto.OtrCryptoEngineImpl.sha1Hash(byte[]) \nAt OtrCryptoEngineImpl.java:[line 153] \nValue SHA-1.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/otr4j/crypto/OtrCryptoEngineImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 153, "ruleId": "WEAK_MESSAGE_DIGEST_SHA1", "ruleName": "WEAK MESSAGE DIGEST SHA1", "contextText": "            MessageDigest sha256 = MessageDigest.getInstance(\"SHA-1\");\n", "snippetText": "        try {\n            MessageDigest sha256 = MessageDigest.getInstance(\"SHA-1\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This random generator (java.util.Random) is predictable \nAt AuthContextImpl.java:[lines 32-792] \nIn class net.java.otr4j.session.AuthContextImpl \nIn method net.java.otr4j.session.AuthContextImpl.getR() \nAt AuthContextImpl.java:[line 218] \nValue java.util.Random.", "description": "This random generator (java.util.Random) is predictable .", "internal_id": "PREDICTABLE_RANDOM/c1aa30a83e5a9ea7064f20ef33decb66", "severity": "moderate", "owasp_category": "", "category": "Predictable Random", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This random generator (java.util.Random) is predictable \nAt AuthContextImpl.java:[lines 32-792] \nIn class net.java.otr4j.session.AuthContextImpl \nIn method net.java.otr4j.session.AuthContextImpl.getR() \nAt AuthContextImpl.java:[line 218] \nValue java.util.Random.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/otr4j/session/AuthContextImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 218, "ruleId": "PREDICTABLE_RANDOM", "ruleName": "Predictable Random", "contextText": "            new Random().nextBytes(r);\n", "snippetText": "            r = new byte[OtrCryptoEngine.AES_KEY_BYTE_LENGTH];\n            new Random().nextBytes(r);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "Unsafe comparison of hash that are susceptible to timing attack \nAt AuthContextImpl.java:[lines 32-792] \nIn class net.java.otr4j.session.AuthContextImpl \nIn method net.java.otr4j.session.AuthContextImpl.handleRevealSignatureMessage(RevealSignatureMessage) \nAt AuthContextImpl.java:[line 579] \nSink method java/util/Arrays.equals([B[B)Z \nSink parameter 0 \nUnknown source net/java/otr4j/session/AuthContextImpl.getRemoteDHPublicKeyHash()[B \nUnknown source net/java/otr4j/session/AuthContextImpl.remoteDHPublicKeyHash \nAt AuthContextImpl.java:[line 261] \nAt AuthContextImpl.java:[line 579].", "description": "Unsafe comparison of hash that are susceptible to timing attack .", "internal_id": "UNSAFE_HASH_EQUALS/6ea8c6916fac00c873c342dee0583a9e", "severity": "moderate", "owasp_category": "", "category": "UNSAFE HASH EQUALS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Unsafe comparison of hash that are susceptible to timing attack \nAt AuthContextImpl.java:[lines 32-792] \nIn class net.java.otr4j.session.AuthContextImpl \nIn method net.java.otr4j.session.AuthContextImpl.handleRevealSignatureMessage(RevealSignatureMessage) \nAt AuthContextImpl.java:[line 579] \nSink method java/util/Arrays.equals([B[B)Z \nSink parameter 0 \nUnknown source net/java/otr4j/session/AuthContextImpl.getRemoteDHPublicKeyHash()[B \nUnknown source net/java/otr4j/session/AuthContextImpl.remoteDHPublicKeyHash \nAt AuthContextImpl.java:[line 261] \nAt AuthContextImpl.java:[line 579].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/otr4j/session/AuthContextImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 579, "ruleId": "UNSAFE_HASH_EQUALS", "ruleName": "UNSAFE HASH EQUALS", "contextText": "                if (!Arrays.equals(remoteDHPublicKeyHash, this.getRemoteDHPublicKeyHash())) {\n", "snippetText": "                byte[] remoteDHPublicKeyHash = otrCryptoEngine.sha256Hash(remoteDHPublicKeyDecrypted);\n                if (!Arrays.equals(remoteDHPublicKeyHash, this.getRemoteDHPublicKeyHash())) {\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This random generator (java.util.Random) is predictable \nAt InstanceTag.java:[lines 11-89] \nIn class net.java.otr4j.session.InstanceTag \nIn method net.java.otr4j.session.InstanceTag.<static initializer for InstanceTag>() \nAt InstanceTag.java:[line 11] \nValue java.util.Random.", "description": "This random generator (java.util.Random) is predictable .", "internal_id": "PREDICTABLE_RANDOM/c46fa34c942f886681b1556a09d23089", "severity": "moderate", "owasp_category": "", "category": "Predictable Random", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This random generator (java.util.Random) is predictable \nAt InstanceTag.java:[lines 11-89] \nIn class net.java.otr4j.session.InstanceTag \nIn method net.java.otr4j.session.InstanceTag.<static initializer for InstanceTag>() \nAt InstanceTag.java:[line 11] \nValue java.util.Random.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/otr4j/session/InstanceTag.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 11, "ruleId": "PREDICTABLE_RANDOM", "ruleName": "Predictable Random", "contextText": "\tprivate static final Random RANDOM = new Random();\n", "snippetText": "\n\tprivate static final Random RANDOM = new Random();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt CertificateServiceImpl.java:[lines 59-971] \nIn class net.java.sip.communicator.impl.certificate.CertificateServiceImpl \nIn method net.java.sip.communicator.impl.certificate.CertificateServiceImpl.loadKeyStore(CertificateConfigEntry) \nAt CertificateServiceImpl.java:[line 385] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/certificate/CertificateConfigEntry.getKeyStore()Ljava/lang/String; \nUnknown source net/java/sip/communicator/service/certificate/CertificateConfigEntry.keyStore \nAt CertificateServiceImpl.java:[line 385] \nAt CertificateConfigEntry.java:[line 180].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/367ca5684db31ee3c4c30be1b38606c6", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt CertificateServiceImpl.java:[lines 59-971] \nIn class net.java.sip.communicator.impl.certificate.CertificateServiceImpl \nIn method net.java.sip.communicator.impl.certificate.CertificateServiceImpl.loadKeyStore(CertificateConfigEntry) \nAt CertificateServiceImpl.java:[line 385] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/certificate/CertificateConfigEntry.getKeyStore()Ljava/lang/String; \nUnknown source net/java/sip/communicator/service/certificate/CertificateConfigEntry.keyStore \nAt CertificateServiceImpl.java:[line 385] \nAt CertificateConfigEntry.java:[line 180].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/certificate/CertificateServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 385, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        final File f = new File(entry.getKeyStore());\n", "snippetText": "    {\n        final File f = new File(entry.getKeyStore());\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This random generator (java.util.Random) is predictable \nAt CertificateServiceImpl.java:[lines 59-971] \nIn class net.java.sip.communicator.impl.certificate.CertificateServiceImpl \nIn method net.java.sip.communicator.impl.certificate.CertificateServiceImpl.setClientAuthCertificateConfig(CertificateConfigEntry) \nAt CertificateServiceImpl.java:[line 265] \nValue java.util.Random.", "description": "This random generator (java.util.Random) is predictable .", "internal_id": "PREDICTABLE_RANDOM/db072c5591adb182283ea5e78200586b", "severity": "moderate", "owasp_category": "", "category": "Predictable Random", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This random generator (java.util.Random) is predictable \nAt CertificateServiceImpl.java:[lines 59-971] \nIn class net.java.sip.communicator.impl.certificate.CertificateServiceImpl \nIn method net.java.sip.communicator.impl.certificate.CertificateServiceImpl.setClientAuthCertificateConfig(CertificateConfigEntry) \nAt CertificateServiceImpl.java:[line 265] \nValue java.util.Random.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/certificate/CertificateServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 265, "ruleId": "PREDICTABLE_RANDOM", "ruleName": "Predictable Random", "contextText": "            e.setId(\"conf\" + Math.abs(new Random().nextInt()));\n", "snippetText": "        if (e.getId() == null)\n            e.setId(\"conf\" + Math.abs(new Random().nextInt()));\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "The cipher does not provide data integrity \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 89].", "description": "The cipher does not provide data integrity .", "internal_id": "CIPHER_INTEGRITY/de51a40564d1aa23642a0861397269bc", "severity": "critical", "owasp_category": "", "category": "Cipher Integrity", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The cipher does not provide data integrity \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 89].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/credentialsstorage/AESCrypto.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 89, "ruleId": "CIPHER_INTEGRITY", "ruleName": "Cipher Integrity", "contextText": "                decryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n", "snippetText": "            for (int i = 0; i < KEY_LENGTHS.length; i++) {\n                decryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "The cipher does not provide data integrity \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 90].", "description": "The cipher does not provide data integrity .", "internal_id": "CIPHER_INTEGRITY/69817821b2bed6ecbd11f37db5044337", "severity": "critical", "owasp_category": "", "category": "Cipher Integrity", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The cipher does not provide data integrity \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 90].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/credentialsstorage/AESCrypto.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 90, "ruleId": "CIPHER_INTEGRITY", "ruleName": "Cipher Integrity", "contextText": "                encryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n", "snippetText": "                decryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n                encryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 89].", "description": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data .", "internal_id": "ECB_MODE/9a85f14d5b639b86860b7937490f840e", "severity": "critical", "owasp_category": "", "category": "Ecb Mode", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 89].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/credentialsstorage/AESCrypto.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 89, "ruleId": "ECB_MODE", "ruleName": "Ecb Mode", "contextText": "                decryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n", "snippetText": "            for (int i = 0; i < KEY_LENGTHS.length; i++) {\n                decryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 90].", "description": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data .", "internal_id": "ECB_MODE/b6e3251be2375c56c8a5bd4119e67f91", "severity": "critical", "owasp_category": "", "category": "Ecb Mode", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 90].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/credentialsstorage/AESCrypto.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 90, "ruleId": "ECB_MODE", "ruleName": "Ecb Mode", "contextText": "                encryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n", "snippetText": "                decryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n                encryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HistoryImpl.java:[lines 50-371] \nIn class net.java.sip.communicator.impl.history.HistoryImpl \nIn method net.java.sip.communicator.impl.history.HistoryImpl.writeFile(String) \nAt HistoryImpl.java:[line 195] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/history/HistoryImpl.writeFile(Ljava/lang/String;)V parameter 0 \nAt HistoryWriterImpl.java:[line 131].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/bb97f9d5f6084c7b3373bbec56bc3c4c", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HistoryImpl.java:[lines 50-371] \nIn class net.java.sip.communicator.impl.history.HistoryImpl \nIn method net.java.sip.communicator.impl.history.HistoryImpl.writeFile(String) \nAt HistoryImpl.java:[line 195] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/history/HistoryImpl.writeFile(Ljava/lang/String;)V parameter 0 \nAt HistoryWriterImpl.java:[line 131].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/history/HistoryImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 195, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        File file = new File(this.directory, filename);\n", "snippetText": "    {\n        File file = new File(this.directory, filename);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HistoryImpl.java:[lines 50-371] \nIn class net.java.sip.communicator.impl.history.HistoryImpl \nIn method net.java.sip.communicator.impl.history.HistoryImpl.writeFile(String, Document) \nAt HistoryImpl.java:[line 217] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/history/HistoryImpl.writeFile(Ljava/lang/String;Lorg/w3c/dom/Document;)V parameter 1 \nAt HistoryImpl.java:[line 232] \nAt HistoryReaderImpl.java:[line 686] \nAt HistoryReaderImpl.java:[line 708] \nAt HistoryReaderImpl.java:[line 711] \nAt HistoryReaderImpl.java:[line 771] \nAt HistoryWriterImpl.java:[line 133] \nAt HistoryWriterImpl.java:[line 236] \nAt HistoryWriterImpl.java:[line 239] \nAt HistoryWriterImpl.java:[line 284] \nAt HistoryWriterImpl.java:[line 357] \nAt HistoryWriterImpl.java:[line 360] \nAt HistoryWriterImpl.java:[line 409] \nAt HistoryWriterImpl.java:[line 432] \nAt HistoryWriterImpl.java:[line 435] \nAt HistoryWriterImpl.java:[line 473].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/b86e379b73d05730a42eb3180ce00fe4", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HistoryImpl.java:[lines 50-371] \nIn class net.java.sip.communicator.impl.history.HistoryImpl \nIn method net.java.sip.communicator.impl.history.HistoryImpl.writeFile(String, Document) \nAt HistoryImpl.java:[line 217] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/history/HistoryImpl.writeFile(Ljava/lang/String;Lorg/w3c/dom/Document;)V parameter 1 \nAt HistoryImpl.java:[line 232] \nAt HistoryReaderImpl.java:[line 686] \nAt HistoryReaderImpl.java:[line 708] \nAt HistoryReaderImpl.java:[line 711] \nAt HistoryReaderImpl.java:[line 771] \nAt HistoryWriterImpl.java:[line 133] \nAt HistoryWriterImpl.java:[line 236] \nAt HistoryWriterImpl.java:[line 239] \nAt HistoryWriterImpl.java:[line 284] \nAt HistoryWriterImpl.java:[line 357] \nAt HistoryWriterImpl.java:[line 360] \nAt HistoryWriterImpl.java:[line 409] \nAt HistoryWriterImpl.java:[line 432] \nAt HistoryWriterImpl.java:[line 435] \nAt HistoryWriterImpl.java:[line 473].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/history/HistoryImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 217, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        File file = new File(this.directory, filename);\n", "snippetText": "    {\n        File file = new File(this.directory, filename);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.createHistoryDirectories(HistoryID) \nAt HistoryServiceImpl.java:[line 248] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/history/HistoryID.getID()[Ljava/lang/String; \nUnknown source net/java/sip/communicator/service/history/HistoryID.id \nAt HistoryServiceImpl.java:[line 239] \nAt HistoryID.java:[line 87].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/aa1734a1dd7c4582eb0c4b28d08dad88", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.createHistoryDirectories(HistoryID) \nAt HistoryServiceImpl.java:[line 248] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/history/HistoryID.getID()[Ljava/lang/String; \nUnknown source net/java/sip/communicator/service/history/HistoryID.id \nAt HistoryServiceImpl.java:[line 239] \nAt HistoryID.java:[line 87].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/history/HistoryServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 248, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "            dir = new File(dir, s);\n", "snippetText": "        for (String s : idComponents) {\n            dir = new File(dir, s);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.getDirForHistory(HistoryID) \nAt HistoryServiceImpl.java:[line 465] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/history/HistoryID.getID()[Ljava/lang/String; \nUnknown source net/java/sip/communicator/service/history/HistoryID.id \nAt HistoryServiceImpl.java:[line 445] \nAt HistoryServiceImpl.java:[line 450] \nAt HistoryServiceImpl.java:[line 465] \nAt HistoryID.java:[line 87].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/0073606eeb2b2c774a4765a0ec91167e", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.getDirForHistory(HistoryID) \nAt HistoryServiceImpl.java:[line 465] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/history/HistoryID.getID()[Ljava/lang/String; \nUnknown source net/java/sip/communicator/service/history/HistoryID.id \nAt HistoryServiceImpl.java:[line 445] \nAt HistoryServiceImpl.java:[line 450] \nAt HistoryServiceImpl.java:[line 465] \nAt HistoryID.java:[line 87].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/history/HistoryServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 465, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        return new File(histDir, dirName.toString());\n", "snippetText": "\n        return new File(histDir, dirName.toString());\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.getExistingHistories(String[]) \nAt HistoryServiceImpl.java:[line 505] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/history/HistoryServiceImpl.getExistingHistories([Ljava/lang/String;)Ljava/util/List; parameter 0 \nMethod usage not detected \nAt HistoryServiceImpl.java:[line 503] \nAt HistoryServiceImpl.java:[line 505].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/0a7d193e51493d6c790df25b6eaf6504", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.getExistingHistories(String[]) \nAt HistoryServiceImpl.java:[line 505] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/history/HistoryServiceImpl.getExistingHistories([Ljava/lang/String;)Ljava/util/List; parameter 0 \nMethod usage not detected \nAt HistoryServiceImpl.java:[line 503] \nAt HistoryServiceImpl.java:[line 505].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/history/HistoryServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 505, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        File srcFolder = new File(histDir, folderPath.toString());\n", "snippetText": "\n        File srcFolder = new File(histDir, folderPath.toString());\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.parse(ByteArrayInputStream) \nAt HistoryServiceImpl.java:[line 220] \nValue DocumentBuilder.parse(...).", "description": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks .", "internal_id": "XXE_DOCUMENT/4a746bae1bdd4033068390f51428057a", "severity": "moderate", "owasp_category": "", "category": "Xxe Document", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.parse(ByteArrayInputStream) \nAt HistoryServiceImpl.java:[line 220] \nValue DocumentBuilder.parse(...).", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/history/HistoryServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 220, "ruleId": "XXE_DOCUMENT", "ruleName": "Xxe Document", "contextText": "        return builder.parse(in);\n", "snippetText": "    {\n        return builder.parse(in);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.parse(File) \nAt HistoryServiceImpl.java:[line 203] \nValue DocumentBuilder.parse(...).", "description": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks .", "internal_id": "XXE_DOCUMENT/72e5dd33309d51a0287877af8f98f741", "severity": "moderate", "owasp_category": "", "category": "Xxe Document", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.parse(File) \nAt HistoryServiceImpl.java:[line 203] \nValue DocumentBuilder.parse(...).", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/history/HistoryServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 203, "ruleId": "XXE_DOCUMENT", "ruleName": "Xxe Document", "contextText": "        Document doc = builder.parse(fis);\n", "snippetText": "        FileInputStream fis = new FileInputStream(file);\n        Document doc = builder.parse(fis);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.createFileRecordFromProperties(Map, Object) \nAt MessageHistoryServiceImpl.java:[line 1196] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/util/Map.get(Ljava/lang/Object;)Ljava/lang/Object; \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.createFileRecordFromProperties(Ljava/util/Map;Ljava/lang/Object;)Lnet/java/sip/communicator/service/filehistory/FileRecord; parameter 1 \nAt MessageHistoryServiceImpl.java:[line 1062] \nAt MessageHistoryServiceImpl.java:[line 1071] \nAt MessageHistoryServiceImpl.java:[line 1103] \nAt MessageHistoryServiceImpl.java:[line 1122] \nAt MessageHistoryServiceImpl.java:[line 1125] \nAt MessageHistoryServiceImpl.java:[line 1193].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/cd7d0ad78b7df1eed8cd901ac08f679b", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.createFileRecordFromProperties(Map, Object) \nAt MessageHistoryServiceImpl.java:[line 1196] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/util/Map.get(Ljava/lang/Object;)Ljava/lang/Object; \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.createFileRecordFromProperties(Ljava/util/Map;Ljava/lang/Object;)Lnet/java/sip/communicator/service/filehistory/FileRecord; parameter 1 \nAt MessageHistoryServiceImpl.java:[line 1062] \nAt MessageHistoryServiceImpl.java:[line 1071] \nAt MessageHistoryServiceImpl.java:[line 1103] \nAt MessageHistoryServiceImpl.java:[line 1122] \nAt MessageHistoryServiceImpl.java:[line 1125] \nAt MessageHistoryServiceImpl.java:[line 1193].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1196, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        return new FileRecord(uuid, entityJid, dir, date, new File(file), encType, status);\n", "snippetText": "        int status = Integer.parseInt(mProperties.get(ChatMessage.STATUS));\n        return new FileRecord(uuid, entityJid, dir, date, new File(file), encType, status);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByKeyword(MetaContact, String, boolean) \nAt MessageHistoryServiceImpl.java:[line 1720] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByKeyword(Lnet/java/sip/communicator/service/contactlist/MetaContact;Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 434] \nAt MessageHistoryServiceImpl.java:[line 1712] \nAt MessageHistoryServiceImpl.java:[line 1720].", "description": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) .", "internal_id": "SQL_INJECTION_ANDROID/b5e9ca71b031e8863dc5354c319d860f", "severity": "moderate", "owasp_category": "", "category": "SQL INJECTION ANDROID", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByKeyword(MetaContact, String, boolean) \nAt MessageHistoryServiceImpl.java:[line 1720] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByKeyword(Lnet/java/sip/communicator/service/contactlist/MetaContact;Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 434] \nAt MessageHistoryServiceImpl.java:[line 1712] \nAt MessageHistoryServiceImpl.java:[line 1720].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1720, "ruleId": "SQL_INJECTION_ANDROID", "ruleName": "SQL INJECTION ANDROID", "contextText": "            Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n", "snippetText": "\n            Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByKeyword(ChatRoom, String, boolean) \nAt MessageHistoryServiceImpl.java:[line 1919] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByKeyword(Lnet/java/sip/communicator/service/protocol/ChatRoom;Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 1899] \nAt MessageHistoryServiceImpl.java:[line 1917] \nAt MessageHistoryServiceImpl.java:[line 1919].", "description": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) .", "internal_id": "SQL_INJECTION_ANDROID/3e235f4971a97857a2f2cf9538048575", "severity": "moderate", "owasp_category": "", "category": "SQL INJECTION ANDROID", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByKeyword(ChatRoom, String, boolean) \nAt MessageHistoryServiceImpl.java:[line 1919] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByKeyword(Lnet/java/sip/communicator/service/protocol/ChatRoom;Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 1899] \nAt MessageHistoryServiceImpl.java:[line 1917] \nAt MessageHistoryServiceImpl.java:[line 1919].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1919, "ruleId": "SQL_INJECTION_ANDROID", "ruleName": "SQL INJECTION ANDROID", "contextText": "        Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n", "snippetText": "\n        Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByKeywords(MetaContact, String[], boolean) \nAt MessageHistoryServiceImpl.java:[line 1755] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByKeywords(Lnet/java/sip/communicator/service/contactlist/MetaContact;[Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 447] \nAt MessageHistoryServiceImpl.java:[line 1745] \nAt MessageHistoryServiceImpl.java:[line 1747] \nAt MessageHistoryServiceImpl.java:[line 1755].", "description": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) .", "internal_id": "SQL_INJECTION_ANDROID/dcff6300de4600393f9e2e53e7d868e9", "severity": "moderate", "owasp_category": "", "category": "SQL INJECTION ANDROID", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByKeywords(MetaContact, String[], boolean) \nAt MessageHistoryServiceImpl.java:[line 1755] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByKeywords(Lnet/java/sip/communicator/service/contactlist/MetaContact;[Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 447] \nAt MessageHistoryServiceImpl.java:[line 1745] \nAt MessageHistoryServiceImpl.java:[line 1747] \nAt MessageHistoryServiceImpl.java:[line 1755].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1755, "ruleId": "SQL_INJECTION_ANDROID", "ruleName": "SQL INJECTION ANDROID", "contextText": "            Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n", "snippetText": "\n            Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByKeywords(ChatRoom, String[], boolean) \nAt MessageHistoryServiceImpl.java:[line 1962] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByKeywords(Lnet/java/sip/communicator/service/protocol/ChatRoom;[Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 1938] \nAt MessageHistoryServiceImpl.java:[line 1958] \nAt MessageHistoryServiceImpl.java:[line 1960] \nAt MessageHistoryServiceImpl.java:[line 1962].", "description": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) .", "internal_id": "SQL_INJECTION_ANDROID/033d55adccf3baa46ae81feca2091360", "severity": "moderate", "owasp_category": "", "category": "SQL INJECTION ANDROID", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByKeywords(ChatRoom, String[], boolean) \nAt MessageHistoryServiceImpl.java:[line 1962] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByKeywords(Lnet/java/sip/communicator/service/protocol/ChatRoom;[Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 1938] \nAt MessageHistoryServiceImpl.java:[line 1958] \nAt MessageHistoryServiceImpl.java:[line 1960] \nAt MessageHistoryServiceImpl.java:[line 1962].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1962, "ruleId": "SQL_INJECTION_ANDROID", "ruleName": "SQL INJECTION ANDROID", "contextText": "        Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n", "snippetText": "\n        Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByPeriod(MetaContact, Date, Date, String[], boolean) \nAt MessageHistoryServiceImpl.java:[line 1688] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByPeriod(Lnet/java/sip/communicator/service/contactlist/MetaContact;Ljava/util/Date;Ljava/util/Date;[Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 421] \nAt MessageHistoryServiceImpl.java:[line 1678] \nAt MessageHistoryServiceImpl.java:[line 1680] \nAt MessageHistoryServiceImpl.java:[line 1688].", "description": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) .", "internal_id": "SQL_INJECTION_ANDROID/9ac0459fa8e5adf4404457876b2b9163", "severity": "moderate", "owasp_category": "", "category": "SQL INJECTION ANDROID", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByPeriod(MetaContact, Date, Date, String[], boolean) \nAt MessageHistoryServiceImpl.java:[line 1688] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByPeriod(Lnet/java/sip/communicator/service/contactlist/MetaContact;Ljava/util/Date;Ljava/util/Date;[Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 421] \nAt MessageHistoryServiceImpl.java:[line 1678] \nAt MessageHistoryServiceImpl.java:[line 1680] \nAt MessageHistoryServiceImpl.java:[line 1688].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1688, "ruleId": "SQL_INJECTION_ANDROID", "ruleName": "SQL INJECTION ANDROID", "contextText": "            Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n", "snippetText": "\n            Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByPeriod(ChatRoom, Date, Date, String[], boolean) \nAt MessageHistoryServiceImpl.java:[line 1880] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByPeriod(Lnet/java/sip/communicator/service/protocol/ChatRoom;Ljava/util/Date;Ljava/util/Date;[Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 1852] \nAt MessageHistoryServiceImpl.java:[line 1876] \nAt MessageHistoryServiceImpl.java:[line 1878] \nAt MessageHistoryServiceImpl.java:[line 1880].", "description": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) .", "internal_id": "SQL_INJECTION_ANDROID/63d34a7c5541041e67a65e60a0b31cc2", "severity": "moderate", "owasp_category": "", "category": "SQL INJECTION ANDROID", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByPeriod(ChatRoom, Date, Date, String[], boolean) \nAt MessageHistoryServiceImpl.java:[line 1880] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByPeriod(Lnet/java/sip/communicator/service/protocol/ChatRoom;Ljava/util/Date;Ljava/util/Date;[Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 1852] \nAt MessageHistoryServiceImpl.java:[line 1876] \nAt MessageHistoryServiceImpl.java:[line 1878] \nAt MessageHistoryServiceImpl.java:[line 1880].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1880, "ruleId": "SQL_INJECTION_ANDROID", "ruleName": "SQL INJECTION ANDROID", "contextText": "        Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n", "snippetText": "\n        Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findRecentMessagesPerContact(int, String, String, boolean) \nAt MessageHistoryServiceImpl.java:[line 694] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nAt MessageHistoryServiceImpl.java:[line 686] \nAt MessageHistoryServiceImpl.java:[line 687] \nAt MessageHistoryServiceImpl.java:[line 688].", "description": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) .", "internal_id": "SQL_INJECTION_ANDROID/ecdf4ce6affdaecdcb18e78a537fba7d", "severity": "moderate", "owasp_category": "", "category": "SQL INJECTION ANDROID", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findRecentMessagesPerContact(int, String, String, boolean) \nAt MessageHistoryServiceImpl.java:[line 694] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nAt MessageHistoryServiceImpl.java:[line 686] \nAt MessageHistoryServiceImpl.java:[line 687] \nAt MessageHistoryServiceImpl.java:[line 688].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 694, "ruleId": "SQL_INJECTION_ANDROID", "ruleName": "SQL INJECTION ANDROID", "contextText": "        Cursor cursor = mDB.query(ChatSession.TABLE_NAME, null, whereCondition, args, null,\n", "snippetText": "\n        Cursor cursor = mDB.query(ChatSession.TABLE_NAME, null, whereCondition, args, null,\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection \nAt CommandNotificationHandlerImpl.java:[lines 23-57] \nIn class net.java.sip.communicator.impl.notification.CommandNotificationHandlerImpl \nIn method net.java.sip.communicator.impl.notification.CommandNotificationHandlerImpl.execute(CommandNotificationAction, Map) \nAt CommandNotificationHandlerImpl.java:[line 53] \nSink method java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/notification/CommandNotificationAction.commandDescriptor \nUnknown source net/java/sip/communicator/service/notification/CommandNotificationAction.getDescriptor()Ljava/lang/String; \nUnknown source java/util/Map.entrySet()Ljava/util/Set; \nUnknown source net/java/sip/communicator/impl/notification/CommandNotificationHandlerImpl.execute(Lnet/java/sip/communicator/service/notification/CommandNotificationAction;Ljava/util/Map;)V parameter 0 \nUnknown source java/util/Map$Entry.getKey()Ljava/lang/Object; \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nUnknown source java/util/Map$Entry.getValue()Ljava/lang/Object; \nMethod usage not detected \nAt CommandNotificationHandlerImpl.java:[line 41] \nAt CommandNotificationHandlerImpl.java:[line 43] \nAt CommandNotificationHandlerImpl.java:[line 47] \nAt CommandNotificationHandlerImpl.java:[line 48] \nAt CommandNotificationAction.java:[line 36].", "description": "This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection .", "internal_id": "COMMAND_INJECTION/efb17c2b71065b0d5af39d2073b97d2f", "severity": "moderate", "owasp_category": "", "category": "Command Injection", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection \nAt CommandNotificationHandlerImpl.java:[lines 23-57] \nIn class net.java.sip.communicator.impl.notification.CommandNotificationHandlerImpl \nIn method net.java.sip.communicator.impl.notification.CommandNotificationHandlerImpl.execute(CommandNotificationAction, Map) \nAt CommandNotificationHandlerImpl.java:[line 53] \nSink method java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/notification/CommandNotificationAction.commandDescriptor \nUnknown source net/java/sip/communicator/service/notification/CommandNotificationAction.getDescriptor()Ljava/lang/String; \nUnknown source java/util/Map.entrySet()Ljava/util/Set; \nUnknown source net/java/sip/communicator/impl/notification/CommandNotificationHandlerImpl.execute(Lnet/java/sip/communicator/service/notification/CommandNotificationAction;Ljava/util/Map;)V parameter 0 \nUnknown source java/util/Map$Entry.getKey()Ljava/lang/Object; \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nUnknown source java/util/Map$Entry.getValue()Ljava/lang/Object; \nMethod usage not detected \nAt CommandNotificationHandlerImpl.java:[line 41] \nAt CommandNotificationHandlerImpl.java:[line 43] \nAt CommandNotificationHandlerImpl.java:[line 47] \nAt CommandNotificationHandlerImpl.java:[line 48] \nAt CommandNotificationAction.java:[line 36].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/notification/CommandNotificationHandlerImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 53, "ruleId": "COMMAND_INJECTION", "ruleName": "Command Injection", "contextText": "            Runtime.getRuntime().exec(actionDescriptor);\n", "snippetText": "        try {\n            Runtime.getRuntime().exec(actionDescriptor);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HttpFileDownloadJabberImpl.java:[lines 38-206] \nIn class net.java.sip.communicator.impl.protocol.jabber.HttpFileDownloadJabberImpl \nIn method new net.java.sip.communicator.impl.protocol.jabber.HttpFileDownloadJabberImpl(Contact, String, String, int) \nAt HttpFileDownloadJabberImpl.java:[line 81] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/protocol/jabber/HttpFileDownloadJabberImpl.mFileName \nAt HttpFileDownloadJabberImpl.java:[line 81].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/183a960646465c0bb32b72b0568089a4", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HttpFileDownloadJabberImpl.java:[lines 38-206] \nIn class net.java.sip.communicator.impl.protocol.jabber.HttpFileDownloadJabberImpl \nIn method new net.java.sip.communicator.impl.protocol.jabber.HttpFileDownloadJabberImpl(Contact, String, String, int) \nAt HttpFileDownloadJabberImpl.java:[line 81] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/protocol/jabber/HttpFileDownloadJabberImpl.mFileName \nAt HttpFileDownloadJabberImpl.java:[line 81].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/HttpFileDownloadJabberImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 81, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        mFile = (mFileName != null) ? new File(mFileName) : null;\n", "snippetText": "        mFileName = uri.getLastPathSegment();\n        mFile = (mFileName != null) ? new File(mFileName) : null;\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HttpFileUploadJabberImpl.java:[lines 35-141] \nIn class net.java.sip.communicator.impl.protocol.jabber.HttpFileUploadJabberImpl \nIn method new net.java.sip.communicator.impl.protocol.jabber.HttpFileUploadJabberImpl(Object, String, String) \nAt HttpFileUploadJabberImpl.java:[line 51] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/protocol/jabber/HttpFileUploadJabberImpl.<init>(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V parameter 0 \nAt FileSendConversation.java:[line 215].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/94cbb1f469e92eccd2ad6f0d80ac7558", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HttpFileUploadJabberImpl.java:[lines 35-141] \nIn class net.java.sip.communicator.impl.protocol.jabber.HttpFileUploadJabberImpl \nIn method new net.java.sip.communicator.impl.protocol.jabber.HttpFileUploadJabberImpl(Object, String, String) \nAt HttpFileUploadJabberImpl.java:[line 51] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/protocol/jabber/HttpFileUploadJabberImpl.<init>(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V parameter 0 \nAt FileSendConversation.java:[line 215].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/HttpFileUploadJabberImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 51, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        mFile = new File(file);\n", "snippetText": "        mFileName = file;\n        mFile = new File(file);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt OperationSetFileTransferJabberImpl.java:[lines 46-551] \nIn class net.java.sip.communicator.impl.protocol.jabber.OperationSetFileTransferJabberImpl \nIn method net.java.sip.communicator.impl.protocol.jabber.OperationSetFileTransferJabberImpl.sendFile(Contact, Contact, String, String, String) \nAt OperationSetFileTransferJabberImpl.java:[line 191] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/protocol/jabber/OperationSetFileTransferJabberImpl.sendFile(Lnet/java/sip/communicator/service/protocol/Contact;Lnet/java/sip/communicator/service/protocol/Contact;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lnet/java/sip/communicator/service/protocol/FileTransfer; parameter 1 \nMethod usage not detected.", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/570ae09673054fd1160bfd1360a9f0ef", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt OperationSetFileTransferJabberImpl.java:[lines 46-551] \nIn class net.java.sip.communicator.impl.protocol.jabber.OperationSetFileTransferJabberImpl \nIn method net.java.sip.communicator.impl.protocol.jabber.OperationSetFileTransferJabberImpl.sendFile(Contact, Contact, String, String, String) \nAt OperationSetFileTransferJabberImpl.java:[line 191] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/protocol/jabber/OperationSetFileTransferJabberImpl.sendFile(Lnet/java/sip/communicator/service/protocol/Contact;Lnet/java/sip/communicator/service/protocol/Contact;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lnet/java/sip/communicator/service/protocol/FileTransfer; parameter 1 \nMethod usage not detected.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/OperationSetFileTransferJabberImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 191, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        return this.sendFile(toContact, new File(localPath), uuid);\n", "snippetText": "    {\n        return this.sendFile(toContact, new File(localPath), uuid);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt ProtocolIconJabberImpl.java:[lines 41-163] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolIconJabberImpl \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolIconJabberImpl.loadIcon(String) \nAt ProtocolIconJabberImpl.java:[line 128] \nSink method java/net/URL.openStream()Ljava/io/InputStream; \nSink parameter 0 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nUnknown source net/java/sip/communicator/impl/protocol/jabber/ProtocolIconJabberImpl.loadIcon(Ljava/lang/String;)[B parameter 0 \nAt ProtocolIconJabberImpl.java:[line 57] \nAt ProtocolIconJabberImpl.java:[line 58] \nAt ProtocolIconJabberImpl.java:[line 59] \nAt ProtocolIconJabberImpl.java:[line 114] \nAt ProtocolIconJabberImpl.java:[line 128] \nAt ProtocolProviderServiceJabberImpl.java:[line 2189] \nAt ProtocolProviderServiceJabberImpl.java:[line 2193] \nAt AccountID.java:[line 399] \nAt AccountID.java:[line 412] \nAt AccountID.java:[line 419] \nAt AccountID.java:[line 423] \nAt AccountID.java:[line 427] \nAt AccountID.java:[line 1465].", "description": "This web server request could be used by an attacker to expose internal services and filesystem. .", "internal_id": "URLCONNECTION_SSRF_FD/2d8bb4dc62e9ae97fe1ec9cca68ba2be", "severity": "moderate", "owasp_category": "a6-misconfiguration", "category": "URLCONNECTION SSRF FD", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt ProtocolIconJabberImpl.java:[lines 41-163] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolIconJabberImpl \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolIconJabberImpl.loadIcon(String) \nAt ProtocolIconJabberImpl.java:[line 128] \nSink method java/net/URL.openStream()Ljava/io/InputStream; \nSink parameter 0 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nUnknown source net/java/sip/communicator/impl/protocol/jabber/ProtocolIconJabberImpl.loadIcon(Ljava/lang/String;)[B parameter 0 \nAt ProtocolIconJabberImpl.java:[line 57] \nAt ProtocolIconJabberImpl.java:[line 58] \nAt ProtocolIconJabberImpl.java:[line 59] \nAt ProtocolIconJabberImpl.java:[line 114] \nAt ProtocolIconJabberImpl.java:[line 128] \nAt ProtocolProviderServiceJabberImpl.java:[line 2189] \nAt ProtocolProviderServiceJabberImpl.java:[line 2193] \nAt AccountID.java:[line 399] \nAt AccountID.java:[line 412] \nAt AccountID.java:[line 419] \nAt AccountID.java:[line 423] \nAt AccountID.java:[line 427] \nAt AccountID.java:[line 1465].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/ProtocolIconJabberImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 128, "ruleId": "URLCONNECTION_SSRF_FD", "ruleName": "URLCONNECTION SSRF FD", "contextText": "            is = new URL(imagePath).openStream();\n", "snippetText": "            // try to load path it maybe valid url\n            is = new URL(imagePath).openStream();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ProtocolProviderServiceJabberImpl.java:[lines 171-3126] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl.initAvatarStore() \nAt ProtocolProviderServiceJabberImpl.java:[line 1674] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/content/Context.getFilesDir()Ljava/io/File; \nAt ProtocolProviderServiceJabberImpl.java:[line 1674].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/d6898037bf666747399dd57475339338", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ProtocolProviderServiceJabberImpl.java:[lines 171-3126] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl.initAvatarStore() \nAt ProtocolProviderServiceJabberImpl.java:[line 1674] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/content/Context.getFilesDir()Ljava/io/File; \nAt ProtocolProviderServiceJabberImpl.java:[line 1674].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/ProtocolProviderServiceJabberImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1674, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        File avatarStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir() + \"/avatarStore\");\n", "snippetText": "        /* Persistent Storage directory for Avatar. */\n        File avatarStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir() + \"/avatarStore\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ProtocolProviderServiceJabberImpl.java:[lines 171-3126] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl.initRosterStore() \nAt ProtocolProviderServiceJabberImpl.java:[line 1691] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/protocol/AccountID.userID \nUnknown source android/content/Context.getFilesDir()Ljava/io/File; \nUnknown source net/java/sip/communicator/service/protocol/jabber/JabberAccountID.getUserID()Ljava/lang/String; \nAt ProtocolProviderServiceJabberImpl.java:[line 1689] \nAt ProtocolProviderServiceJabberImpl.java:[line 1691] \nAt AccountID.java:[line 239].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/24f2f71d0931446153c85677fc22ad02", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ProtocolProviderServiceJabberImpl.java:[lines 171-3126] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl.initRosterStore() \nAt ProtocolProviderServiceJabberImpl.java:[line 1691] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/protocol/AccountID.userID \nUnknown source android/content/Context.getFilesDir()Ljava/io/File; \nUnknown source net/java/sip/communicator/service/protocol/jabber/JabberAccountID.getUserID()Ljava/lang/String; \nAt ProtocolProviderServiceJabberImpl.java:[line 1689] \nAt ProtocolProviderServiceJabberImpl.java:[line 1691] \nAt AccountID.java:[line 239].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/ProtocolProviderServiceJabberImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1691, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        rosterStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir() + \"/rosterStore_\" + userID);\n", "snippetText": "\n        rosterStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir() + \"/rosterStore_\" + userID);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt ProtocolProviderServiceJabberImpl.java:[lines 2696-2786] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl$HostTrustManager \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl$HostTrustManager.getAcceptedIssuers() \nAt ProtocolProviderServiceJabberImpl.java:[line 2707].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/0cff9b90310a0e46db7b2b0567286ace", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt ProtocolProviderServiceJabberImpl.java:[lines 2696-2786] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl$HostTrustManager \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl$HostTrustManager.getAcceptedIssuers() \nAt ProtocolProviderServiceJabberImpl.java:[line 2707].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/ProtocolProviderServiceJabberImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 2707, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "            return new X509Certificate[0];\n", "snippetText": "        {\n            return new X509Certificate[0];\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ScServiceDiscoveryManager.java:[lines 48-653] \nIn class net.java.sip.communicator.impl.protocol.jabber.ScServiceDiscoveryManager \nIn method net.java.sip.communicator.impl.protocol.jabber.ScServiceDiscoveryManager.initDiscoInfoPersistentStore() \nAt ScServiceDiscoveryManager.java:[line 628] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/protocol/AccountID.userID \nUnknown source android/content/Context.getFilesDir()Ljava/io/File; \nUnknown source net/java/sip/communicator/service/protocol/AccountID.getUserID()Ljava/lang/String; \nAt ScServiceDiscoveryManager.java:[line 627] \nAt ScServiceDiscoveryManager.java:[line 628] \nAt AccountID.java:[line 239].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/7fb510c36e3b7f4a27e57aa7f356b23c", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ScServiceDiscoveryManager.java:[lines 48-653] \nIn class net.java.sip.communicator.impl.protocol.jabber.ScServiceDiscoveryManager \nIn method net.java.sip.communicator.impl.protocol.jabber.ScServiceDiscoveryManager.initDiscoInfoPersistentStore() \nAt ScServiceDiscoveryManager.java:[line 628] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/protocol/AccountID.userID \nUnknown source android/content/Context.getFilesDir()Ljava/io/File; \nUnknown source net/java/sip/communicator/service/protocol/AccountID.getUserID()Ljava/lang/String; \nAt ScServiceDiscoveryManager.java:[line 627] \nAt ScServiceDiscoveryManager.java:[line 628] \nAt AccountID.java:[line 239].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/ScServiceDiscoveryManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 628, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        discoInfoStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir() + \"/discoInfoStore_\" + userID);\n", "snippetText": "        String userID = parentProvider.getAccountID().getUserID();\n        discoInfoStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir() + \"/discoInfoStore_\" + userID);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ScServiceDiscoveryManager.java:[lines 48-653] \nIn class net.java.sip.communicator.impl.protocol.jabber.ScServiceDiscoveryManager \nIn method net.java.sip.communicator.impl.protocol.jabber.ScServiceDiscoveryManager.initEntityPersistentStore() \nAt ScServiceDiscoveryManager.java:[line 600] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/content/Context.getFilesDir()Ljava/io/File; \nAt ScServiceDiscoveryManager.java:[line 600].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/c48acccdd451c77fe3ae417918261535", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ScServiceDiscoveryManager.java:[lines 48-653] \nIn class net.java.sip.communicator.impl.protocol.jabber.ScServiceDiscoveryManager \nIn method net.java.sip.communicator.impl.protocol.jabber.ScServiceDiscoveryManager.initEntityPersistentStore() \nAt ScServiceDiscoveryManager.java:[line 600] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/content/Context.getFilesDir()Ljava/io/File; \nAt ScServiceDiscoveryManager.java:[line 600].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/ScServiceDiscoveryManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 600, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        entityStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir() + \"/entityStore\");\n", "snippetText": "    {\n        entityStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir() + \"/entityStore\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ThumbnailedFile.java:[lines 43-88] \nIn class net.java.sip.communicator.impl.protocol.jabber.ThumbnailedFile \nIn method new net.java.sip.communicator.impl.protocol.jabber.ThumbnailedFile(File, int, int, String, byte[]) \nAt ThumbnailedFile.java:[line 43] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getPath()Ljava/lang/String;.", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/ee2651ed0577ced57f6f8946e049d70e", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ThumbnailedFile.java:[lines 43-88] \nIn class net.java.sip.communicator.impl.protocol.jabber.ThumbnailedFile \nIn method new net.java.sip.communicator.impl.protocol.jabber.ThumbnailedFile(File, int, int, String, byte[]) \nAt ThumbnailedFile.java:[line 43] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getPath()Ljava/lang/String;.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/ThumbnailedFile.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 43, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        super(file.getPath());\n", "snippetText": "    {\n        super(file.getPath());\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This random generator (java.util.Random) is predictable \nAt DHCPProvisioningDiscover.java:[lines 60-234] \nIn class net.java.sip.communicator.impl.provdisc.dhcp.DHCPProvisioningDiscover \nIn method new net.java.sip.communicator.impl.provdisc.dhcp.DHCPProvisioningDiscover(int, byte) \nAt DHCPProvisioningDiscover.java:[line 81] \nValue java.util.Random.", "description": "This random generator (java.util.Random) is predictable .", "internal_id": "PREDICTABLE_RANDOM/fe57bda1af464448ffb13eeb24d56472", "severity": "moderate", "owasp_category": "", "category": "Predictable Random", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This random generator (java.util.Random) is predictable \nAt DHCPProvisioningDiscover.java:[lines 60-234] \nIn class net.java.sip.communicator.impl.provdisc.dhcp.DHCPProvisioningDiscover \nIn method new net.java.sip.communicator.impl.provdisc.dhcp.DHCPProvisioningDiscover(int, byte) \nAt DHCPProvisioningDiscover.java:[line 81] \nValue java.util.Random.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/provdisc/dhcp/DHCPProvisioningDiscover.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 81, "ruleId": "PREDICTABLE_RANDOM", "ruleName": "Predictable Random", "contextText": "        xid = new Random().nextInt();\n", "snippetText": "        socket = new DatagramSocket(port);\n        xid = new Random().nextInt();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This random generator (java.util.Random) is predictable \nAt DHCPTransaction.java:[lines 30-117] \nIn class net.java.sip.communicator.impl.provdisc.dhcp.DHCPTransaction \nIn method net.java.sip.communicator.impl.provdisc.dhcp.DHCPTransaction.schedule() \nAt DHCPTransaction.java:[line 87] \nValue java.util.Random.", "description": "This random generator (java.util.Random) is predictable .", "internal_id": "PREDICTABLE_RANDOM/5721e4bea28a8391f2fb471a7548787d", "severity": "moderate", "owasp_category": "", "category": "Predictable Random", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This random generator (java.util.Random) is predictable \nAt DHCPTransaction.java:[lines 30-117] \nIn class net.java.sip.communicator.impl.provdisc.dhcp.DHCPTransaction \nIn method net.java.sip.communicator.impl.provdisc.dhcp.DHCPTransaction.schedule() \nAt DHCPTransaction.java:[line 87] \nValue java.util.Random.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/provdisc/dhcp/DHCPTransaction.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 87, "ruleId": "PREDICTABLE_RANDOM", "ruleName": "Predictable Random", "contextText": "        int rand = new Random().nextInt(2) - 1;\n", "snippetText": "        /* choose a random between [-1, 1] */\n        int rand = new Random().nextInt(2) - 1;\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This random generator (java.util.Random) is predictable \nAt DHCPTransaction.java:[lines 124-146] \nIn class net.java.sip.communicator.impl.provdisc.dhcp.DHCPTransaction$RetransmissionHandler \nIn method net.java.sip.communicator.impl.provdisc.dhcp.DHCPTransaction$RetransmissionHandler.run() \nAt DHCPTransaction.java:[line 133] \nValue java.util.Random.", "description": "This random generator (java.util.Random) is predictable .", "internal_id": "PREDICTABLE_RANDOM/373d70673d341a5186a9de200d64f5e2", "severity": "moderate", "owasp_category": "", "category": "Predictable Random", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This random generator (java.util.Random) is predictable \nAt DHCPTransaction.java:[lines 124-146] \nIn class net.java.sip.communicator.impl.provdisc.dhcp.DHCPTransaction$RetransmissionHandler \nIn method net.java.sip.communicator.impl.provdisc.dhcp.DHCPTransaction$RetransmissionHandler.run() \nAt DHCPTransaction.java:[line 133] \nValue java.util.Random.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/provdisc/dhcp/DHCPTransaction.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 133, "ruleId": "PREDICTABLE_RANDOM", "ruleName": "Predictable Random", "contextText": "            int rand = new Random().nextInt(2) - 1;\n", "snippetText": "        {\n            int rand = new Random().nextInt(2) - 1;\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt SkinJarBuilder.java:[lines 28-446] \nIn class net.java.sip.communicator.impl.resources.util.SkinJarBuilder \nIn method net.java.sip.communicator.impl.resources.util.SkinJarBuilder.unzipIntoTmp(File) \nAt SkinJarBuilder.java:[line 158] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/util/zip/ZipEntry.getName()Ljava/lang/String;.", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/3ad46aba5e3168a525cc292f7db99628", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt SkinJarBuilder.java:[lines 28-446] \nIn class net.java.sip.communicator.impl.resources.util.SkinJarBuilder \nIn method net.java.sip.communicator.impl.resources.util.SkinJarBuilder.unzipIntoTmp(File) \nAt SkinJarBuilder.java:[line 158] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/util/zip/ZipEntry.getName()Ljava/lang/String;.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/resources/util/SkinJarBuilder.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 158, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "                    File file = new File(dest, entry.getName());\n", "snippetText": "                    ZipEntry entry = e.nextElement();\n                    File file = new File(dest, entry.getName());\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt SkinJarBuilder.java:[lines 28-446] \nIn class net.java.sip.communicator.impl.resources.util.SkinJarBuilder \nIn method net.java.sip.communicator.impl.resources.util.SkinJarBuilder.zipDir(String, ZipOutputStream) \nAt SkinJarBuilder.java:[line 237] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/resources/util/SkinJarBuilder.zipDir(Ljava/lang/String;Ljava/util/zip/ZipOutputStream;)V parameter 1 \nAt SkinJarBuilder.java:[line 220].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/acbde54931b22bc7aa7273c967f98256", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt SkinJarBuilder.java:[lines 28-446] \nIn class net.java.sip.communicator.impl.resources.util.SkinJarBuilder \nIn method net.java.sip.communicator.impl.resources.util.SkinJarBuilder.zipDir(String, ZipOutputStream) \nAt SkinJarBuilder.java:[line 237] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/resources/util/SkinJarBuilder.zipDir(Ljava/lang/String;Ljava/util/zip/ZipOutputStream;)V parameter 1 \nAt SkinJarBuilder.java:[line 220].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/resources/util/SkinJarBuilder.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 237, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        File directory = new File(dir2zip);\n", "snippetText": "    {\n        File directory = new File(dir2zip);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt JabberStatusEnum.java:[lines 121-299] \nIn class net.java.sip.communicator.service.protocol.jabberconstants.JabberStatusEnum \nIn method net.java.sip.communicator.service.protocol.jabberconstants.JabberStatusEnum.getResourceAsStream(String, Class) \nAt JabberStatusEnum.java:[line 290] \nSink method java/net/URL.openStream()Ljava/io/InputStream; \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/protocol/jabberconstants/JabberStatusEnum.getResourceAsStream(Ljava/lang/String;Ljava/lang/Class;)Ljava/io/InputStream; parameter 1 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nMethod usage not detected \nAt JabberStatusEnum.java:[line 156] \nAt JabberStatusEnum.java:[line 157] \nAt JabberStatusEnum.java:[line 159] \nAt JabberStatusEnum.java:[line 160] \nAt JabberStatusEnum.java:[line 162] \nAt JabberStatusEnum.java:[line 163] \nAt JabberStatusEnum.java:[line 165] \nAt JabberStatusEnum.java:[line 166] \nAt JabberStatusEnum.java:[line 168] \nAt JabberStatusEnum.java:[line 169] \nAt JabberStatusEnum.java:[line 171] \nAt JabberStatusEnum.java:[line 172] \nAt JabberStatusEnum.java:[line 174] \nAt JabberStatusEnum.java:[line 175] \nAt JabberStatusEnum.java:[line 177] \nAt JabberStatusEnum.java:[line 178] \nAt JabberStatusEnum.java:[line 180] \nAt JabberStatusEnum.java:[line 181] \nAt JabberStatusEnum.java:[line 250] \nAt JabberStatusEnum.java:[line 262] \nAt JabberStatusEnum.java:[line 290].", "description": "This web server request could be used by an attacker to expose internal services and filesystem. .", "internal_id": "URLCONNECTION_SSRF_FD/aa366e5ad3406be10f315a43eebcca00", "severity": "moderate", "owasp_category": "a6-misconfiguration", "category": "URLCONNECTION SSRF FD", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt JabberStatusEnum.java:[lines 121-299] \nIn class net.java.sip.communicator.service.protocol.jabberconstants.JabberStatusEnum \nIn method net.java.sip.communicator.service.protocol.jabberconstants.JabberStatusEnum.getResourceAsStream(String, Class) \nAt JabberStatusEnum.java:[line 290] \nSink method java/net/URL.openStream()Ljava/io/InputStream; \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/protocol/jabberconstants/JabberStatusEnum.getResourceAsStream(Ljava/lang/String;Ljava/lang/Class;)Ljava/io/InputStream; parameter 1 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nMethod usage not detected \nAt JabberStatusEnum.java:[line 156] \nAt JabberStatusEnum.java:[line 157] \nAt JabberStatusEnum.java:[line 159] \nAt JabberStatusEnum.java:[line 160] \nAt JabberStatusEnum.java:[line 162] \nAt JabberStatusEnum.java:[line 163] \nAt JabberStatusEnum.java:[line 165] \nAt JabberStatusEnum.java:[line 166] \nAt JabberStatusEnum.java:[line 168] \nAt JabberStatusEnum.java:[line 169] \nAt JabberStatusEnum.java:[line 171] \nAt JabberStatusEnum.java:[line 172] \nAt JabberStatusEnum.java:[line 174] \nAt JabberStatusEnum.java:[line 175] \nAt JabberStatusEnum.java:[line 177] \nAt JabberStatusEnum.java:[line 178] \nAt JabberStatusEnum.java:[line 180] \nAt JabberStatusEnum.java:[line 181] \nAt JabberStatusEnum.java:[line 250] \nAt JabberStatusEnum.java:[line 262] \nAt JabberStatusEnum.java:[line 290].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/service/protocol/jabberconstants/JabberStatusEnum.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 290, "ruleId": "URLCONNECTION_SSRF_FD", "ruleName": "URLCONNECTION SSRF FD", "contextText": "                return new URL(name).openStream();\n", "snippetText": "            try {\n                return new URL(name).openStream();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks \nAt ConferenceInfoDocument.java:[lines 32-612] \nIn class net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument \nIn method new net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument(String) \nAt ConferenceInfoDocument.java:[line 206] \nValue DocumentBuilder.parse(...).", "description": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks .", "internal_id": "XXE_DOCUMENT/7f58f6d9c1a7f22cf293e668edb1f2a6", "severity": "moderate", "owasp_category": "", "category": "Xxe Document", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks \nAt ConferenceInfoDocument.java:[lines 32-612] \nIn class net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument \nIn method new net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument(String) \nAt ConferenceInfoDocument.java:[line 206] \nValue DocumentBuilder.parse(...).", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/service/protocol/media/ConferenceInfoDocument.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 206, "ruleId": "XXE_DOCUMENT", "ruleName": "Xxe Document", "contextText": "                    .parse(new ByteArrayInputStream(bytes));\n", "snippetText": "            document = XMLUtils.newDocumentBuilderFactory().newDocumentBuilder()\n                    .parse(new ByteArrayInputStream(bytes));\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "The use of TransformerFactory.newInstance(...) (TransformerFactory) is vulnerable to XML External Entity attacks \nAt ConferenceInfoDocument.java:[lines 32-612] \nIn class net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument \nIn method net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument.toXml(String) \nAt ConferenceInfoDocument.java:[line 450] \nValue TransformerFactory.newInstance(...).", "description": "The use of TransformerFactory.newInstance(...) (TransformerFactory) is vulnerable to XML External Entity attacks .", "internal_id": "XXE_DTD_TRANSFORM_FACTORY/23690316defeae88b5bc806b246db33a", "severity": "moderate", "owasp_category": "", "category": "XXE DTD TRANSFORM FACTORY", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The use of TransformerFactory.newInstance(...) (TransformerFactory) is vulnerable to XML External Entity attacks \nAt ConferenceInfoDocument.java:[lines 32-612] \nIn class net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument \nIn method net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument.toXml(String) \nAt ConferenceInfoDocument.java:[line 450] \nValue TransformerFactory.newInstance(...).", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/service/protocol/media/ConferenceInfoDocument.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 450, "ruleId": "XXE_DTD_TRANSFORM_FACTORY", "ruleName": "XXE DTD TRANSFORM FACTORY", "contextText": "            Transformer transformer = TransformerFactory.newInstance().newTransformer();\n", "snippetText": "        try {\n            Transformer transformer = TransformerFactory.newInstance().newTransformer();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "The use of TransformerFactory.newInstance(...) is vulnerable to XSLT External Entity attacks \nAt ConferenceInfoDocument.java:[lines 32-612] \nIn class net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument \nIn method net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument.toXml(String) \nAt ConferenceInfoDocument.java:[line 450] \nValue TransformerFactory.newInstance(...).", "description": "The use of TransformerFactory.newInstance(...) is vulnerable to XSLT External Entity attacks .", "internal_id": "XXE_XSLT_TRANSFORM_FACTORY/d3e9aeec213deab2e119c11c484f808e", "severity": "moderate", "owasp_category": "", "category": "XXE XSLT TRANSFORM FACTORY", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The use of TransformerFactory.newInstance(...) is vulnerable to XSLT External Entity attacks \nAt ConferenceInfoDocument.java:[lines 32-612] \nIn class net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument \nIn method net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument.toXml(String) \nAt ConferenceInfoDocument.java:[line 450] \nValue TransformerFactory.newInstance(...).", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/service/protocol/media/ConferenceInfoDocument.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 450, "ruleId": "XXE_XSLT_TRANSFORM_FACTORY", "ruleName": "XXE XSLT TRANSFORM FACTORY", "contextText": "            Transformer transformer = TransformerFactory.newInstance().newTransformer();\n", "snippetText": "        try {\n            Transformer transformer = TransformerFactory.newInstance().newTransformer();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ChatActivity.java:[lines 82-1154] \nIn class org.atalk.android.gui.chat.ChatActivity \nIn method org.atalk.android.gui.chat.ChatActivity.onActivityResult(int, int, Intent) \nAt ChatActivity.java:[line 930] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/FilePathHelper.getPath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nAt ChatActivity.java:[line 929].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/31069b309079d28aab4e66b39a25e4f6", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ChatActivity.java:[lines 82-1154] \nIn class org.atalk.android.gui.chat.ChatActivity \nIn method org.atalk.android.gui.chat.ChatActivity.onActivityResult(int, int, Intent) \nAt ChatActivity.java:[line 930] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/FilePathHelper.getPath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nAt ChatActivity.java:[line 929].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/android/gui/chat/ChatActivity.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 930, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "                                openDownloadable(new File(filePath));\n", "snippetText": "                            if (StringUtils.isNotEmpty(filePath))\n                                openDownloadable(new File(filePath));\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt ChatActivity.java:[lines 1073-1142] \nIn class org.atalk.android.gui.chat.ChatActivity$MediaShareAsynTask \nIn method org.atalk.android.gui.chat.ChatActivity$MediaShareAsynTask.getUrlInfo(String) \nAt ChatActivity.java:[line 1125] \nSink method java/net/URL.openConnection()Ljava/net/URLConnection; \nSink parameter 0 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nUnknown source org/atalk/android/gui/chat/ChatActivity$MediaShareAsynTask.getUrlInfo(Ljava/lang/String;)Ljava/lang/String; parameter 0 \nAt ChatActivity.java:[line 1082] \nAt ChatActivity.java:[line 1123] \nAt ChatActivity.java:[line 1124].", "description": "This web server request could be used by an attacker to expose internal services and filesystem. .", "internal_id": "URLCONNECTION_SSRF_FD/558757482e2737e79cd3391fde4730b8", "severity": "moderate", "owasp_category": "a6-misconfiguration", "category": "URLCONNECTION SSRF FD", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt ChatActivity.java:[lines 1073-1142] \nIn class org.atalk.android.gui.chat.ChatActivity$MediaShareAsynTask \nIn method org.atalk.android.gui.chat.ChatActivity$MediaShareAsynTask.getUrlInfo(String) \nAt ChatActivity.java:[line 1125] \nSink method java/net/URL.openConnection()Ljava/net/URLConnection; \nSink parameter 0 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nUnknown source org/atalk/android/gui/chat/ChatActivity$MediaShareAsynTask.getUrlInfo(Ljava/lang/String;)Ljava/lang/String; parameter 0 \nAt ChatActivity.java:[line 1082] \nAt ChatActivity.java:[line 1123] \nAt ChatActivity.java:[line 1124].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/android/gui/chat/ChatActivity.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1125, "ruleId": "URLCONNECTION_SSRF_FD", "ruleName": "URLCONNECTION SSRF FD", "contextText": "                HttpURLConnection httpConnection = (HttpURLConnection) mUrl.openConnection();\n", "snippetText": "                URL mUrl = new URL(urlString);\n                HttpURLConnection httpConnection = (HttpURLConnection) mUrl.openConnection();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ChatFragment.java:[lines 567-858] \nIn class org.atalk.android.gui.chat.ChatFragment$2 \nIn method org.atalk.android.gui.chat.ChatFragment$2.onActionItemClicked(ActionMode, MenuItem) \nAt ChatFragment.java:[line 797] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/ChatMessage.getMessage()Ljava/lang/String;.", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/6cb5c2e9c4900e4cacf499a668bf915b", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ChatFragment.java:[lines 567-858] \nIn class org.atalk.android.gui.chat.ChatFragment$2 \nIn method org.atalk.android.gui.chat.ChatFragment$2.onActionItemClicked(ActionMode, MenuItem) \nAt ChatFragment.java:[line 797] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/ChatMessage.getMessage()Ljava/lang/String;.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/android/gui/chat/ChatFragment.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 797, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "                                                file = new File(chatMsg.getMessage());\n", "snippetText": "                                            else if ((file = chatListAdapter.getFileName(cPos)) == null) {\n                                                file = new File(chatMsg.getMessage());\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt CaptchaDialog.java:[lines 91-340] \nIn class org.atalk.android.gui.chat.conference.CaptchaDialog \nIn method org.atalk.android.gui.chat.conference.CaptchaDialog.initCaptchaData() \nAt CaptchaDialog.java:[line 301] \nSink method java/net/URL.openConnection()Ljava/net/URLConnection; \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/xdata/FormField.getFirstValue()Ljava/lang/String; \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nAt CaptchaDialog.java:[line 300].", "description": "This web server request could be used by an attacker to expose internal services and filesystem. .", "internal_id": "URLCONNECTION_SSRF_FD/5274b46fbcf0d88a6e966b878243ca75", "severity": "moderate", "owasp_category": "a6-misconfiguration", "category": "URLCONNECTION SSRF FD", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt CaptchaDialog.java:[lines 91-340] \nIn class org.atalk.android.gui.chat.conference.CaptchaDialog \nIn method org.atalk.android.gui.chat.conference.CaptchaDialog.initCaptchaData() \nAt CaptchaDialog.java:[line 301] \nSink method java/net/URL.openConnection()Ljava/net/URLConnection; \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/xdata/FormField.getFirstValue()Ljava/lang/String; \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nAt CaptchaDialog.java:[line 300].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/android/gui/chat/conference/CaptchaDialog.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 301, "ruleId": "URLCONNECTION_SSRF_FD", "ruleName": "URLCONNECTION SSRF FD", "contextText": "                        bmCaptcha = BitmapFactory.decodeStream(uri.openConnection().getInputStream());\n", "snippetText": "                        URL uri = new URL(urlString);\n                        bmCaptcha = BitmapFactory.decodeStream(uri.openConnection().getInputStream());\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileSendConversation.java:[lines 51-227] \nIn class org.atalk.android.gui.chat.filetransfer.FileSendConversation \nIn method org.atalk.android.gui.chat.filetransfer.FileSendConversation.newInstance(ChatFragment, String, String, String, boolean) \nAt FileSendConversation.java:[line 69] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/filetransfer/FileSendConversation.newInstance(Lorg/atalk/android/gui/chat/ChatFragment;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lorg/atalk/android/gui/chat/filetransfer/FileSendConversation; parameter 1 \nAt ChatFragment.java:[line 1387].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/42825d94d215b205bf0692a1ed2ade38", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileSendConversation.java:[lines 51-227] \nIn class org.atalk.android.gui.chat.filetransfer.FileSendConversation \nIn method org.atalk.android.gui.chat.filetransfer.FileSendConversation.newInstance(ChatFragment, String, String, String, boolean) \nAt FileSendConversation.java:[line 69] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/filetransfer/FileSendConversation.newInstance(Lorg/atalk/android/gui/chat/ChatFragment;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lorg/atalk/android/gui/chat/filetransfer/FileSendConversation; parameter 1 \nAt ChatFragment.java:[line 1387].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/android/gui/chat/filetransfer/FileSendConversation.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 69, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        fragmentSFC.mXferFile = new File(fileName);\n", "snippetText": "        fragmentSFC.mSendTo = sendTo;\n        fragmentSFC.mXferFile = new File(fileName);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileTransferConversation.java:[lines 62-1015] \nIn class org.atalk.android.gui.chat.filetransfer.FileTransferConversation \nIn method org.atalk.android.gui.chat.filetransfer.FileTransferConversation.setTransferFilePath(String, String) \nAt FileTransferConversation.java:[line 954] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/filetransfer/FileTransferConversation.setTransferFilePath(Ljava/lang/String;Ljava/lang/String;)V parameter 1 \nMethod usage not detected.", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/6c21fd3895d8d32d7ebc218ac0b30b84", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileTransferConversation.java:[lines 62-1015] \nIn class org.atalk.android.gui.chat.filetransfer.FileTransferConversation \nIn method org.atalk.android.gui.chat.filetransfer.FileTransferConversation.setTransferFilePath(String, String) \nAt FileTransferConversation.java:[line 954] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/filetransfer/FileTransferConversation.setTransferFilePath(Ljava/lang/String;Ljava/lang/String;)V parameter 1 \nMethod usage not detected.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/android/gui/chat/filetransfer/FileTransferConversation.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 954, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        mXferFile = new File(downloadDir, fileName);\n", "snippetText": "        File downloadDir = FileBackend.getaTalkStore(downloadPath, true);\n        mXferFile = new File(downloadDir, fileName);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileTransferConversation.java:[lines 62-1015] \nIn class org.atalk.android.gui.chat.filetransfer.FileTransferConversation \nIn method org.atalk.android.gui.chat.filetransfer.FileTransferConversation.setTransferFilePath(String, String) \nAt FileTransferConversation.java:[line 965] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/filetransfer/FileTransferConversation.setTransferFilePath(Ljava/lang/String;Ljava/lang/String;)V parameter 1 \nMethod usage not detected \nAt FileTransferConversation.java:[line 963] \nAt FileTransferConversation.java:[line 964].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/278733f4942d1cc6571d86d295eb9207", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileTransferConversation.java:[lines 62-1015] \nIn class org.atalk.android.gui.chat.filetransfer.FileTransferConversation \nIn method org.atalk.android.gui.chat.filetransfer.FileTransferConversation.setTransferFilePath(String, String) \nAt FileTransferConversation.java:[line 965] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/filetransfer/FileTransferConversation.setTransferFilePath(Ljava/lang/String;Ljava/lang/String;)V parameter 1 \nMethod usage not detected \nAt FileTransferConversation.java:[line 963] \nAt FileTransferConversation.java:[line 964].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/android/gui/chat/filetransfer/FileTransferConversation.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 965, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "            mXferFile = new File(downloadDir, newFileName);\n", "snippetText": "                    + ++index + fileName.substring(filenameLength);\n            mXferFile = new File(downloadDir, newFileName);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt MediaPreviewAdapter.java:[lines 39-118] \nIn class org.atalk.android.gui.share.MediaPreviewAdapter \nIn method org.atalk.android.gui.share.MediaPreviewAdapter.onBindViewHolder(MediaPreviewAdapter$MediaPreviewViewHolder, int) \nAt MediaPreviewAdapter.java:[line 72] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/FilePathHelper.getPath(Landroid/content/Context;Lorg/atalk/android/gui/share/Attachment;)Ljava/lang/String;.", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/f3c77c960ea5a630b755602b455dcc6d", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt MediaPreviewAdapter.java:[lines 39-118] \nIn class org.atalk.android.gui.share.MediaPreviewAdapter \nIn method org.atalk.android.gui.share.MediaPreviewAdapter.onBindViewHolder(MediaPreviewAdapter$MediaPreviewViewHolder, int) \nAt MediaPreviewAdapter.java:[line 72] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/FilePathHelper.getPath(Landroid/content/Context;Lorg/atalk/android/gui/share/Attachment;)Ljava/lang/String;.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/android/gui/share/MediaPreviewAdapter.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 72, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        final File file = new File(FilePathHelper.getPath(chatActivity, attachment));\n", "snippetText": "        final Attachment attachment = mediaPreviews.get(position);\n        final File file = new File(FilePathHelper.getPath(chatActivity, attachment));\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt EntityListHelper.java:[lines 328-372] \nIn class org.atalk.android.gui.util.EntityListHelper$doEraseAllEntityHistory \nIn method org.atalk.android.gui.util.EntityListHelper$doEraseAllEntityHistory.doInBackground(Void[]) \nAt EntityListHelper.java:[line 352] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/msghistory/MessageHistoryService.getLocallyStoredFilePath()Ljava/util/List; \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nAt EntityListHelper.java:[line 351].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/50be9b8e7eab8ceb8c09552c6fcd2010", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt EntityListHelper.java:[lines 328-372] \nIn class org.atalk.android.gui.util.EntityListHelper$doEraseAllEntityHistory \nIn method org.atalk.android.gui.util.EntityListHelper$doEraseAllEntityHistory.doInBackground(Void[]) \nAt EntityListHelper.java:[line 352] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/msghistory/MessageHistoryService.getLocallyStoredFilePath()Ljava/util/List; \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nAt EntityListHelper.java:[line 351].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/android/gui/util/EntityListHelper.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 352, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "                    File file = new File(msgFile);\n", "snippetText": "                for (String msgFile : msgFiles) {\n                    File file = new File(msgFile);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt EntityListHelper.java:[lines 222-290] \nIn class org.atalk.android.gui.util.EntityListHelper$doEraseEntityChatHistory \nIn method org.atalk.android.gui.util.EntityListHelper$doEraseEntityChatHistory.doInBackground(Object[]) \nAt EntityListHelper.java:[line 254] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nUnknown source net/java/sip/communicator/service/msghistory/MessageHistoryService.getLocallyStoredFilePath(Ljava/lang/Object;)Ljava/util/List; \nAt EntityListHelper.java:[line 253].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/71cf1c9651cab07e28f5bebc202ceb46", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt EntityListHelper.java:[lines 222-290] \nIn class org.atalk.android.gui.util.EntityListHelper$doEraseEntityChatHistory \nIn method org.atalk.android.gui.util.EntityListHelper$doEraseEntityChatHistory.doInBackground(Object[]) \nAt EntityListHelper.java:[line 254] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nUnknown source net/java/sip/communicator/service/msghistory/MessageHistoryService.getLocallyStoredFilePath(Ljava/lang/Object;)Ljava/util/List; \nAt EntityListHelper.java:[line 253].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/android/gui/util/EntityListHelper.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 254, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "                            msgFiles.add(new File(filePath));\n", "snippetText": "                        for (String filePath : filePathDel) {\n                            msgFiles.add(new File(filePath));\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This random generator (java.util.Random) is predictable \nAt MediaStreamImpl.java:[lines 65-3448] \nIn class org.atalk.impl.neomedia.MediaStreamImpl \nIn method new org.atalk.impl.neomedia.MediaStreamImpl(StreamConnector, MediaDevice, SrtpControl) \nAt MediaStreamImpl.java:[line 147] \nValue java.util.Random.", "description": "This random generator (java.util.Random) is predictable .", "internal_id": "PREDICTABLE_RANDOM/afdab2b334c3a4d635d1f391e76a2940", "severity": "moderate", "owasp_category": "", "category": "Predictable Random", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This random generator (java.util.Random) is predictable \nAt MediaStreamImpl.java:[lines 65-3448] \nIn class org.atalk.impl.neomedia.MediaStreamImpl \nIn method new org.atalk.impl.neomedia.MediaStreamImpl(StreamConnector, MediaDevice, SrtpControl) \nAt MediaStreamImpl.java:[line 147] \nValue java.util.Random.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/impl/neomedia/MediaStreamImpl.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 147, "ruleId": "PREDICTABLE_RANDOM", "ruleName": "Predictable Random", "contextText": "    private long localSourceID = (new Random().nextInt()) & 0x00000000FFFFFFFFL;\n", "snippetText": "     */\n    private long localSourceID = (new Random().nextInt()) & 0x00000000FFFFFFFFL;\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This random generator (java.util.Random) is predictable \nAt RtxTransformer.java:[lines 46-517] \nIn class org.atalk.impl.neomedia.transform.RtxTransformer \nIn method org.atalk.impl.neomedia.transform.RtxTransformer.getNextRtxSequenceNumber(long) \nAt RtxTransformer.java:[line 158] \nValue java.util.Random.", "description": "This random generator (java.util.Random) is predictable .", "internal_id": "PREDICTABLE_RANDOM/1d13b98950516bf74fa0ea883f67eb9f", "severity": "moderate", "owasp_category": "", "category": "Predictable Random", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This random generator (java.util.Random) is predictable \nAt RtxTransformer.java:[lines 46-517] \nIn class org.atalk.impl.neomedia.transform.RtxTransformer \nIn method org.atalk.impl.neomedia.transform.RtxTransformer.getNextRtxSequenceNumber(long) \nAt RtxTransformer.java:[line 158] \nValue java.util.Random.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/impl/neomedia/transform/RtxTransformer.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 158, "ruleId": "PREDICTABLE_RANDOM", "ruleName": "Predictable Random", "contextText": "                seq = new Random().nextInt(0xffff);\n", "snippetText": "            if (seq == null)\n                seq = new Random().nextInt(0xffff);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "Unsafe comparison of hash that are susceptible to timing attack \nAt ZRTPTransformEngine.java:[lines 137-1433] \nIn class org.atalk.impl.neomedia.transform.zrtp.ZRTPTransformEngine \nIn method org.atalk.impl.neomedia.transform.zrtp.ZRTPTransformEngine.sendInfo(ZrtpCodes$MessageSeverity, EnumSet) \nAt ZRTPTransformEngine.java:[line 941] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source org/atalk/impl/neomedia/transform/zrtp/ZRTPTransformEngine.receivedSignaledZRTPVersion \nAt ZRTPTransformEngine.java:[line 941].", "description": "Unsafe comparison of hash that are susceptible to timing attack .", "internal_id": "UNSAFE_HASH_EQUALS/e5b1f2ae6dd1be005bd37465ddc32ea1", "severity": "moderate", "owasp_category": "", "category": "UNSAFE HASH EQUALS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Unsafe comparison of hash that are susceptible to timing attack \nAt ZRTPTransformEngine.java:[lines 137-1433] \nIn class org.atalk.impl.neomedia.transform.zrtp.ZRTPTransformEngine \nIn method org.atalk.impl.neomedia.transform.zrtp.ZRTPTransformEngine.sendInfo(ZrtpCodes$MessageSeverity, EnumSet) \nAt ZRTPTransformEngine.java:[line 941] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source org/atalk/impl/neomedia/transform/zrtp/ZRTPTransformEngine.receivedSignaledZRTPVersion \nAt ZRTPTransformEngine.java:[line 941].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/impl/neomedia/transform/zrtp/ZRTPTransformEngine.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 941, "ruleId": "UNSAFE_HASH_EQUALS", "ruleName": "UNSAFE HASH EQUALS", "contextText": "            if (!peerHelloVersion.equals(receivedSignaledZRTPVersion)\n", "snippetText": "\n            if (!peerHelloVersion.equals(receivedSignaledZRTPVersion)\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "Unsafe comparison of hash that are susceptible to timing attack \nAt ZRTPTransformEngine.java:[lines 137-1433] \nIn class org.atalk.impl.neomedia.transform.zrtp.ZRTPTransformEngine \nIn method org.atalk.impl.neomedia.transform.zrtp.ZRTPTransformEngine.sendInfo(ZrtpCodes$MessageSeverity, EnumSet) \nAt ZRTPTransformEngine.java:[line 942] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source org/atalk/impl/neomedia/transform/zrtp/ZRTPTransformEngine.receivedSignaledZRTPHashValue \nAt ZRTPTransformEngine.java:[line 941].", "description": "Unsafe comparison of hash that are susceptible to timing attack .", "internal_id": "UNSAFE_HASH_EQUALS/1e821d70e1bcdb4ab603f71cbe0cc79d", "severity": "moderate", "owasp_category": "", "category": "UNSAFE HASH EQUALS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Unsafe comparison of hash that are susceptible to timing attack \nAt ZRTPTransformEngine.java:[lines 137-1433] \nIn class org.atalk.impl.neomedia.transform.zrtp.ZRTPTransformEngine \nIn method org.atalk.impl.neomedia.transform.zrtp.ZRTPTransformEngine.sendInfo(ZrtpCodes$MessageSeverity, EnumSet) \nAt ZRTPTransformEngine.java:[line 942] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source org/atalk/impl/neomedia/transform/zrtp/ZRTPTransformEngine.receivedSignaledZRTPHashValue \nAt ZRTPTransformEngine.java:[line 941].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/impl/neomedia/transform/zrtp/ZRTPTransformEngine.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 942, "ruleId": "UNSAFE_HASH_EQUALS", "ruleName": "UNSAFE HASH EQUALS", "contextText": "                    || !peerHelloHash.equals(receivedSignaledZRTPHashValue)) {\n", "snippetText": "            if (!peerHelloVersion.equals(receivedSignaledZRTPVersion)\n                    || !peerHelloHash.equals(receivedSignaledZRTPHashValue)) {\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "Files could be saved to external storage \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.getaTalkStore(String, boolean) \nAt FileBackend.java:[line 236].", "description": "Files could be saved to external storage .", "internal_id": "ANDROID_EXTERNAL_FILE_ACCESS/4fde28d96169e332d2ae84f6290ff1f1", "severity": "moderate", "owasp_category": "", "category": "ANDROID EXTERNAL FILE ACCESS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Files could be saved to external storage \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.getaTalkStore(String, boolean) \nAt FileBackend.java:[line 236].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/persistance/FileBackend.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 236, "ruleId": "ANDROID_EXTERNAL_FILE_ACCESS", "ruleName": "ANDROID EXTERNAL FILE ACCESS", "contextText": "        File atalkDLDir = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS) + filePath);\n", "snippetText": "        // File atalkDLDir = new File(Environment.getExternalStorageDirectory(), filePath);\n        File atalkDLDir = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS) + filePath);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.copyRecursive(File, File, String) \nAt FileBackend.java:[line 118] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/FileBackend.copyRecursive(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)V parameter 0 \nMethod usage not detected.", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/c540bb8970d043c885a07fa9c30dd91c", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.copyRecursive(File, File, String) \nAt FileBackend.java:[line 118] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/FileBackend.copyRecursive(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)V parameter 0 \nMethod usage not detected.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/persistance/FileBackend.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 118, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "            dstPath = new File(targetPath, subFolder);\n", "snippetText": "        if (subFolder != null)\n            dstPath = new File(targetPath, subFolder);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.copyRecursive(File, File, String) \nAt FileBackend.java:[line 139] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getName()Ljava/lang/String;.", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/bccadaad21876f57ecd61f75ea178659", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.copyRecursive(File, File, String) \nAt FileBackend.java:[line 139] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getName()Ljava/lang/String;.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/persistance/FileBackend.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 139, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "                copyRecursive(new File(srcPath, fileName), dstPath, fileName);\n", "snippetText": "                String fileName = file.getName();\n                copyRecursive(new File(srcPath, fileName), dstPath, fileName);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.getOutputMediaFile(int) \nAt FileBackend.java:[line 255] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/text/SimpleDateFormat.format(Ljava/util/Date;)Ljava/lang/String; \nAt FileBackend.java:[line 255].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/052da42d21069a99905e18d5e307da8d", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.getOutputMediaFile(int) \nAt FileBackend.java:[line 255] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/text/SimpleDateFormat.format(Ljava/util/Date;)Ljava/lang/String; \nAt FileBackend.java:[line 255].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/persistance/FileBackend.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 255, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "            mediaFile = new File(aTalkMediaDir, \"IMG_\" + timeStamp + \".jpg\");\n", "snippetText": "        if (type == MEDIA_TYPE_IMAGE) {\n            mediaFile = new File(aTalkMediaDir, \"IMG_\" + timeStamp + \".jpg\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.getOutputMediaFile(int) \nAt FileBackend.java:[line 258] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/text/SimpleDateFormat.format(Ljava/util/Date;)Ljava/lang/String; \nAt FileBackend.java:[line 258].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/6ca7b258dc67daeeba726d282b7e8603", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.getOutputMediaFile(int) \nAt FileBackend.java:[line 258] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/text/SimpleDateFormat.format(Ljava/util/Date;)Ljava/lang/String; \nAt FileBackend.java:[line 258].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/persistance/FileBackend.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 258, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "            mediaFile = new File(aTalkMediaDir, \"VID_\" + timeStamp + \".mp4\");\n", "snippetText": "        else if (type == MEDIA_TYPE_VIDEO) {\n            mediaFile = new File(aTalkMediaDir, \"VID_\" + timeStamp + \".mp4\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.getaTalkStore(String, boolean) \nAt FileBackend.java:[line 236] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/FileBackend.getaTalkStore(Ljava/lang/String;Z)Ljava/io/File; parameter 1 \nUnknown source org/atalk/persistance/FileBackend.FP_aTALK \nUnknown source android/os/Environment.getExternalStoragePublicDirectory(Ljava/lang/String;)Ljava/io/File; \nAt FileTransferConversation.java:[line 946] \nAt FileTransferConversation.java:[line 948] \nAt FileTransferConversation.java:[line 949] \nAt FileTransferConversation.java:[line 950] \nAt FileTransferConversation.java:[line 953] \nAt FileBackend.java:[line 229] \nAt FileBackend.java:[line 230] \nAt FileBackend.java:[line 231] \nAt FileBackend.java:[line 236] \nAt FileBackend.java:[line 249].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/311ec6230e8e86cdc99af9f76582f6a2", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.getaTalkStore(String, boolean) \nAt FileBackend.java:[line 236] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/FileBackend.getaTalkStore(Ljava/lang/String;Z)Ljava/io/File; parameter 1 \nUnknown source org/atalk/persistance/FileBackend.FP_aTALK \nUnknown source android/os/Environment.getExternalStoragePublicDirectory(Ljava/lang/String;)Ljava/io/File; \nAt FileTransferConversation.java:[line 946] \nAt FileTransferConversation.java:[line 948] \nAt FileTransferConversation.java:[line 949] \nAt FileTransferConversation.java:[line 950] \nAt FileTransferConversation.java:[line 953] \nAt FileBackend.java:[line 229] \nAt FileBackend.java:[line 230] \nAt FileBackend.java:[line 231] \nAt FileBackend.java:[line 236] \nAt FileBackend.java:[line 249].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/persistance/FileBackend.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 236, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "        File atalkDLDir = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS) + filePath);\n", "snippetText": "        // File atalkDLDir = new File(Environment.getExternalStorageDirectory(), filePath);\n        File atalkDLDir = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS) + filePath);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt AvatarManager.java:[lines 54-548] \nIn class org.jivesoftware.smackx.avatar.AvatarManager \nIn method org.jivesoftware.smackx.avatar.AvatarManager.getAvatarImageByJid(BareJid) \nAt AvatarManager.java:[line 258] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarImageByJid(Lorg/jxmpp/jid/BareJid;)[B parameter 0 \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nTainted source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131].", "description": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages .", "internal_id": "CRLF_INJECTION_LOGS/34868d292557fa1b40e56fe25c430a53", "severity": "moderate", "owasp_category": "", "category": "CRLF INJECTION LOGS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt AvatarManager.java:[lines 54-548] \nIn class org.jivesoftware.smackx.avatar.AvatarManager \nIn method org.jivesoftware.smackx.avatar.AvatarManager.getAvatarImageByJid(BareJid) \nAt AvatarManager.java:[line 258] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarImageByJid(Lorg/jxmpp/jid/BareJid;)[B parameter 0 \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nTainted source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/AvatarManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 258, "ruleId": "CRLF_INJECTION_LOGS", "ruleName": "CRLF INJECTION LOGS", "contextText": "        LOGGER.log(Level.FINE, \"Fetching avatar from local storage for: (\" + jid + \") => \" + avatarId);\n", "snippetText": "        String avatarId = getAvatarHashByJid(jid);\n        LOGGER.log(Level.FINE, \"Fetching avatar from local storage for: (\" + jid + \") => \" + avatarId);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt AvatarManager.java:[lines 54-548] \nIn class org.jivesoftware.smackx.avatar.AvatarManager \nIn method org.jivesoftware.smackx.avatar.AvatarManager.purgeAvatarImageByJid(BareJid) \nAt AvatarManager.java:[line 333] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.purgeAvatarImageByJid(Lorg/jxmpp/jid/BareJid;)V parameter 0 \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nTainted source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 332] \nAt AvatarManager.java:[line 333] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131].", "description": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages .", "internal_id": "CRLF_INJECTION_LOGS/757323451af5b9f7cd703c335e5509d4", "severity": "moderate", "owasp_category": "", "category": "CRLF INJECTION LOGS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt AvatarManager.java:[lines 54-548] \nIn class org.jivesoftware.smackx.avatar.AvatarManager \nIn method org.jivesoftware.smackx.avatar.AvatarManager.purgeAvatarImageByJid(BareJid) \nAt AvatarManager.java:[line 333] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.purgeAvatarImageByJid(Lorg/jxmpp/jid/BareJid;)V parameter 0 \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nTainted source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 332] \nAt AvatarManager.java:[line 333] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/AvatarManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 333, "ruleId": "CRLF_INJECTION_LOGS", "ruleName": "CRLF INJECTION LOGS", "contextText": "        LOGGER.log(Level.INFO, \"Purge avatar from store for: (\" + jid + \") => \" + avatarId);\n", "snippetText": "        String avatarId = getAvatarHashByJid(jid);\n        LOGGER.log(Level.INFO, \"Purge avatar from store for: (\" + jid + \") => \" + avatarId);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "Unsafe comparison of hash that are susceptible to timing attack \nAt AvatarManager.java:[lines 54-548] \nIn class org.jivesoftware.smackx.avatar.AvatarManager \nIn method org.jivesoftware.smackx.avatar.AvatarManager.isHashMultipleOwner(BareJid, String) \nAt AvatarManager.java:[line 386] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.isHashMultipleOwner(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)Z parameter 0 \nMethod usage with tainted arguments detected \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt UserAvatarManager.java:[line 317] \nAt UserAvatarManager.java:[line 334] \nAt UserAvatarManager.java:[line 335] \nAt VCardAvatarManager.java:[line 185] \nAt VCardAvatarManager.java:[line 213] \nAt VCardAvatarManager.java:[line 214].", "description": "Unsafe comparison of hash that are susceptible to timing attack .", "internal_id": "UNSAFE_HASH_EQUALS/98fd8dde16ed57705b1c288e55cfab69", "severity": "critical", "owasp_category": "", "category": "UNSAFE HASH EQUALS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Unsafe comparison of hash that are susceptible to timing attack \nAt AvatarManager.java:[lines 54-548] \nIn class org.jivesoftware.smackx.avatar.AvatarManager \nIn method org.jivesoftware.smackx.avatar.AvatarManager.isHashMultipleOwner(BareJid, String) \nAt AvatarManager.java:[line 386] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.isHashMultipleOwner(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)Z parameter 0 \nMethod usage with tainted arguments detected \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt UserAvatarManager.java:[line 317] \nAt UserAvatarManager.java:[line 334] \nAt UserAvatarManager.java:[line 335] \nAt VCardAvatarManager.java:[line 185] \nAt VCardAvatarManager.java:[line 213] \nAt VCardAvatarManager.java:[line 214].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/AvatarManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 386, "ruleId": "UNSAFE_HASH_EQUALS", "ruleName": "UNSAFE HASH EQUALS", "contextText": "                if (!TextUtils.isEmpty(imageHash) && imageHash.equals(avatarHash)) {\n", "snippetText": "                String imageHash = getAvatarHashByJid(contactJid);\n                if (!TextUtils.isEmpty(imageHash) && imageHash.equals(avatarHash)) {\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API SHA1 (SHA-1) is not a recommended cryptographic hash function \nAt AvatarManager.java:[lines 54-548] \nIn class org.jivesoftware.smackx.avatar.AvatarManager \nIn method org.jivesoftware.smackx.avatar.AvatarManager.getAvatarHash(byte[]) \nAt AvatarManager.java:[line 501] \nValue SHA1.", "description": "This API SHA-1 (SHA-1) is not a recommended cryptographic hash function .", "internal_id": "WEAK_MESSAGE_DIGEST_SHA1/0a19f48832d9c3fc408fcc2a7fc87188", "severity": "moderate", "owasp_category": "", "category": "WEAK MESSAGE DIGEST SHA1", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API SHA1 (SHA-1) is not a recommended cryptographic hash function \nAt AvatarManager.java:[lines 54-548] \nIn class org.jivesoftware.smackx.avatar.AvatarManager \nIn method org.jivesoftware.smackx.avatar.AvatarManager.getAvatarHash(byte[]) \nAt AvatarManager.java:[line 501] \nValue SHA1.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/AvatarManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 501, "ruleId": "WEAK_MESSAGE_DIGEST_SHA1", "ruleName": "WEAK MESSAGE DIGEST SHA1", "contextText": "                MessageDigest messageDigest = MessageDigest.getInstance(\"SHA1\");\n", "snippetText": "            if (imageData != null) {\n                MessageDigest messageDigest = MessageDigest.getInstance(\"SHA1\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AvatarCacheFile.java:[lines 33-170] \nIn class org.jivesoftware.smackx.avatar.cache.AvatarCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.AvatarCacheFile.getAvatarForHash(String) \nAt AvatarCacheFile.java:[line 119] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.getAvatarForHash(Ljava/lang/String;)[B parameter 0 \nMethod usage with tainted arguments detected \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1649] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1702] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1706] \nAt AvatarManager.java:[line 238] \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 260] \nAt AvatarManager.java:[line 278] \nAt AvatarManager.java:[line 279] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 316] \nAt AvatarManager.java:[line 317] \nAt JidToHashCacheFile.java:[line 96].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/cd65849da34062f6a3110c50ab23da9c", "severity": "critical", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AvatarCacheFile.java:[lines 33-170] \nIn class org.jivesoftware.smackx.avatar.cache.AvatarCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.AvatarCacheFile.getAvatarForHash(String) \nAt AvatarCacheFile.java:[line 119] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.getAvatarForHash(Ljava/lang/String;)[B parameter 0 \nMethod usage with tainted arguments detected \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1649] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1702] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1706] \nAt AvatarManager.java:[line 238] \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 260] \nAt AvatarManager.java:[line 278] \nAt AvatarManager.java:[line 279] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 316] \nAt AvatarManager.java:[line 317] \nAt JidToHashCacheFile.java:[line 96].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 119, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\tFile file = new File(mStoreDir, id);\n", "snippetText": "\t\tbyte[] avatarImage = null;\n\t\tFile file = new File(mStoreDir, id);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AvatarCacheFile.java:[lines 33-170] \nIn class org.jivesoftware.smackx.avatar.cache.AvatarCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.AvatarCacheFile.purgeItemFor(String) \nAt AvatarCacheFile.java:[line 158] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.purgeItemFor(Ljava/lang/String;)Z parameter 0 \nMethod usage with tainted arguments detected \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 332] \nAt AvatarManager.java:[line 335] \nAt AvatarManager.java:[line 337] \nAt AvatarManager.java:[line 445] \nAt AvatarManager.java:[line 448] \nAt AvatarManager.java:[line 451] \nAt AvatarManager.java:[line 462] \nAt AvatarManager.java:[line 463] \nAt AvatarManager.java:[line 464] \nAt JidToHashCacheFile.java:[line 96] \nAt UserAvatarManager.java:[line 317] \nAt UserAvatarManager.java:[line 334] \nAt UserAvatarManager.java:[line 336] \nAt VCardAvatarManager.java:[line 185] \nAt VCardAvatarManager.java:[line 213] \nAt VCardAvatarManager.java:[line 215].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/f569cc2d9b85484d3748f517b5faabcf", "severity": "critical", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AvatarCacheFile.java:[lines 33-170] \nIn class org.jivesoftware.smackx.avatar.cache.AvatarCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.AvatarCacheFile.purgeItemFor(String) \nAt AvatarCacheFile.java:[line 158] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.purgeItemFor(Ljava/lang/String;)Z parameter 0 \nMethod usage with tainted arguments detected \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 332] \nAt AvatarManager.java:[line 335] \nAt AvatarManager.java:[line 337] \nAt AvatarManager.java:[line 445] \nAt AvatarManager.java:[line 448] \nAt AvatarManager.java:[line 451] \nAt AvatarManager.java:[line 462] \nAt AvatarManager.java:[line 463] \nAt AvatarManager.java:[line 464] \nAt JidToHashCacheFile.java:[line 96] \nAt UserAvatarManager.java:[line 317] \nAt UserAvatarManager.java:[line 334] \nAt UserAvatarManager.java:[line 336] \nAt VCardAvatarManager.java:[line 185] \nAt VCardAvatarManager.java:[line 213] \nAt VCardAvatarManager.java:[line 215].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 158, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\tFile file = new File(mStoreDir, photoHash);\n", "snippetText": "\t{\n\t\tFile file = new File(mStoreDir, photoHash);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AvatarCacheFile.java:[lines 33-170] \nIn class org.jivesoftware.smackx.avatar.cache.AvatarCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.AvatarCacheFile.addAvatarByHash(String, InputStream) \nAt AvatarCacheFile.java:[line 88] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.addAvatarByHash(Ljava/lang/String;Ljava/io/InputStream;)V parameter 1 \nMethod usage not detected.", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/daaacfebd185c0aac3ff1239c9372ad3", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AvatarCacheFile.java:[lines 33-170] \nIn class org.jivesoftware.smackx.avatar.cache.AvatarCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.AvatarCacheFile.addAvatarByHash(String, InputStream) \nAt AvatarCacheFile.java:[line 88] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.addAvatarByHash(Ljava/lang/String;Ljava/io/InputStream;)V parameter 1 \nMethod usage not detected.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 88, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\tFile file = new File(mStoreDir, id);\n", "snippetText": "\t{\n\t\tFile file = new File(mStoreDir, id);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AvatarCacheFile.java:[lines 33-170] \nIn class org.jivesoftware.smackx.avatar.cache.AvatarCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.AvatarCacheFile.addAvatarByHash(String, byte[]) \nAt AvatarCacheFile.java:[line 61] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.addAvatarByHash(Ljava/lang/String;[B)V parameter 1 \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1705] \nAt AvatarManager.java:[line 196] \nAt AvatarManager.java:[line 199] \nAt AvatarManager.java:[line 216] \nAt AvatarManager.java:[line 217] \nAt AvatarManager.java:[line 218] \nAt AvatarManager.java:[line 278] \nAt AvatarManager.java:[line 280] \nAt AvatarManager.java:[line 281] \nAt AvatarManager.java:[line 531] \nAt AvatarManager.java:[line 539] \nAt UserAvatarManager.java:[line 160] \nAt UserAvatarManager.java:[line 164] \nAt UserAvatarManager.java:[line 324] \nAt UserAvatarManager.java:[line 390].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/b4ed517141ff883deb0e5a95308acd09", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AvatarCacheFile.java:[lines 33-170] \nIn class org.jivesoftware.smackx.avatar.cache.AvatarCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.AvatarCacheFile.addAvatarByHash(String, byte[]) \nAt AvatarCacheFile.java:[line 61] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.addAvatarByHash(Ljava/lang/String;[B)V parameter 1 \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1705] \nAt AvatarManager.java:[line 196] \nAt AvatarManager.java:[line 199] \nAt AvatarManager.java:[line 216] \nAt AvatarManager.java:[line 217] \nAt AvatarManager.java:[line 218] \nAt AvatarManager.java:[line 278] \nAt AvatarManager.java:[line 280] \nAt AvatarManager.java:[line 281] \nAt AvatarManager.java:[line 531] \nAt AvatarManager.java:[line 539] \nAt UserAvatarManager.java:[line 160] \nAt UserAvatarManager.java:[line 164] \nAt UserAvatarManager.java:[line 324] \nAt UserAvatarManager.java:[line 390].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 61, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\tFile file = new File(mStoreDir, id);\n", "snippetText": "\t{\n\t\tFile file = new File(mStoreDir, id);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AvatarCacheFile.java:[lines 33-170] \nIn class org.jivesoftware.smackx.avatar.cache.AvatarCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.AvatarCacheFile.contains(String) \nAt AvatarCacheFile.java:[line 151] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.contains(Ljava/lang/String;)Z parameter 0 \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1705] \nAt AvatarManager.java:[line 196] \nAt AvatarManager.java:[line 216] \nAt AvatarManager.java:[line 217] \nAt AvatarManager.java:[line 218] \nAt AvatarManager.java:[line 278] \nAt AvatarManager.java:[line 280] \nAt AvatarManager.java:[line 281] \nAt AvatarManager.java:[line 363] \nAt AvatarManager.java:[line 531] \nAt AvatarManager.java:[line 537] \nAt AvatarManager.java:[line 539] \nAt UserAvatarManager.java:[line 160] \nAt UserAvatarManager.java:[line 164] \nAt UserAvatarManager.java:[line 315] \nAt UserAvatarManager.java:[line 324] \nAt UserAvatarManager.java:[line 390] \nAt VCardAvatarManager.java:[line 281] \nAt VCardAvatarManager.java:[line 284] \nAt VCardTempXUpdate.java:[line 109].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/fec773df070e4ad647eb7a47aa639a2d", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AvatarCacheFile.java:[lines 33-170] \nIn class org.jivesoftware.smackx.avatar.cache.AvatarCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.AvatarCacheFile.contains(String) \nAt AvatarCacheFile.java:[line 151] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.contains(Ljava/lang/String;)Z parameter 0 \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1705] \nAt AvatarManager.java:[line 196] \nAt AvatarManager.java:[line 216] \nAt AvatarManager.java:[line 217] \nAt AvatarManager.java:[line 218] \nAt AvatarManager.java:[line 278] \nAt AvatarManager.java:[line 280] \nAt AvatarManager.java:[line 281] \nAt AvatarManager.java:[line 363] \nAt AvatarManager.java:[line 531] \nAt AvatarManager.java:[line 537] \nAt AvatarManager.java:[line 539] \nAt UserAvatarManager.java:[line 160] \nAt UserAvatarManager.java:[line 164] \nAt UserAvatarManager.java:[line 315] \nAt UserAvatarManager.java:[line 324] \nAt UserAvatarManager.java:[line 390] \nAt VCardAvatarManager.java:[line 281] \nAt VCardAvatarManager.java:[line 284] \nAt VCardTempXUpdate.java:[line 109].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 151, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\tFile file = new File(mStoreDir, photoHash);\n", "snippetText": "\t{\n\t\tFile file = new File(mStoreDir, photoHash);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages \nAt JidToHashCacheFile.java:[lines 35-143] \nIn class org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile.getHashForJid(BareJid) \nAt JidToHashCacheFile.java:[line 99] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V \nSink parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nMethod usage with tainted arguments detected \nAt MetaContactImpl.java:[line 634] \nAt GlobalDisplayDetailsImpl.java:[line 135] \nAt GlobalDisplayDetailsImpl.java:[line 136] \nAt InfoRetriever.java:[line 62] \nAt InfoRetriever.java:[line 83] \nAt InfoRetriever.java:[line 119] \nAt InfoRetriever.java:[line 147] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1651] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1687] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1705] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 110] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 129] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 140] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 269] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 307] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 393] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 59] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 87] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 111] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 152] \nAt ServerStoredContactListJabberImpl.java:[line 1544] \nAt ServerStoredContactListJabberImpl.java:[line 1550] \nAt AccountID.java:[line 245] \nAt AvatarManager.java:[line 196] \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 332] \nAt AvatarManager.java:[line 359] \nAt AvatarManager.java:[line 385] \nAt AvatarManager.java:[line 437] \nAt AvatarManager.java:[line 438] \nAt AvatarManager.java:[line 445] \nAt AvatarManager.java:[line 462] \nAt AvatarManager.java:[line 537] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 99] \nAt JidToHashCacheFile.java:[line 131] \nAt UserAvatarManager.java:[line 198] \nAt UserAvatarManager.java:[line 315] \nAt UserAvatarManager.java:[line 317] \nAt UserAvatarManager.java:[line 390] \nAt VCardAvatarManager.java:[line 175] \nAt VCardAvatarManager.java:[line 181] \nAt VCardAvatarManager.java:[line 185] \nAt VCardAvatarManager.java:[line 270] \nAt VCardAvatarManager.java:[line 284] \nAt VCardAvatarManager.java:[line 290] \nAt VCardAvatarManager.java:[line 142].", "description": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages .", "internal_id": "CRLF_INJECTION_LOGS/89cda59a66bd1eaa7c72686751e192a6", "severity": "moderate", "owasp_category": "", "category": "CRLF INJECTION LOGS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages \nAt JidToHashCacheFile.java:[lines 35-143] \nIn class org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile.getHashForJid(BareJid) \nAt JidToHashCacheFile.java:[line 99] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V \nSink parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nMethod usage with tainted arguments detected \nAt MetaContactImpl.java:[line 634] \nAt GlobalDisplayDetailsImpl.java:[line 135] \nAt GlobalDisplayDetailsImpl.java:[line 136] \nAt InfoRetriever.java:[line 62] \nAt InfoRetriever.java:[line 83] \nAt InfoRetriever.java:[line 119] \nAt InfoRetriever.java:[line 147] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1651] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1687] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1705] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 110] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 129] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 140] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 269] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 307] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 393] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 59] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 87] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 111] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 152] \nAt ServerStoredContactListJabberImpl.java:[line 1544] \nAt ServerStoredContactListJabberImpl.java:[line 1550] \nAt AccountID.java:[line 245] \nAt AvatarManager.java:[line 196] \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 332] \nAt AvatarManager.java:[line 359] \nAt AvatarManager.java:[line 385] \nAt AvatarManager.java:[line 437] \nAt AvatarManager.java:[line 438] \nAt AvatarManager.java:[line 445] \nAt AvatarManager.java:[line 462] \nAt AvatarManager.java:[line 537] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 99] \nAt JidToHashCacheFile.java:[line 131] \nAt UserAvatarManager.java:[line 198] \nAt UserAvatarManager.java:[line 315] \nAt UserAvatarManager.java:[line 317] \nAt UserAvatarManager.java:[line 390] \nAt VCardAvatarManager.java:[line 175] \nAt VCardAvatarManager.java:[line 181] \nAt VCardAvatarManager.java:[line 185] \nAt VCardAvatarManager.java:[line 270] \nAt VCardAvatarManager.java:[line 284] \nAt VCardAvatarManager.java:[line 290] \nAt VCardAvatarManager.java:[line 142].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 99, "ruleId": "CRLF_INJECTION_LOGS", "ruleName": "CRLF INJECTION LOGS", "contextText": "\t\t\tLOGGER.log(Level.WARNING, \"Could not restore photoHash from file: \" + id, e);\n", "snippetText": "\t\tcatch (IOException e) {\n\t\t\tLOGGER.log(Level.WARNING, \"Could not restore photoHash from file: \" + id, e);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages \nAt JidToHashCacheFile.java:[lines 35-143] \nIn class org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile.getHashForJid(BareJid) \nAt JidToHashCacheFile.java:[line 106] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V \nSink parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nMethod usage with tainted arguments detected \nAt MetaContactImpl.java:[line 634] \nAt GlobalDisplayDetailsImpl.java:[line 135] \nAt GlobalDisplayDetailsImpl.java:[line 136] \nAt InfoRetriever.java:[line 62] \nAt InfoRetriever.java:[line 83] \nAt InfoRetriever.java:[line 119] \nAt InfoRetriever.java:[line 147] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1651] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1687] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1705] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 110] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 129] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 140] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 269] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 307] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 393] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 59] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 87] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 111] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 152] \nAt ServerStoredContactListJabberImpl.java:[line 1544] \nAt ServerStoredContactListJabberImpl.java:[line 1550] \nAt AccountID.java:[line 245] \nAt AvatarManager.java:[line 196] \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 332] \nAt AvatarManager.java:[line 359] \nAt AvatarManager.java:[line 385] \nAt AvatarManager.java:[line 437] \nAt AvatarManager.java:[line 438] \nAt AvatarManager.java:[line 445] \nAt AvatarManager.java:[line 462] \nAt AvatarManager.java:[line 537] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 106] \nAt JidToHashCacheFile.java:[line 131] \nAt UserAvatarManager.java:[line 198] \nAt UserAvatarManager.java:[line 315] \nAt UserAvatarManager.java:[line 317] \nAt UserAvatarManager.java:[line 390] \nAt VCardAvatarManager.java:[line 175] \nAt VCardAvatarManager.java:[line 181] \nAt VCardAvatarManager.java:[line 185] \nAt VCardAvatarManager.java:[line 270] \nAt VCardAvatarManager.java:[line 284] \nAt VCardAvatarManager.java:[line 290] \nAt VCardAvatarManager.java:[line 142].", "description": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages .", "internal_id": "CRLF_INJECTION_LOGS/d2b059132c460d95e892d6a9640b1ae2", "severity": "moderate", "owasp_category": "", "category": "CRLF INJECTION LOGS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages \nAt JidToHashCacheFile.java:[lines 35-143] \nIn class org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile.getHashForJid(BareJid) \nAt JidToHashCacheFile.java:[line 106] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V \nSink parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nMethod usage with tainted arguments detected \nAt MetaContactImpl.java:[line 634] \nAt GlobalDisplayDetailsImpl.java:[line 135] \nAt GlobalDisplayDetailsImpl.java:[line 136] \nAt InfoRetriever.java:[line 62] \nAt InfoRetriever.java:[line 83] \nAt InfoRetriever.java:[line 119] \nAt InfoRetriever.java:[line 147] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1651] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1687] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1705] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 110] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 129] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 140] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 269] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 307] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 393] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 59] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 87] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 111] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 152] \nAt ServerStoredContactListJabberImpl.java:[line 1544] \nAt ServerStoredContactListJabberImpl.java:[line 1550] \nAt AccountID.java:[line 245] \nAt AvatarManager.java:[line 196] \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 332] \nAt AvatarManager.java:[line 359] \nAt AvatarManager.java:[line 385] \nAt AvatarManager.java:[line 437] \nAt AvatarManager.java:[line 438] \nAt AvatarManager.java:[line 445] \nAt AvatarManager.java:[line 462] \nAt AvatarManager.java:[line 537] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 106] \nAt JidToHashCacheFile.java:[line 131] \nAt UserAvatarManager.java:[line 198] \nAt UserAvatarManager.java:[line 315] \nAt UserAvatarManager.java:[line 317] \nAt UserAvatarManager.java:[line 390] \nAt VCardAvatarManager.java:[line 175] \nAt VCardAvatarManager.java:[line 181] \nAt VCardAvatarManager.java:[line 185] \nAt VCardAvatarManager.java:[line 270] \nAt VCardAvatarManager.java:[line 284] \nAt VCardAvatarManager.java:[line 290] \nAt VCardAvatarManager.java:[line 142].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 106, "ruleId": "CRLF_INJECTION_LOGS", "ruleName": "CRLF INJECTION LOGS", "contextText": "\t\t\t\tLOGGER.log(Level.WARNING, \"Error while closing stream: \" + id, e);\n", "snippetText": "\t\t\tcatch (IOException e) {\n\t\t\t\tLOGGER.log(Level.WARNING, \"Error while closing stream: \" + id, e);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt JidToHashCacheFile.java:[lines 35-143] \nIn class org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile.getFileFor(BareJid) \nAt JidToHashCacheFile.java:[line 132] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smack/util/stringencoder/StringEncoder.encode(Ljava/lang/Object;)Ljava/lang/String;.", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/deb0e414084f092cc860bf4a88ddb83c", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt JidToHashCacheFile.java:[lines 35-143] \nIn class org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile.getFileFor(BareJid) \nAt JidToHashCacheFile.java:[line 132] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smack/util/stringencoder/StringEncoder.encode(Ljava/lang/Object;)Ljava/lang/String;.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 132, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\treturn new File(mStoreDir, filename);\n", "snippetText": "\t\tString filename = filenameEncoder.encode(id.toString());\n\t\treturn new File(mStoreDir, filename);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt UserAvatarManager.java:[lines 57-429] \nIn class org.jivesoftware.smackx.avatar.useravatar.UserAvatarManager \nIn method org.jivesoftware.smackx.avatar.useravatar.UserAvatarManager.downloadAvatar(EntityBareJid, String, AvatarMetadata$Info) \nAt UserAvatarManager.java:[line 338] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.isHashMultipleOwner(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)Z parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.purgeItemFor(Ljava/lang/String;)Z parameter 0 \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.isAvatarNew(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)Z parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.addJidToAvatarHashIndex(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.addJidToAvatarHashIndex(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 1 \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nTainted source org/jivesoftware/smackx/avatar/useravatar/UserAvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/useravatar/UserAvatarManager.downloadAvatar(Lorg/jxmpp/jid/EntityBareJid;Ljava/lang/String;Lorg/jivesoftware/smackx/avatar/useravatar/packet/AvatarMetadata$Info;)Z parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/useravatar/UserAvatarManager.downloadAvatar(Lorg/jxmpp/jid/EntityBareJid;Ljava/lang/String;Lorg/jivesoftware/smackx/avatar/useravatar/packet/AvatarMetadata$Info;)Z parameter 2 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.addHashByJid(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 1 \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 316] \nAt AvatarManager.java:[line 317] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131] \nAt UserAvatarManager.java:[line 317] \nAt UserAvatarManager.java:[line 318] \nAt UserAvatarManager.java:[line 334] \nAt UserAvatarManager.java:[line 338].", "description": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages .", "internal_id": "CRLF_INJECTION_LOGS/1541af75d415965279f21537ff77e0a7", "severity": "moderate", "owasp_category": "", "category": "CRLF INJECTION LOGS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt UserAvatarManager.java:[lines 57-429] \nIn class org.jivesoftware.smackx.avatar.useravatar.UserAvatarManager \nIn method org.jivesoftware.smackx.avatar.useravatar.UserAvatarManager.downloadAvatar(EntityBareJid, String, AvatarMetadata$Info) \nAt UserAvatarManager.java:[line 338] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.isHashMultipleOwner(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)Z parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.purgeItemFor(Ljava/lang/String;)Z parameter 0 \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.isAvatarNew(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)Z parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.addJidToAvatarHashIndex(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.addJidToAvatarHashIndex(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 1 \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nTainted source org/jivesoftware/smackx/avatar/useravatar/UserAvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/useravatar/UserAvatarManager.downloadAvatar(Lorg/jxmpp/jid/EntityBareJid;Ljava/lang/String;Lorg/jivesoftware/smackx/avatar/useravatar/packet/AvatarMetadata$Info;)Z parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/useravatar/UserAvatarManager.downloadAvatar(Lorg/jxmpp/jid/EntityBareJid;Ljava/lang/String;Lorg/jivesoftware/smackx/avatar/useravatar/packet/AvatarMetadata$Info;)Z parameter 2 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.addHashByJid(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 1 \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 316] \nAt AvatarManager.java:[line 317] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131] \nAt UserAvatarManager.java:[line 317] \nAt UserAvatarManager.java:[line 318] \nAt UserAvatarManager.java:[line 334] \nAt UserAvatarManager.java:[line 338].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/useravatar/UserAvatarManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 338, "ruleId": "CRLF_INJECTION_LOGS", "ruleName": "CRLF INJECTION LOGS", "contextText": "                LOGGER.log(Level.INFO, \"Avatar with new avatarHash received (old => new) \"\n", "snippetText": "\n                LOGGER.log(Level.INFO, \"Avatar with new avatarHash received (old => new) \"\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "Unsafe comparison of hash that are susceptible to timing attack \nAt UserAvatarManager.java:[lines 57-429] \nIn class org.jivesoftware.smackx.avatar.useravatar.UserAvatarManager \nIn method org.jivesoftware.smackx.avatar.useravatar.UserAvatarManager.downloadAvatar(EntityBareJid, String, AvatarMetadata$Info) \nAt UserAvatarManager.java:[line 334] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.addJidToAvatarHashIndex(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/useravatar/UserAvatarManager.downloadAvatar(Lorg/jxmpp/jid/EntityBareJid;Ljava/lang/String;Lorg/jivesoftware/smackx/avatar/useravatar/packet/AvatarMetadata$Info;)Z parameter 1 \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1705] \nAt AvatarManager.java:[line 316] \nAt AvatarManager.java:[line 317] \nAt UserAvatarManager.java:[line 390].", "description": "Unsafe comparison of hash that are susceptible to timing attack .", "internal_id": "UNSAFE_HASH_EQUALS/426f0a99a39b12471b2c664f5d84dc21", "severity": "moderate", "owasp_category": "", "category": "UNSAFE HASH EQUALS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Unsafe comparison of hash that are susceptible to timing attack \nAt UserAvatarManager.java:[lines 57-429] \nIn class org.jivesoftware.smackx.avatar.useravatar.UserAvatarManager \nIn method org.jivesoftware.smackx.avatar.useravatar.UserAvatarManager.downloadAvatar(EntityBareJid, String, AvatarMetadata$Info) \nAt UserAvatarManager.java:[line 334] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.addJidToAvatarHashIndex(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/useravatar/UserAvatarManager.downloadAvatar(Lorg/jxmpp/jid/EntityBareJid;Ljava/lang/String;Lorg/jivesoftware/smackx/avatar/useravatar/packet/AvatarMetadata$Info;)Z parameter 1 \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1705] \nAt AvatarManager.java:[line 316] \nAt AvatarManager.java:[line 317] \nAt UserAvatarManager.java:[line 390].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/useravatar/UserAvatarManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 334, "ruleId": "UNSAFE_HASH_EQUALS", "ruleName": "UNSAFE HASH EQUALS", "contextText": "                if (!TextUtils.isEmpty(currentAvatarHash) && !currentAvatarHash.equals(avatarId)\n", "snippetText": "                 */\n                if (!TextUtils.isEmpty(currentAvatarHash) && !currentAvatarHash.equals(avatarId)\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt VCardAvatarManager.java:[lines 49-363] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager \nIn method org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager.downloadVCard(BareJid) \nAt VCardAvatarManager.java:[line 181] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.mAccount \nUnknown source java/lang/Exception.getMessage()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.downloadVCard(Lorg/jxmpp/jid/BareJid;)Lorg/jivesoftware/smackx/vcardtemp/packet/VCard; parameter 0 \nMethod usage with tainted arguments detected \nAt InfoRetriever.java:[line 62] \nAt InfoRetriever.java:[line 83] \nAt InfoRetriever.java:[line 119] \nAt InfoRetriever.java:[line 147] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1651] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 110] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 129] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 140] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 269] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 307] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 393] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 59] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 87] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 111] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 152] \nAt ServerStoredContactListJabberImpl.java:[line 1550] \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131] \nAt VCardAvatarManager.java:[line 175] \nAt VCardAvatarManager.java:[line 181] \nAt VCardAvatarManager.java:[line 290].", "description": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages .", "internal_id": "CRLF_INJECTION_LOGS/66dec800ce87d25e1b0667fc51684ab9", "severity": "moderate", "owasp_category": "", "category": "CRLF INJECTION LOGS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt VCardAvatarManager.java:[lines 49-363] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager \nIn method org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager.downloadVCard(BareJid) \nAt VCardAvatarManager.java:[line 181] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.mAccount \nUnknown source java/lang/Exception.getMessage()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.downloadVCard(Lorg/jxmpp/jid/BareJid;)Lorg/jivesoftware/smackx/vcardtemp/packet/VCard; parameter 0 \nMethod usage with tainted arguments detected \nAt InfoRetriever.java:[line 62] \nAt InfoRetriever.java:[line 83] \nAt InfoRetriever.java:[line 119] \nAt InfoRetriever.java:[line 147] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1651] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 110] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 129] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 140] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 269] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 307] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 393] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 59] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 87] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 111] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 152] \nAt ServerStoredContactListJabberImpl.java:[line 1550] \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131] \nAt VCardAvatarManager.java:[line 175] \nAt VCardAvatarManager.java:[line 181] \nAt VCardAvatarManager.java:[line 290].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 181, "ruleId": "CRLF_INJECTION_LOGS", "ruleName": "CRLF INJECTION LOGS", "contextText": "            LOGGER.log(Level.WARNING, \"Error while downloading VCard for: '\" + userId + \"'. \" + e.getMessage());\n", "snippetText": "                | SmackException.NotConnectedException | InterruptedException e) {\n            LOGGER.log(Level.WARNING, \"Error while downloading VCard for: '\" + userId + \"'. \" + e.getMessage());\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt VCardAvatarManager.java:[lines 49-363] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager \nIn method org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager.downloadVCard(BareJid) \nAt VCardAvatarManager.java:[line 218] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.mAccount \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.addAvatarImage([B)Ljava/lang/String; \nUnknown source java/lang/Exception.getMessage()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.addJidToAvatarHashIndex(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.addJidToAvatarHashIndex(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nUnknown source org/jivesoftware/smack/util/StringUtils.encodeHex([B)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.downloadVCard(Lorg/jxmpp/jid/BareJid;)Lorg/jivesoftware/smackx/vcardtemp/packet/VCard; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHash([B)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.setAvatarHash(Ljava/lang/String;)Z parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.addHashByJid(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 1 \nMethod usage with tainted arguments detected \nAt InfoRetriever.java:[line 62] \nAt InfoRetriever.java:[line 83] \nAt InfoRetriever.java:[line 119] \nAt InfoRetriever.java:[line 147] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1651] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 110] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 129] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 140] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 269] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 307] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 393] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 59] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 87] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 111] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 152] \nAt ServerStoredContactListJabberImpl.java:[line 1550] \nAt AvatarManager.java:[line 216] \nAt AvatarManager.java:[line 217] \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 316] \nAt AvatarManager.java:[line 317] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131] \nAt VCardAvatarManager.java:[line 175] \nAt VCardAvatarManager.java:[line 181] \nAt VCardAvatarManager.java:[line 192] \nAt VCardAvatarManager.java:[line 199] \nAt VCardAvatarManager.java:[line 218] \nAt VCardAvatarManager.java:[line 290].", "description": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages .", "internal_id": "CRLF_INJECTION_LOGS/8a267be07d04d56f8de540192bd8903d", "severity": "moderate", "owasp_category": "", "category": "CRLF INJECTION LOGS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt VCardAvatarManager.java:[lines 49-363] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager \nIn method org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager.downloadVCard(BareJid) \nAt VCardAvatarManager.java:[line 218] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.mAccount \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.addAvatarImage([B)Ljava/lang/String; \nUnknown source java/lang/Exception.getMessage()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.addJidToAvatarHashIndex(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.addJidToAvatarHashIndex(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nUnknown source org/jivesoftware/smack/util/StringUtils.encodeHex([B)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.downloadVCard(Lorg/jxmpp/jid/BareJid;)Lorg/jivesoftware/smackx/vcardtemp/packet/VCard; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHash([B)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.setAvatarHash(Ljava/lang/String;)Z parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.addHashByJid(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 1 \nMethod usage with tainted arguments detected \nAt InfoRetriever.java:[line 62] \nAt InfoRetriever.java:[line 83] \nAt InfoRetriever.java:[line 119] \nAt InfoRetriever.java:[line 147] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1651] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 110] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 129] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 140] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 269] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 307] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 393] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 59] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 87] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 111] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 152] \nAt ServerStoredContactListJabberImpl.java:[line 1550] \nAt AvatarManager.java:[line 216] \nAt AvatarManager.java:[line 217] \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 316] \nAt AvatarManager.java:[line 317] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131] \nAt VCardAvatarManager.java:[line 175] \nAt VCardAvatarManager.java:[line 181] \nAt VCardAvatarManager.java:[line 192] \nAt VCardAvatarManager.java:[line 199] \nAt VCardAvatarManager.java:[line 218] \nAt VCardAvatarManager.java:[line 290].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 218, "ruleId": "CRLF_INJECTION_LOGS", "ruleName": "CRLF INJECTION LOGS", "contextText": "            LOGGER.log(Level.INFO, \"Downloaded vcard info for: \" + userId + \"; Hash = \" + avatarHash);\n", "snippetText": "            }\n            LOGGER.log(Level.INFO, \"Downloaded vcard info for: \" + userId + \"; Hash = \" + avatarHash);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt VCardAvatarManager.java:[lines 49-363] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager \nIn method org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager.processContactPhotoPresence(Stanza) \nAt VCardAvatarManager.java:[line 293] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smack/packet/Stanza.getFrom()Lorg/jxmpp/jid/Jid; \nTainted source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.mAvatarHash \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.getAvatarHash()Ljava/lang/String; \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt VCardAvatarManager.java:[line 270] \nAt VCardAvatarManager.java:[line 281] \nAt VCardAvatarManager.java:[line 293] \nAt VCardTempXUpdate.java:[line 109].", "description": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages .", "internal_id": "CRLF_INJECTION_LOGS/715b85d3804248eceaba018dfac700cb", "severity": "moderate", "owasp_category": "", "category": "CRLF INJECTION LOGS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt VCardAvatarManager.java:[lines 49-363] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager \nIn method org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager.processContactPhotoPresence(Stanza) \nAt VCardAvatarManager.java:[line 293] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smack/packet/Stanza.getFrom()Lorg/jxmpp/jid/Jid; \nTainted source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.mAvatarHash \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.getAvatarHash()Ljava/lang/String; \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt VCardAvatarManager.java:[line 270] \nAt VCardAvatarManager.java:[line 281] \nAt VCardAvatarManager.java:[line 293] \nAt VCardTempXUpdate.java:[line 109].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 293, "ruleId": "CRLF_INJECTION_LOGS", "ruleName": "CRLF INJECTION LOGS", "contextText": "                        LOGGER.log(Level.INFO, \"Presence with new avatarHash received (old => new) from: \"\n", "snippetText": "                    if ((mVCard != null) && (mVCard.getAvatar() != null)) {\n                        LOGGER.log(Level.INFO, \"Presence with new avatarHash received (old => new) from: \"\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "Unsafe comparison of hash that are susceptible to timing attack \nAt VCardAvatarManager.java:[lines 49-363] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager \nIn method org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager.downloadVCard(BareJid) \nAt VCardAvatarManager.java:[line 193] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nTainted source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt VCardAvatarManager.java:[line 185].", "description": "Unsafe comparison of hash that are susceptible to timing attack .", "internal_id": "UNSAFE_HASH_EQUALS/5a959d43b59aa4743fcc18db592aad7b", "severity": "moderate", "owasp_category": "", "category": "UNSAFE HASH EQUALS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Unsafe comparison of hash that are susceptible to timing attack \nAt VCardAvatarManager.java:[lines 49-363] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager \nIn method org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager.downloadVCard(BareJid) \nAt VCardAvatarManager.java:[line 193] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nTainted source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt VCardAvatarManager.java:[line 185].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 193, "ruleId": "UNSAFE_HASH_EQUALS", "ruleName": "UNSAFE HASH EQUALS", "contextText": "                if (!avatarHash.equals(currentAvatarHash)) {\n", "snippetText": "                avatarHash = addAvatarImage(avatarImage);\n                if (!avatarHash.equals(currentAvatarHash)) {\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt VCardTempXUpdate.java:[lines 42-158] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.packet.VCardTempXUpdate \nIn method org.jivesoftware.smackx.avatar.vcardavatar.packet.VCardTempXUpdate.setAvatarHash(String) \nAt VCardTempXUpdate.java:[line 94] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.mAvatarHash \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.setAvatarHash(Ljava/lang/String;)Z parameter 0 \nMethod usage with tainted arguments detected \nAt AvatarManager.java:[line 216] \nAt AvatarManager.java:[line 217] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 531] \nAt AvatarManager.java:[line 535] \nAt JidToHashCacheFile.java:[line 96] \nAt VCardAvatarManager.java:[line 192] \nAt VCardAvatarManager.java:[line 200] \nAt VCardAvatarManager.java:[line 142] \nAt VCardAvatarManager.java:[line 144] \nAt VCardTempXUpdate.java:[line 94].", "description": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages .", "internal_id": "CRLF_INJECTION_LOGS/dcc4706defee0119b6d62bcc57110bb3", "severity": "moderate", "owasp_category": "", "category": "CRLF INJECTION LOGS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt VCardTempXUpdate.java:[lines 42-158] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.packet.VCardTempXUpdate \nIn method org.jivesoftware.smackx.avatar.vcardavatar.packet.VCardTempXUpdate.setAvatarHash(String) \nAt VCardTempXUpdate.java:[line 94] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.mAvatarHash \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.setAvatarHash(Ljava/lang/String;)Z parameter 0 \nMethod usage with tainted arguments detected \nAt AvatarManager.java:[line 216] \nAt AvatarManager.java:[line 217] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 531] \nAt AvatarManager.java:[line 535] \nAt JidToHashCacheFile.java:[line 96] \nAt VCardAvatarManager.java:[line 192] \nAt VCardAvatarManager.java:[line 200] \nAt VCardAvatarManager.java:[line 142] \nAt VCardAvatarManager.java:[line 144] \nAt VCardTempXUpdate.java:[line 94].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 94, "ruleId": "CRLF_INJECTION_LOGS", "ruleName": "CRLF INJECTION LOGS", "contextText": "            LOGGER.log(Level.INFO, \"Account avatar hash updated with (old => new): \" + \"\\n\"\n", "snippetText": "        if ((avatarHash != null) && !avatarHash.equals(mAvatarHash)) {\n            LOGGER.log(Level.INFO, \"Account avatar hash updated with (old => new): \" + \"\\n\"\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "Unsafe comparison of hash that are susceptible to timing attack \nAt VCardTempXUpdate.java:[lines 42-158] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.packet.VCardTempXUpdate \nIn method org.jivesoftware.smackx.avatar.vcardavatar.packet.VCardTempXUpdate.setAvatarHash(String) \nAt VCardTempXUpdate.java:[line 93] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.mAvatarHash \nAt VCardTempXUpdate.java:[line 93].", "description": "Unsafe comparison of hash that are susceptible to timing attack .", "internal_id": "UNSAFE_HASH_EQUALS/868de3e1e358492cb951ff1562dc342d", "severity": "moderate", "owasp_category": "", "category": "UNSAFE HASH EQUALS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Unsafe comparison of hash that are susceptible to timing attack \nAt VCardTempXUpdate.java:[lines 42-158] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.packet.VCardTempXUpdate \nIn method org.jivesoftware.smackx.avatar.vcardavatar.packet.VCardTempXUpdate.setAvatarHash(String) \nAt VCardTempXUpdate.java:[line 93] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.mAvatarHash \nAt VCardTempXUpdate.java:[line 93].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 93, "ruleId": "UNSAFE_HASH_EQUALS", "ruleName": "UNSAFE HASH EQUALS", "contextText": "        if ((avatarHash != null) && !avatarHash.equals(mAvatarHash)) {\n", "snippetText": "        boolean isNewHash = false;\n        if ((avatarHash != null) && !avatarHash.equals(mAvatarHash)) {\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_new_atalk/src_code", "type": "extscan", "title": "This random generator (java.lang.Math.random()) is predictable \nAt RelayChannel.java:[lines 11-234] \nIn class org.xmpp.jnodes.RelayChannel \nIn method org.xmpp.jnodes.RelayChannel.createLocalRelayChannel(String, int, int) \nAt RelayChannel.java:[line 38] \nValue java.lang.Math.random().", "description": "This random generator (java.util.Random) is predictable .", "internal_id": "PREDICTABLE_RANDOM/5ba3ea155f9b35bf42aff6a5d0e45ecc", "severity": "moderate", "owasp_category": "", "category": "Predictable Random", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This random generator (java.lang.Math.random()) is predictable \nAt RelayChannel.java:[lines 11-234] \nIn class org.xmpp.jnodes.RelayChannel \nIn method org.xmpp.jnodes.RelayChannel.createLocalRelayChannel(String, int, int) \nAt RelayChannel.java:[line 38] \nValue java.lang.Math.random().", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/xmpp/jnodes/RelayChannel.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 38, "ruleId": "PREDICTABLE_RANDOM", "ruleName": "Predictable Random", "contextText": "                int a = Math.round((int) (Math.random() * range)) + minPort;\n", "snippetText": "            try {\n                int a = Math.round((int) (Math.random() * range)) + minPort;\n"}, "tags": []}]}
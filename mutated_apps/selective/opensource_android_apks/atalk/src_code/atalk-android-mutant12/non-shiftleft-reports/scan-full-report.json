{"tool": {"driver": {"name": "Java Source Analyzer", "version": "1.0.0-scan", "fullName": "Java Source Analyzer"}}, "conversion": {"tool": {"driver": {"name": "@ShiftLeft/sast-scan"}}, "invocation": {"arguments": ["pmd", "-no-cache", "--failOnViolation", "false", "-language", "java", "-d", "/media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12", "-r", "/media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/reports/source-java-report.csv", "-f", "csv", "-R", "/tmp/.mount_scan4xKFmo/usr/src/tools_config/rules-pmd.xml"], "executionSuccessful": true, "commandLine": "pmd -no-cache --failOnViolation false -language java -d /media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12 -r /media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/reports/source-java-report.csv -f csv -R /tmp/.mount_scan4xKFmo/usr/src/tools_config/rules-pmd.xml", "endTimeUtc": "2020-11-27T20:48:30Z", "workingDirectory": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12"}}}, "invocations": [{"executionSuccessful": true, "endTimeUtc": "2020-11-27T20:48:30Z", "workingDirectory": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12"}}], "properties": {"metrics": {"total": 0, "critical": 0, "high": 0, "medium": 0, "low": 0}}, "results": [], "automationDetails": {"description": {"text": "Static Analysis Security Test results using @ShiftLeft/sast-scan"}, "guid": "dd8bb674-d295-4cc0-b3e7-7c4d719ea9ef"}, "versionControlProvenance": [{"branch": "", "repositoryUri": "", "revisionId": ""}]}
{"tool": {"driver": {"name": "Class File Analyzer", "rules": [{"id": "PATH_TRAVERSAL_IN", "help": {"text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt OtrKeyManagerImpl.java:[lines 30-107] \nIn class net.java.otr4j.OtrKeyManagerImpl$DefaultPropertiesStore \nIn method net.java.otr4j.OtrKeyManagerImpl$DefaultPropertiesStore.getConfigurationFile() \nAt OtrKeyManagerImpl.java:[line 50] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/otr4j/OtrKeyManagerImpl$DefaultPropertiesStore.filepath \nAt OtrKeyManagerImpl.java:[line 50].", "markdown": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt OtrKeyManagerImpl.java:[lines 30-107] \nIn class net.java.otr4j.OtrKeyManagerImpl$DefaultPropertiesStore \nIn method net.java.otr4j.OtrKeyManagerImpl$DefaultPropertiesStore.getConfigurationFile() \nAt OtrKeyManagerImpl.java:[line 50] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/otr4j/OtrKeyManagerImpl$DefaultPropertiesStore.filepath \nAt OtrKeyManagerImpl.java:[line 50]."}, "name": "PATH TRAVERSAL IN", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input ."}, "helpUri": "https://slscan.io?q=PATH_TRAVERSAL_IN", "shortDescription": {"text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt OtrKeyManagerImpl.java:[lines 30-107] \nIn class net.java.otr4j.OtrKeyManagerImpl$DefaultPropertiesStore \nIn method net.java.otr4j.OtrKeyManagerImpl$DefaultPropertiesStore.getConfigurationFile() \nAt OtrKeyManagerImpl.java:[line 50] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/otr4j/OtrKeyManagerImpl$DefaultPropertiesStore.filepath \nAt OtrKeyManagerImpl.java:[line 50]."}}, {"id": "WEAK_MESSAGE_DIGEST_SHA1", "help": {"text": "This API SHA-1 (SHA-1) is not a recommended cryptographic hash function \nAt OtrCryptoEngineImpl.java:[lines 31-342] \nIn class net.java.otr4j.crypto.OtrCryptoEngineImpl \nIn method net.java.otr4j.crypto.OtrCryptoEngineImpl.sha1Hash(byte[]) \nAt OtrCryptoEngineImpl.java:[line 153] \nValue SHA-1.", "markdown": "This API SHA-1 (SHA-1) is not a recommended cryptographic hash function \nAt OtrCryptoEngineImpl.java:[lines 31-342] \nIn class net.java.otr4j.crypto.OtrCryptoEngineImpl \nIn method net.java.otr4j.crypto.OtrCryptoEngineImpl.sha1Hash(byte[]) \nAt OtrCryptoEngineImpl.java:[line 153] \nValue SHA-1."}, "name": "WEAK MESSAGE DIGEST SHA1", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "This API SHA-1 (SHA-1) is not a recommended cryptographic hash function ."}, "helpUri": "https://slscan.io?q=WEAK_MESSAGE_DIGEST_SHA1", "shortDescription": {"text": "This API SHA-1 (SHA-1) is not a recommended cryptographic hash function \nAt OtrCryptoEngineImpl.java:[lines 31-342] \nIn class net.java.otr4j.crypto.OtrCryptoEngineImpl \nIn method net.java.otr4j.crypto.OtrCryptoEngineImpl.sha1Hash(byte[]) \nAt OtrCryptoEngineImpl.java:[line 153] \nValue SHA-1."}}, {"id": "PREDICTABLE_RANDOM", "help": {"text": "This random generator (java.util.Random) is predictable \nAt AuthContextImpl.java:[lines 32-792] \nIn class net.java.otr4j.session.AuthContextImpl \nIn method net.java.otr4j.session.AuthContextImpl.getR() \nAt AuthContextImpl.java:[line 218] \nValue java.util.Random.", "markdown": "This random generator (java.util.Random) is predictable \nAt AuthContextImpl.java:[lines 32-792] \nIn class net.java.otr4j.session.AuthContextImpl \nIn method net.java.otr4j.session.AuthContextImpl.getR() \nAt AuthContextImpl.java:[line 218] \nValue java.util.Random."}, "name": "Predictable Random", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "This random generator (java.util.Random) is predictable ."}, "helpUri": "https://slscan.io?q=PREDICTABLE_RANDOM", "shortDescription": {"text": "This random generator (java.util.Random) is predictable \nAt AuthContextImpl.java:[lines 32-792] \nIn class net.java.otr4j.session.AuthContextImpl \nIn method net.java.otr4j.session.AuthContextImpl.getR() \nAt AuthContextImpl.java:[line 218] \nValue java.util.Random."}}, {"id": "UNSAFE_HASH_EQUALS", "help": {"text": "Unsafe comparison of hash that are susceptible to timing attack \nAt AuthContextImpl.java:[lines 32-792] \nIn class net.java.otr4j.session.AuthContextImpl \nIn method net.java.otr4j.session.AuthContextImpl.handleRevealSignatureMessage(RevealSignatureMessage) \nAt AuthContextImpl.java:[line 579] \nSink method java/util/Arrays.equals([B[B)Z \nSink parameter 0 \nUnknown source net/java/otr4j/session/AuthContextImpl.getRemoteDHPublicKeyHash()[B \nUnknown source net/java/otr4j/session/AuthContextImpl.remoteDHPublicKeyHash \nAt AuthContextImpl.java:[line 261] \nAt AuthContextImpl.java:[line 579].", "markdown": "Unsafe comparison of hash that are susceptible to timing attack \nAt AuthContextImpl.java:[lines 32-792] \nIn class net.java.otr4j.session.AuthContextImpl \nIn method net.java.otr4j.session.AuthContextImpl.handleRevealSignatureMessage(RevealSignatureMessage) \nAt AuthContextImpl.java:[line 579] \nSink method java/util/Arrays.equals([B[B)Z \nSink parameter 0 \nUnknown source net/java/otr4j/session/AuthContextImpl.getRemoteDHPublicKeyHash()[B \nUnknown source net/java/otr4j/session/AuthContextImpl.remoteDHPublicKeyHash \nAt AuthContextImpl.java:[line 261] \nAt AuthContextImpl.java:[line 579]."}, "name": "UNSAFE HASH EQUALS", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "Unsafe comparison of hash that are susceptible to timing attack ."}, "helpUri": "https://slscan.io?q=UNSAFE_HASH_EQUALS", "shortDescription": {"text": "Unsafe comparison of hash that are susceptible to timing attack \nAt AuthContextImpl.java:[lines 32-792] \nIn class net.java.otr4j.session.AuthContextImpl \nIn method net.java.otr4j.session.AuthContextImpl.handleRevealSignatureMessage(RevealSignatureMessage) \nAt AuthContextImpl.java:[line 579] \nSink method java/util/Arrays.equals([B[B)Z \nSink parameter 0 \nUnknown source net/java/otr4j/session/AuthContextImpl.getRemoteDHPublicKeyHash()[B \nUnknown source net/java/otr4j/session/AuthContextImpl.remoteDHPublicKeyHash \nAt AuthContextImpl.java:[line 261] \nAt AuthContextImpl.java:[line 579]."}}, {"id": "CIPHER_INTEGRITY", "help": {"text": "The cipher does not provide data integrity \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 89].", "markdown": "The cipher does not provide data integrity \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 89]."}, "name": "Cipher Integrity", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "The cipher does not provide data integrity ."}, "helpUri": "https://slscan.io?q=CIPHER_INTEGRITY", "shortDescription": {"text": "The cipher does not provide data integrity \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 89]."}}, {"id": "ECB_MODE", "help": {"text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 89].", "markdown": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 89]."}, "name": "Ecb Mode", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data ."}, "helpUri": "https://slscan.io?q=ECB_MODE", "shortDescription": {"text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 89]."}}, {"id": "XXE_DOCUMENT", "help": {"text": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.parse(ByteArrayInputStream) \nAt HistoryServiceImpl.java:[line 220] \nValue DocumentBuilder.parse(...).", "markdown": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.parse(ByteArrayInputStream) \nAt HistoryServiceImpl.java:[line 220] \nValue DocumentBuilder.parse(...)."}, "name": "Xxe Document", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks ."}, "helpUri": "https://slscan.io?q=XXE_DOCUMENT", "shortDescription": {"text": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.parse(ByteArrayInputStream) \nAt HistoryServiceImpl.java:[line 220] \nValue DocumentBuilder.parse(...)."}}, {"id": "SQL_INJECTION_ANDROID", "help": {"text": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByKeyword(MetaContact, String, boolean) \nAt MessageHistoryServiceImpl.java:[line 1720] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByKeyword(Lnet/java/sip/communicator/service/contactlist/MetaContact;Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 434] \nAt MessageHistoryServiceImpl.java:[line 1712] \nAt MessageHistoryServiceImpl.java:[line 1720].", "markdown": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByKeyword(MetaContact, String, boolean) \nAt MessageHistoryServiceImpl.java:[line 1720] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByKeyword(Lnet/java/sip/communicator/service/contactlist/MetaContact;Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 434] \nAt MessageHistoryServiceImpl.java:[line 1712] \nAt MessageHistoryServiceImpl.java:[line 1720]."}, "name": "SQL INJECTION ANDROID", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) ."}, "helpUri": "https://slscan.io?q=SQL_INJECTION_ANDROID", "shortDescription": {"text": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByKeyword(MetaContact, String, boolean) \nAt MessageHistoryServiceImpl.java:[line 1720] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByKeyword(Lnet/java/sip/communicator/service/contactlist/MetaContact;Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 434] \nAt MessageHistoryServiceImpl.java:[line 1712] \nAt MessageHistoryServiceImpl.java:[line 1720]."}}, {"id": "COMMAND_INJECTION", "help": {"text": "This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection \nAt CommandNotificationHandlerImpl.java:[lines 23-57] \nIn class net.java.sip.communicator.impl.notification.CommandNotificationHandlerImpl \nIn method net.java.sip.communicator.impl.notification.CommandNotificationHandlerImpl.execute(CommandNotificationAction, Map) \nAt CommandNotificationHandlerImpl.java:[line 53] \nSink method java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/notification/CommandNotificationAction.commandDescriptor \nUnknown source net/java/sip/communicator/service/notification/CommandNotificationAction.getDescriptor()Ljava/lang/String; \nUnknown source java/util/Map.entrySet()Ljava/util/Set; \nUnknown source net/java/sip/communicator/impl/notification/CommandNotificationHandlerImpl.execute(Lnet/java/sip/communicator/service/notification/CommandNotificationAction;Ljava/util/Map;)V parameter 0 \nUnknown source java/util/Map$Entry.getKey()Ljava/lang/Object; \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nUnknown source java/util/Map$Entry.getValue()Ljava/lang/Object; \nMethod usage not detected \nAt CommandNotificationHandlerImpl.java:[line 41] \nAt CommandNotificationHandlerImpl.java:[line 43] \nAt CommandNotificationHandlerImpl.java:[line 47] \nAt CommandNotificationHandlerImpl.java:[line 48] \nAt CommandNotificationAction.java:[line 36].", "markdown": "This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection \nAt CommandNotificationHandlerImpl.java:[lines 23-57] \nIn class net.java.sip.communicator.impl.notification.CommandNotificationHandlerImpl \nIn method net.java.sip.communicator.impl.notification.CommandNotificationHandlerImpl.execute(CommandNotificationAction, Map) \nAt CommandNotificationHandlerImpl.java:[line 53] \nSink method java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/notification/CommandNotificationAction.commandDescriptor \nUnknown source net/java/sip/communicator/service/notification/CommandNotificationAction.getDescriptor()Ljava/lang/String; \nUnknown source java/util/Map.entrySet()Ljava/util/Set; \nUnknown source net/java/sip/communicator/impl/notification/CommandNotificationHandlerImpl.execute(Lnet/java/sip/communicator/service/notification/CommandNotificationAction;Ljava/util/Map;)V parameter 0 \nUnknown source java/util/Map$Entry.getKey()Ljava/lang/Object; \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nUnknown source java/util/Map$Entry.getValue()Ljava/lang/Object; \nMethod usage not detected \nAt CommandNotificationHandlerImpl.java:[line 41] \nAt CommandNotificationHandlerImpl.java:[line 43] \nAt CommandNotificationHandlerImpl.java:[line 47] \nAt CommandNotificationHandlerImpl.java:[line 48] \nAt CommandNotificationAction.java:[line 36]."}, "name": "Command Injection", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection ."}, "helpUri": "https://slscan.io?q=COMMAND_INJECTION", "shortDescription": {"text": "This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection \nAt CommandNotificationHandlerImpl.java:[lines 23-57] \nIn class net.java.sip.communicator.impl.notification.CommandNotificationHandlerImpl \nIn method net.java.sip.communicator.impl.notification.CommandNotificationHandlerImpl.execute(CommandNotificationAction, Map) \nAt CommandNotificationHandlerImpl.java:[line 53] \nSink method java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/notification/CommandNotificationAction.commandDescriptor \nUnknown source net/java/sip/communicator/service/notification/CommandNotificationAction.getDescriptor()Ljava/lang/String; \nUnknown source java/util/Map.entrySet()Ljava/util/Set; \nUnknown source net/java/sip/communicator/impl/notification/CommandNotificationHandlerImpl.execute(Lnet/java/sip/communicator/service/notification/CommandNotificationAction;Ljava/util/Map;)V parameter 0 \nUnknown source java/util/Map$Entry.getKey()Ljava/lang/Object; \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nUnknown source java/util/Map$Entry.getValue()Ljava/lang/Object; \nMethod usage not detected \nAt CommandNotificationHandlerImpl.java:[line 41] \nAt CommandNotificationHandlerImpl.java:[line 43] \nAt CommandNotificationHandlerImpl.java:[line 47] \nAt CommandNotificationHandlerImpl.java:[line 48] \nAt CommandNotificationAction.java:[line 36]."}}, {"id": "URLCONNECTION_SSRF_FD", "help": {"text": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt ProtocolIconJabberImpl.java:[lines 41-163] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolIconJabberImpl \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolIconJabberImpl.loadIcon(String) \nAt ProtocolIconJabberImpl.java:[line 128] \nSink method java/net/URL.openStream()Ljava/io/InputStream; \nSink parameter 0 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nUnknown source net/java/sip/communicator/impl/protocol/jabber/ProtocolIconJabberImpl.loadIcon(Ljava/lang/String;)[B parameter 0 \nAt ProtocolIconJabberImpl.java:[line 57] \nAt ProtocolIconJabberImpl.java:[line 58] \nAt ProtocolIconJabberImpl.java:[line 59] \nAt ProtocolIconJabberImpl.java:[line 114] \nAt ProtocolIconJabberImpl.java:[line 128] \nAt ProtocolProviderServiceJabberImpl.java:[line 2189] \nAt ProtocolProviderServiceJabberImpl.java:[line 2193] \nAt AccountID.java:[line 399] \nAt AccountID.java:[line 412] \nAt AccountID.java:[line 419] \nAt AccountID.java:[line 423] \nAt AccountID.java:[line 427] \nAt AccountID.java:[line 1465].", "markdown": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt ProtocolIconJabberImpl.java:[lines 41-163] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolIconJabberImpl \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolIconJabberImpl.loadIcon(String) \nAt ProtocolIconJabberImpl.java:[line 128] \nSink method java/net/URL.openStream()Ljava/io/InputStream; \nSink parameter 0 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nUnknown source net/java/sip/communicator/impl/protocol/jabber/ProtocolIconJabberImpl.loadIcon(Ljava/lang/String;)[B parameter 0 \nAt ProtocolIconJabberImpl.java:[line 57] \nAt ProtocolIconJabberImpl.java:[line 58] \nAt ProtocolIconJabberImpl.java:[line 59] \nAt ProtocolIconJabberImpl.java:[line 114] \nAt ProtocolIconJabberImpl.java:[line 128] \nAt ProtocolProviderServiceJabberImpl.java:[line 2189] \nAt ProtocolProviderServiceJabberImpl.java:[line 2193] \nAt AccountID.java:[line 399] \nAt AccountID.java:[line 412] \nAt AccountID.java:[line 419] \nAt AccountID.java:[line 423] \nAt AccountID.java:[line 427] \nAt AccountID.java:[line 1465]."}, "name": "URLCONNECTION SSRF FD", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "This web server request could be used by an attacker to expose internal services and filesystem. ."}, "helpUri": "https://slscan.io?q=URLCONNECTION_SSRF_FD", "shortDescription": {"text": "This web server request could be used by an attacker to expose internal services and filesystem"}}, {"id": "WEAK_TRUST_MANAGER", "help": {"text": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt ProtocolProviderServiceJabberImpl.java:[lines 2696-2786] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl$HostTrustManager \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl$HostTrustManager.getAcceptedIssuers() \nAt ProtocolProviderServiceJabberImpl.java:[line 2707].", "markdown": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt ProtocolProviderServiceJabberImpl.java:[lines 2696-2786] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl$HostTrustManager \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl$HostTrustManager.getAcceptedIssuers() \nAt ProtocolProviderServiceJabberImpl.java:[line 2707]."}, "name": "WEAK TRUST MANAGER", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack ."}, "helpUri": "https://slscan.io?q=WEAK_TRUST_MANAGER", "shortDescription": {"text": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt ProtocolProviderServiceJabberImpl.java:[lines 2696-2786] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl$HostTrustManager \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl$HostTrustManager.getAcceptedIssuers() \nAt ProtocolProviderServiceJabberImpl.java:[line 2707]."}}, {"id": "XXE_DTD_TRANSFORM_FACTORY", "help": {"text": "The use of TransformerFactory.newInstance(...) (TransformerFactory) is vulnerable to XML External Entity attacks \nAt ConferenceInfoDocument.java:[lines 32-612] \nIn class net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument \nIn method net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument.toXml(String) \nAt ConferenceInfoDocument.java:[line 450] \nValue TransformerFactory.newInstance(...).", "markdown": "The use of TransformerFactory.newInstance(...) (TransformerFactory) is vulnerable to XML External Entity attacks \nAt ConferenceInfoDocument.java:[lines 32-612] \nIn class net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument \nIn method net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument.toXml(String) \nAt ConferenceInfoDocument.java:[line 450] \nValue TransformerFactory.newInstance(...)."}, "name": "XXE DTD TRANSFORM FACTORY", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "The use of TransformerFactory.newInstance(...) (TransformerFactory) is vulnerable to XML External Entity attacks ."}, "helpUri": "https://slscan.io?q=XXE_DTD_TRANSFORM_FACTORY", "shortDescription": {"text": "The use of TransformerFactory.newInstance(...) (TransformerFactory) is vulnerable to XML External Entity attacks \nAt ConferenceInfoDocument.java:[lines 32-612] \nIn class net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument \nIn method net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument.toXml(String) \nAt ConferenceInfoDocument.java:[line 450] \nValue TransformerFactory.newInstance(...)."}}, {"id": "XXE_XSLT_TRANSFORM_FACTORY", "help": {"text": "The use of TransformerFactory.newInstance(...) is vulnerable to XSLT External Entity attacks \nAt ConferenceInfoDocument.java:[lines 32-612] \nIn class net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument \nIn method net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument.toXml(String) \nAt ConferenceInfoDocument.java:[line 450] \nValue TransformerFactory.newInstance(...).", "markdown": "The use of TransformerFactory.newInstance(...) is vulnerable to XSLT External Entity attacks \nAt ConferenceInfoDocument.java:[lines 32-612] \nIn class net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument \nIn method net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument.toXml(String) \nAt ConferenceInfoDocument.java:[line 450] \nValue TransformerFactory.newInstance(...)."}, "name": "XXE XSLT TRANSFORM FACTORY", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "The use of TransformerFactory.newInstance(...) is vulnerable to XSLT External Entity attacks ."}, "helpUri": "https://slscan.io?q=XXE_XSLT_TRANSFORM_FACTORY", "shortDescription": {"text": "The use of TransformerFactory.newInstance(...) is vulnerable to XSLT External Entity attacks \nAt ConferenceInfoDocument.java:[lines 32-612] \nIn class net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument \nIn method net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument.toXml(String) \nAt ConferenceInfoDocument.java:[line 450] \nValue TransformerFactory.newInstance(...)."}}, {"id": "ANDROID_EXTERNAL_FILE_ACCESS", "help": {"text": "Files could be saved to external storage \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.getaTalkStore(String, boolean) \nAt FileBackend.java:[line 236].", "markdown": "Files could be saved to external storage \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.getaTalkStore(String, boolean) \nAt FileBackend.java:[line 236]."}, "name": "ANDROID EXTERNAL FILE ACCESS", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "Files could be saved to external storage ."}, "helpUri": "https://slscan.io?q=ANDROID_EXTERNAL_FILE_ACCESS", "shortDescription": {"text": "Files could be saved to external storage \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.getaTalkStore(String, boolean) \nAt FileBackend.java:[line 236]."}}, {"id": "CRLF_INJECTION_LOGS", "help": {"text": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt AvatarManager.java:[lines 54-548] \nIn class org.jivesoftware.smackx.avatar.AvatarManager \nIn method org.jivesoftware.smackx.avatar.AvatarManager.getAvatarImageByJid(BareJid) \nAt AvatarManager.java:[line 258] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarImageByJid(Lorg/jxmpp/jid/BareJid;)[B parameter 0 \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nTainted source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131].", "markdown": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt AvatarManager.java:[lines 54-548] \nIn class org.jivesoftware.smackx.avatar.AvatarManager \nIn method org.jivesoftware.smackx.avatar.AvatarManager.getAvatarImageByJid(BareJid) \nAt AvatarManager.java:[line 258] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarImageByJid(Lorg/jxmpp/jid/BareJid;)[B parameter 0 \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nTainted source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131]."}, "name": "CRLF INJECTION LOGS", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages ."}, "helpUri": "https://slscan.io?q=CRLF_INJECTION_LOGS", "shortDescription": {"text": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt AvatarManager.java:[lines 54-548] \nIn class org.jivesoftware.smackx.avatar.AvatarManager \nIn method org.jivesoftware.smackx.avatar.AvatarManager.getAvatarImageByJid(BareJid) \nAt AvatarManager.java:[line 258] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarImageByJid(Lorg/jxmpp/jid/BareJid;)[B parameter 0 \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nTainted source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131]."}}], "version": "1.0.0-scan", "fullName": "Class File Analyzer"}}, "conversion": {"tool": {"driver": {"name": "@ShiftLeft/sast-scan"}}, "invocation": {"arguments": ["-jar", "/tmp/.mount_scan4xKFmo/opt/spotbugs/lib/spotbugs.jar", "-textui", "-include", "/tmp/.mount_scan4xKFmo/usr/src/tools_config/spotbugs/include.xml", "-exclude", "/tmp/.mount_scan4xKFmo/usr/src/tools_config/spotbugs/exclude.xml", "-noClassOk", "-auxclasspathFromFile", "/tmp/tmpxy2khr8h", "-sourcepath", "/media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12", "-quiet", "-medium", "-xml:withMessages", "-effort:max", "-nested:false", "-output", "/media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/reports/class-report.xml", "/media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12"], "executionSuccessful": true, "commandLine": "-jar /tmp/.mount_scan4xKFmo/opt/spotbugs/lib/spotbugs.jar -textui -include /tmp/.mount_scan4xKFmo/usr/src/tools_config/spotbugs/include.xml -exclude /tmp/.mount_scan4xKFmo/usr/src/tools_config/spotbugs/exclude.xml -noClassOk -auxclasspathFromFile /tmp/tmpxy2khr8h -sourcepath /media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12 -quiet -medium -xml:withMessages -effort:max -nested:false -output /media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/reports/class-report.xml /media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12", "endTimeUtc": "2020-11-27T20:48:29Z", "workingDirectory": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12"}}}, "invocations": [{"executionSuccessful": true, "endTimeUtc": "2020-11-27T20:48:29Z", "workingDirectory": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12"}}], "properties": {"metrics": {"total": 87, "critical": 7, "high": 80, "medium": 0, "low": 0}}, "results": [{"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt OtrKeyManagerImpl.java:[lines 30-107] \nIn class net.java.otr4j.OtrKeyManagerImpl$DefaultPropertiesStore \nIn method net.java.otr4j.OtrKeyManagerImpl$DefaultPropertiesStore.getConfigurationFile() \nAt OtrKeyManagerImpl.java:[line 50] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/otr4j/OtrKeyManagerImpl$DefaultPropertiesStore.filepath \nAt OtrKeyManagerImpl.java:[line 50]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            File configFile = new File(filepath);\n"}, "startLine": 50}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/otr4j/OtrKeyManagerImpl.java"}, "contextRegion": {"snippet": {"text": "        {\n            File configFile = new File(filepath);\n"}, "endLine": 50, "startLine": 49}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API SHA-1 (SHA-1) is not a recommended cryptographic hash function \nAt OtrCryptoEngineImpl.java:[lines 31-342] \nIn class net.java.otr4j.crypto.OtrCryptoEngineImpl \nIn method net.java.otr4j.crypto.OtrCryptoEngineImpl.sha1Hash(byte[]) \nAt OtrCryptoEngineImpl.java:[line 153] \nValue SHA-1."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            MessageDigest sha256 = MessageDigest.getInstance(\"SHA-1\");\n"}, "startLine": 153}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/otr4j/crypto/OtrCryptoEngineImpl.java"}, "contextRegion": {"snippet": {"text": "        try {\n            MessageDigest sha256 = MessageDigest.getInstance(\"SHA-1\");\n"}, "endLine": 153, "startLine": 152}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "WEAK_MESSAGE_DIGEST_SHA1", "ruleIndex": 1}, {"message": {"markdown": "", "text": "This random generator (java.util.Random) is predictable \nAt AuthContextImpl.java:[lines 32-792] \nIn class net.java.otr4j.session.AuthContextImpl \nIn method net.java.otr4j.session.AuthContextImpl.getR() \nAt AuthContextImpl.java:[line 218] \nValue java.util.Random."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            new Random().nextBytes(r);\n"}, "startLine": 218}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/otr4j/session/AuthContextImpl.java"}, "contextRegion": {"snippet": {"text": "            r = new byte[OtrCryptoEngine.AES_KEY_BYTE_LENGTH];\n            new Random().nextBytes(r);\n"}, "endLine": 218, "startLine": 217}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PREDICTABLE_RANDOM", "ruleIndex": 2}, {"message": {"markdown": "", "text": "Unsafe comparison of hash that are susceptible to timing attack \nAt AuthContextImpl.java:[lines 32-792] \nIn class net.java.otr4j.session.AuthContextImpl \nIn method net.java.otr4j.session.AuthContextImpl.handleRevealSignatureMessage(RevealSignatureMessage) \nAt AuthContextImpl.java:[line 579] \nSink method java/util/Arrays.equals([B[B)Z \nSink parameter 0 \nUnknown source net/java/otr4j/session/AuthContextImpl.getRemoteDHPublicKeyHash()[B \nUnknown source net/java/otr4j/session/AuthContextImpl.remoteDHPublicKeyHash \nAt AuthContextImpl.java:[line 261] \nAt AuthContextImpl.java:[line 579]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                if (!Arrays.equals(remoteDHPublicKeyHash, this.getRemoteDHPublicKeyHash())) {\n"}, "startLine": 579}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/otr4j/session/AuthContextImpl.java"}, "contextRegion": {"snippet": {"text": "                byte[] remoteDHPublicKeyHash = otrCryptoEngine.sha256Hash(remoteDHPublicKeyDecrypted);\n                if (!Arrays.equals(remoteDHPublicKeyHash, this.getRemoteDHPublicKeyHash())) {\n"}, "endLine": 579, "startLine": 578}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "UNSAFE_HASH_EQUALS", "ruleIndex": 3}, {"message": {"markdown": "", "text": "This random generator (java.util.Random) is predictable \nAt InstanceTag.java:[lines 11-89] \nIn class net.java.otr4j.session.InstanceTag \nIn method net.java.otr4j.session.InstanceTag.<static initializer for InstanceTag>() \nAt InstanceTag.java:[line 11] \nValue java.util.Random."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "\tprivate static final Random RANDOM = new Random();\n"}, "startLine": 11}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/otr4j/session/InstanceTag.java"}, "contextRegion": {"snippet": {"text": "\n\tprivate static final Random RANDOM = new Random();\n"}, "endLine": 11, "startLine": 10}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PREDICTABLE_RANDOM", "ruleIndex": 2}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt CertificateServiceImpl.java:[lines 59-971] \nIn class net.java.sip.communicator.impl.certificate.CertificateServiceImpl \nIn method net.java.sip.communicator.impl.certificate.CertificateServiceImpl.loadKeyStore(CertificateConfigEntry) \nAt CertificateServiceImpl.java:[line 385] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/certificate/CertificateConfigEntry.getKeyStore()Ljava/lang/String; \nUnknown source net/java/sip/communicator/service/certificate/CertificateConfigEntry.keyStore \nAt CertificateServiceImpl.java:[line 385] \nAt CertificateConfigEntry.java:[line 180]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        final File f = new File(entry.getKeyStore());\n"}, "startLine": 385}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/certificate/CertificateServiceImpl.java"}, "contextRegion": {"snippet": {"text": "    {\n        final File f = new File(entry.getKeyStore());\n"}, "endLine": 385, "startLine": 384}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This random generator (java.util.Random) is predictable \nAt CertificateServiceImpl.java:[lines 59-971] \nIn class net.java.sip.communicator.impl.certificate.CertificateServiceImpl \nIn method net.java.sip.communicator.impl.certificate.CertificateServiceImpl.setClientAuthCertificateConfig(CertificateConfigEntry) \nAt CertificateServiceImpl.java:[line 265] \nValue java.util.Random."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            e.setId(\"conf\" + Math.abs(new Random().nextInt()));\n"}, "startLine": 265}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/certificate/CertificateServiceImpl.java"}, "contextRegion": {"snippet": {"text": "        if (e.getId() == null)\n            e.setId(\"conf\" + Math.abs(new Random().nextInt()));\n"}, "endLine": 265, "startLine": 264}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PREDICTABLE_RANDOM", "ruleIndex": 2}, {"message": {"markdown": "", "text": "The cipher does not provide data integrity \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 89]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                decryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n"}, "startLine": 89}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/credentialsstorage/AESCrypto.java"}, "contextRegion": {"snippet": {"text": "            for (int i = 0; i < KEY_LENGTHS.length; i++) {\n                decryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n"}, "endLine": 89, "startLine": 88}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "CRITICAL"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "CIPHER_INTEGRITY", "ruleIndex": 4}, {"message": {"markdown": "", "text": "The cipher does not provide data integrity \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 90]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                encryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n"}, "startLine": 90}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/credentialsstorage/AESCrypto.java"}, "contextRegion": {"snippet": {"text": "                decryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n                encryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n"}, "endLine": 90, "startLine": 89}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "CRITICAL"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "CIPHER_INTEGRITY", "ruleIndex": 4}, {"message": {"markdown": "", "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 89]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                decryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n"}, "startLine": 89}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/credentialsstorage/AESCrypto.java"}, "contextRegion": {"snippet": {"text": "            for (int i = 0; i < KEY_LENGTHS.length; i++) {\n                decryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n"}, "endLine": 89, "startLine": 88}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "CRITICAL"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "ECB_MODE", "ruleIndex": 5}, {"message": {"markdown": "", "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 90]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                encryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n"}, "startLine": 90}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/credentialsstorage/AESCrypto.java"}, "contextRegion": {"snippet": {"text": "                decryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n                encryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n"}, "endLine": 90, "startLine": 89}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "CRITICAL"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "ECB_MODE", "ruleIndex": 5}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HistoryImpl.java:[lines 50-371] \nIn class net.java.sip.communicator.impl.history.HistoryImpl \nIn method net.java.sip.communicator.impl.history.HistoryImpl.writeFile(String) \nAt HistoryImpl.java:[line 195] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/history/HistoryImpl.writeFile(Ljava/lang/String;)V parameter 0 \nAt HistoryWriterImpl.java:[line 131]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        File file = new File(this.directory, filename);\n"}, "startLine": 195}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/history/HistoryImpl.java"}, "contextRegion": {"snippet": {"text": "    {\n        File file = new File(this.directory, filename);\n"}, "endLine": 195, "startLine": 194}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HistoryImpl.java:[lines 50-371] \nIn class net.java.sip.communicator.impl.history.HistoryImpl \nIn method net.java.sip.communicator.impl.history.HistoryImpl.writeFile(String, Document) \nAt HistoryImpl.java:[line 217] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/history/HistoryImpl.writeFile(Ljava/lang/String;Lorg/w3c/dom/Document;)V parameter 1 \nAt HistoryImpl.java:[line 232] \nAt HistoryReaderImpl.java:[line 686] \nAt HistoryReaderImpl.java:[line 708] \nAt HistoryReaderImpl.java:[line 711] \nAt HistoryReaderImpl.java:[line 771] \nAt HistoryWriterImpl.java:[line 133] \nAt HistoryWriterImpl.java:[line 236] \nAt HistoryWriterImpl.java:[line 239] \nAt HistoryWriterImpl.java:[line 284] \nAt HistoryWriterImpl.java:[line 357] \nAt HistoryWriterImpl.java:[line 360] \nAt HistoryWriterImpl.java:[line 409] \nAt HistoryWriterImpl.java:[line 432] \nAt HistoryWriterImpl.java:[line 435] \nAt HistoryWriterImpl.java:[line 473]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        File file = new File(this.directory, filename);\n"}, "startLine": 217}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/history/HistoryImpl.java"}, "contextRegion": {"snippet": {"text": "    {\n        File file = new File(this.directory, filename);\n"}, "endLine": 217, "startLine": 216}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.createHistoryDirectories(HistoryID) \nAt HistoryServiceImpl.java:[line 248] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/history/HistoryID.getID()[Ljava/lang/String; \nUnknown source net/java/sip/communicator/service/history/HistoryID.id \nAt HistoryServiceImpl.java:[line 239] \nAt HistoryID.java:[line 87]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            dir = new File(dir, s);\n"}, "startLine": 248}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/history/HistoryServiceImpl.java"}, "contextRegion": {"snippet": {"text": "        for (String s : idComponents) {\n            dir = new File(dir, s);\n"}, "endLine": 248, "startLine": 247}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.getDirForHistory(HistoryID) \nAt HistoryServiceImpl.java:[line 465] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/history/HistoryID.getID()[Ljava/lang/String; \nUnknown source net/java/sip/communicator/service/history/HistoryID.id \nAt HistoryServiceImpl.java:[line 445] \nAt HistoryServiceImpl.java:[line 450] \nAt HistoryServiceImpl.java:[line 465] \nAt HistoryID.java:[line 87]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        return new File(histDir, dirName.toString());\n"}, "startLine": 465}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/history/HistoryServiceImpl.java"}, "contextRegion": {"snippet": {"text": "\n        return new File(histDir, dirName.toString());\n"}, "endLine": 465, "startLine": 464}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.getExistingHistories(String[]) \nAt HistoryServiceImpl.java:[line 505] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/history/HistoryServiceImpl.getExistingHistories([Ljava/lang/String;)Ljava/util/List; parameter 0 \nMethod usage not detected \nAt HistoryServiceImpl.java:[line 503] \nAt HistoryServiceImpl.java:[line 505]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        File srcFolder = new File(histDir, folderPath.toString());\n"}, "startLine": 505}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/history/HistoryServiceImpl.java"}, "contextRegion": {"snippet": {"text": "\n        File srcFolder = new File(histDir, folderPath.toString());\n"}, "endLine": 505, "startLine": 504}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.parse(ByteArrayInputStream) \nAt HistoryServiceImpl.java:[line 220] \nValue DocumentBuilder.parse(...)."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        return builder.parse(in);\n"}, "startLine": 220}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/history/HistoryServiceImpl.java"}, "contextRegion": {"snippet": {"text": "    {\n        return builder.parse(in);\n"}, "endLine": 220, "startLine": 219}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "XXE_DOCUMENT", "ruleIndex": 6}, {"message": {"markdown": "", "text": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.parse(File) \nAt HistoryServiceImpl.java:[line 203] \nValue DocumentBuilder.parse(...)."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        Document doc = builder.parse(fis);\n"}, "startLine": 203}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/history/HistoryServiceImpl.java"}, "contextRegion": {"snippet": {"text": "        FileInputStream fis = new FileInputStream(file);\n        Document doc = builder.parse(fis);\n"}, "endLine": 203, "startLine": 202}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "XXE_DOCUMENT", "ruleIndex": 6}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.createFileRecordFromProperties(Map, Object) \nAt MessageHistoryServiceImpl.java:[line 1196] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/util/Map.get(Ljava/lang/Object;)Ljava/lang/Object; \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.createFileRecordFromProperties(Ljava/util/Map;Ljava/lang/Object;)Lnet/java/sip/communicator/service/filehistory/FileRecord; parameter 1 \nAt MessageHistoryServiceImpl.java:[line 1062] \nAt MessageHistoryServiceImpl.java:[line 1071] \nAt MessageHistoryServiceImpl.java:[line 1103] \nAt MessageHistoryServiceImpl.java:[line 1122] \nAt MessageHistoryServiceImpl.java:[line 1125] \nAt MessageHistoryServiceImpl.java:[line 1193]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        return new FileRecord(uuid, entityJid, dir, date, new File(file), encType, status);\n"}, "startLine": 1196}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.java"}, "contextRegion": {"snippet": {"text": "        int status = Integer.parseInt(mProperties.get(ChatMessage.STATUS));\n        return new FileRecord(uuid, entityJid, dir, date, new File(file), encType, status);\n"}, "endLine": 1196, "startLine": 1195}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByKeyword(MetaContact, String, boolean) \nAt MessageHistoryServiceImpl.java:[line 1720] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByKeyword(Lnet/java/sip/communicator/service/contactlist/MetaContact;Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 434] \nAt MessageHistoryServiceImpl.java:[line 1712] \nAt MessageHistoryServiceImpl.java:[line 1720]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "startLine": 1720}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.java"}, "contextRegion": {"snippet": {"text": "\n            Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "endLine": 1720, "startLine": 1719}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "SQL_INJECTION_ANDROID", "ruleIndex": 7}, {"message": {"markdown": "", "text": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByKeyword(ChatRoom, String, boolean) \nAt MessageHistoryServiceImpl.java:[line 1919] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByKeyword(Lnet/java/sip/communicator/service/protocol/ChatRoom;Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 1899] \nAt MessageHistoryServiceImpl.java:[line 1917] \nAt MessageHistoryServiceImpl.java:[line 1919]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "startLine": 1919}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.java"}, "contextRegion": {"snippet": {"text": "\n        Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "endLine": 1919, "startLine": 1918}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "SQL_INJECTION_ANDROID", "ruleIndex": 7}, {"message": {"markdown": "", "text": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByKeywords(MetaContact, String[], boolean) \nAt MessageHistoryServiceImpl.java:[line 1755] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByKeywords(Lnet/java/sip/communicator/service/contactlist/MetaContact;[Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 447] \nAt MessageHistoryServiceImpl.java:[line 1745] \nAt MessageHistoryServiceImpl.java:[line 1747] \nAt MessageHistoryServiceImpl.java:[line 1755]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "startLine": 1755}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.java"}, "contextRegion": {"snippet": {"text": "\n            Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "endLine": 1755, "startLine": 1754}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "SQL_INJECTION_ANDROID", "ruleIndex": 7}, {"message": {"markdown": "", "text": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByKeywords(ChatRoom, String[], boolean) \nAt MessageHistoryServiceImpl.java:[line 1962] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByKeywords(Lnet/java/sip/communicator/service/protocol/ChatRoom;[Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 1938] \nAt MessageHistoryServiceImpl.java:[line 1958] \nAt MessageHistoryServiceImpl.java:[line 1960] \nAt MessageHistoryServiceImpl.java:[line 1962]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "startLine": 1962}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.java"}, "contextRegion": {"snippet": {"text": "\n        Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "endLine": 1962, "startLine": 1961}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "SQL_INJECTION_ANDROID", "ruleIndex": 7}, {"message": {"markdown": "", "text": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByPeriod(MetaContact, Date, Date, String[], boolean) \nAt MessageHistoryServiceImpl.java:[line 1688] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByPeriod(Lnet/java/sip/communicator/service/contactlist/MetaContact;Ljava/util/Date;Ljava/util/Date;[Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 421] \nAt MessageHistoryServiceImpl.java:[line 1678] \nAt MessageHistoryServiceImpl.java:[line 1680] \nAt MessageHistoryServiceImpl.java:[line 1688]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "startLine": 1688}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.java"}, "contextRegion": {"snippet": {"text": "\n            Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "endLine": 1688, "startLine": 1687}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "SQL_INJECTION_ANDROID", "ruleIndex": 7}, {"message": {"markdown": "", "text": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByPeriod(ChatRoom, Date, Date, String[], boolean) \nAt MessageHistoryServiceImpl.java:[line 1880] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByPeriod(Lnet/java/sip/communicator/service/protocol/ChatRoom;Ljava/util/Date;Ljava/util/Date;[Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 1852] \nAt MessageHistoryServiceImpl.java:[line 1876] \nAt MessageHistoryServiceImpl.java:[line 1878] \nAt MessageHistoryServiceImpl.java:[line 1880]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "startLine": 1880}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.java"}, "contextRegion": {"snippet": {"text": "\n        Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "endLine": 1880, "startLine": 1879}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "SQL_INJECTION_ANDROID", "ruleIndex": 7}, {"message": {"markdown": "", "text": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findRecentMessagesPerContact(int, String, String, boolean) \nAt MessageHistoryServiceImpl.java:[line 694] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nAt MessageHistoryServiceImpl.java:[line 686] \nAt MessageHistoryServiceImpl.java:[line 687] \nAt MessageHistoryServiceImpl.java:[line 688]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        Cursor cursor = mDB.query(ChatSession.TABLE_NAME, null, whereCondition, args, null,\n"}, "startLine": 694}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.java"}, "contextRegion": {"snippet": {"text": "\n        Cursor cursor = mDB.query(ChatSession.TABLE_NAME, null, whereCondition, args, null,\n"}, "endLine": 694, "startLine": 693}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "SQL_INJECTION_ANDROID", "ruleIndex": 7}, {"message": {"markdown": "", "text": "This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection \nAt CommandNotificationHandlerImpl.java:[lines 23-57] \nIn class net.java.sip.communicator.impl.notification.CommandNotificationHandlerImpl \nIn method net.java.sip.communicator.impl.notification.CommandNotificationHandlerImpl.execute(CommandNotificationAction, Map) \nAt CommandNotificationHandlerImpl.java:[line 53] \nSink method java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/notification/CommandNotificationAction.commandDescriptor \nUnknown source net/java/sip/communicator/service/notification/CommandNotificationAction.getDescriptor()Ljava/lang/String; \nUnknown source java/util/Map.entrySet()Ljava/util/Set; \nUnknown source net/java/sip/communicator/impl/notification/CommandNotificationHandlerImpl.execute(Lnet/java/sip/communicator/service/notification/CommandNotificationAction;Ljava/util/Map;)V parameter 0 \nUnknown source java/util/Map$Entry.getKey()Ljava/lang/Object; \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nUnknown source java/util/Map$Entry.getValue()Ljava/lang/Object; \nMethod usage not detected \nAt CommandNotificationHandlerImpl.java:[line 41] \nAt CommandNotificationHandlerImpl.java:[line 43] \nAt CommandNotificationHandlerImpl.java:[line 47] \nAt CommandNotificationHandlerImpl.java:[line 48] \nAt CommandNotificationAction.java:[line 36]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            Runtime.getRuntime().exec(actionDescriptor);\n"}, "startLine": 53}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/notification/CommandNotificationHandlerImpl.java"}, "contextRegion": {"snippet": {"text": "        try {\n            Runtime.getRuntime().exec(actionDescriptor);\n"}, "endLine": 53, "startLine": 52}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "COMMAND_INJECTION", "ruleIndex": 8}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HttpFileDownloadJabberImpl.java:[lines 38-206] \nIn class net.java.sip.communicator.impl.protocol.jabber.HttpFileDownloadJabberImpl \nIn method new net.java.sip.communicator.impl.protocol.jabber.HttpFileDownloadJabberImpl(Contact, String, String, int) \nAt HttpFileDownloadJabberImpl.java:[line 81] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/protocol/jabber/HttpFileDownloadJabberImpl.mFileName \nAt HttpFileDownloadJabberImpl.java:[line 81]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        mFile = (mFileName != null) ? new File(mFileName) : null;\n"}, "startLine": 81}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/HttpFileDownloadJabberImpl.java"}, "contextRegion": {"snippet": {"text": "        mFileName = uri.getLastPathSegment();\n        mFile = (mFileName != null) ? new File(mFileName) : null;\n"}, "endLine": 81, "startLine": 80}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HttpFileUploadJabberImpl.java:[lines 35-141] \nIn class net.java.sip.communicator.impl.protocol.jabber.HttpFileUploadJabberImpl \nIn method new net.java.sip.communicator.impl.protocol.jabber.HttpFileUploadJabberImpl(Object, String, String) \nAt HttpFileUploadJabberImpl.java:[line 51] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/protocol/jabber/HttpFileUploadJabberImpl.<init>(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V parameter 0 \nAt FileSendConversation.java:[line 215]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        mFile = new File(file);\n"}, "startLine": 51}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/HttpFileUploadJabberImpl.java"}, "contextRegion": {"snippet": {"text": "        mFileName = file;\n        mFile = new File(file);\n"}, "endLine": 51, "startLine": 50}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt OperationSetFileTransferJabberImpl.java:[lines 46-551] \nIn class net.java.sip.communicator.impl.protocol.jabber.OperationSetFileTransferJabberImpl \nIn method net.java.sip.communicator.impl.protocol.jabber.OperationSetFileTransferJabberImpl.sendFile(Contact, Contact, String, String, String) \nAt OperationSetFileTransferJabberImpl.java:[line 191] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/protocol/jabber/OperationSetFileTransferJabberImpl.sendFile(Lnet/java/sip/communicator/service/protocol/Contact;Lnet/java/sip/communicator/service/protocol/Contact;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lnet/java/sip/communicator/service/protocol/FileTransfer; parameter 1 \nMethod usage not detected."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        return this.sendFile(toContact, new File(localPath), uuid);\n"}, "startLine": 191}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/OperationSetFileTransferJabberImpl.java"}, "contextRegion": {"snippet": {"text": "    {\n        return this.sendFile(toContact, new File(localPath), uuid);\n"}, "endLine": 191, "startLine": 190}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt ProtocolIconJabberImpl.java:[lines 41-163] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolIconJabberImpl \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolIconJabberImpl.loadIcon(String) \nAt ProtocolIconJabberImpl.java:[line 128] \nSink method java/net/URL.openStream()Ljava/io/InputStream; \nSink parameter 0 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nUnknown source net/java/sip/communicator/impl/protocol/jabber/ProtocolIconJabberImpl.loadIcon(Ljava/lang/String;)[B parameter 0 \nAt ProtocolIconJabberImpl.java:[line 57] \nAt ProtocolIconJabberImpl.java:[line 58] \nAt ProtocolIconJabberImpl.java:[line 59] \nAt ProtocolIconJabberImpl.java:[line 114] \nAt ProtocolIconJabberImpl.java:[line 128] \nAt ProtocolProviderServiceJabberImpl.java:[line 2189] \nAt ProtocolProviderServiceJabberImpl.java:[line 2193] \nAt AccountID.java:[line 399] \nAt AccountID.java:[line 412] \nAt AccountID.java:[line 419] \nAt AccountID.java:[line 423] \nAt AccountID.java:[line 427] \nAt AccountID.java:[line 1465]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            is = new URL(imagePath).openStream();\n"}, "startLine": 128}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/ProtocolIconJabberImpl.java"}, "contextRegion": {"snippet": {"text": "            // try to load path it maybe valid url\n            is = new URL(imagePath).openStream();\n"}, "endLine": 128, "startLine": 127}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "URLCONNECTION_SSRF_FD", "ruleIndex": 9}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ProtocolProviderServiceJabberImpl.java:[lines 171-3126] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl.initAvatarStore() \nAt ProtocolProviderServiceJabberImpl.java:[line 1674] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/content/Context.getFilesDir()Ljava/io/File; \nAt ProtocolProviderServiceJabberImpl.java:[line 1674]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        File avatarStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir() + \"/avatarStore\");\n"}, "startLine": 1674}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/ProtocolProviderServiceJabberImpl.java"}, "contextRegion": {"snippet": {"text": "        /* Persistent Storage directory for Avatar. */\n        File avatarStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir() + \"/avatarStore\");\n"}, "endLine": 1674, "startLine": 1673}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ProtocolProviderServiceJabberImpl.java:[lines 171-3126] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl.initRosterStore() \nAt ProtocolProviderServiceJabberImpl.java:[line 1691] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/protocol/AccountID.userID \nUnknown source android/content/Context.getFilesDir()Ljava/io/File; \nUnknown source net/java/sip/communicator/service/protocol/jabber/JabberAccountID.getUserID()Ljava/lang/String; \nAt ProtocolProviderServiceJabberImpl.java:[line 1689] \nAt ProtocolProviderServiceJabberImpl.java:[line 1691] \nAt AccountID.java:[line 239]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        rosterStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir() + \"/rosterStore_\" + userID);\n"}, "startLine": 1691}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/ProtocolProviderServiceJabberImpl.java"}, "contextRegion": {"snippet": {"text": "\n        rosterStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir() + \"/rosterStore_\" + userID);\n"}, "endLine": 1691, "startLine": 1690}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt ProtocolProviderServiceJabberImpl.java:[lines 2696-2786] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl$HostTrustManager \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl$HostTrustManager.getAcceptedIssuers() \nAt ProtocolProviderServiceJabberImpl.java:[line 2707]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            return new X509Certificate[0];\n"}, "startLine": 2707}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/ProtocolProviderServiceJabberImpl.java"}, "contextRegion": {"snippet": {"text": "        {\n            return new X509Certificate[0];\n"}, "endLine": 2707, "startLine": 2706}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "WEAK_TRUST_MANAGER", "ruleIndex": 10}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ScServiceDiscoveryManager.java:[lines 48-653] \nIn class net.java.sip.communicator.impl.protocol.jabber.ScServiceDiscoveryManager \nIn method net.java.sip.communicator.impl.protocol.jabber.ScServiceDiscoveryManager.initDiscoInfoPersistentStore() \nAt ScServiceDiscoveryManager.java:[line 628] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/protocol/AccountID.userID \nUnknown source android/content/Context.getFilesDir()Ljava/io/File; \nUnknown source net/java/sip/communicator/service/protocol/AccountID.getUserID()Ljava/lang/String; \nAt ScServiceDiscoveryManager.java:[line 627] \nAt ScServiceDiscoveryManager.java:[line 628] \nAt AccountID.java:[line 239]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        discoInfoStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir() + \"/discoInfoStore_\" + userID);\n"}, "startLine": 628}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/ScServiceDiscoveryManager.java"}, "contextRegion": {"snippet": {"text": "        String userID = parentProvider.getAccountID().getUserID();\n        discoInfoStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir() + \"/discoInfoStore_\" + userID);\n"}, "endLine": 628, "startLine": 627}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ScServiceDiscoveryManager.java:[lines 48-653] \nIn class net.java.sip.communicator.impl.protocol.jabber.ScServiceDiscoveryManager \nIn method net.java.sip.communicator.impl.protocol.jabber.ScServiceDiscoveryManager.initEntityPersistentStore() \nAt ScServiceDiscoveryManager.java:[line 600] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/content/Context.getFilesDir()Ljava/io/File; \nAt ScServiceDiscoveryManager.java:[line 600]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        entityStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir() + \"/entityStore\");\n"}, "startLine": 600}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/ScServiceDiscoveryManager.java"}, "contextRegion": {"snippet": {"text": "    {\n        entityStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir() + \"/entityStore\");\n"}, "endLine": 600, "startLine": 599}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ThumbnailedFile.java:[lines 43-88] \nIn class net.java.sip.communicator.impl.protocol.jabber.ThumbnailedFile \nIn method new net.java.sip.communicator.impl.protocol.jabber.ThumbnailedFile(File, int, int, String, byte[]) \nAt ThumbnailedFile.java:[line 43] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getPath()Ljava/lang/String;."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        super(file.getPath());\n"}, "startLine": 43}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/ThumbnailedFile.java"}, "contextRegion": {"snippet": {"text": "    {\n        super(file.getPath());\n"}, "endLine": 43, "startLine": 42}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This random generator (java.util.Random) is predictable \nAt DHCPProvisioningDiscover.java:[lines 60-234] \nIn class net.java.sip.communicator.impl.provdisc.dhcp.DHCPProvisioningDiscover \nIn method new net.java.sip.communicator.impl.provdisc.dhcp.DHCPProvisioningDiscover(int, byte) \nAt DHCPProvisioningDiscover.java:[line 81] \nValue java.util.Random."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        xid = new Random().nextInt();\n"}, "startLine": 81}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/provdisc/dhcp/DHCPProvisioningDiscover.java"}, "contextRegion": {"snippet": {"text": "        socket = new DatagramSocket(port);\n        xid = new Random().nextInt();\n"}, "endLine": 81, "startLine": 80}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PREDICTABLE_RANDOM", "ruleIndex": 2}, {"message": {"markdown": "", "text": "This random generator (java.util.Random) is predictable \nAt DHCPTransaction.java:[lines 30-117] \nIn class net.java.sip.communicator.impl.provdisc.dhcp.DHCPTransaction \nIn method net.java.sip.communicator.impl.provdisc.dhcp.DHCPTransaction.schedule() \nAt DHCPTransaction.java:[line 87] \nValue java.util.Random."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        int rand = new Random().nextInt(2) - 1;\n"}, "startLine": 87}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/provdisc/dhcp/DHCPTransaction.java"}, "contextRegion": {"snippet": {"text": "        /* choose a random between [-1, 1] */\n        int rand = new Random().nextInt(2) - 1;\n"}, "endLine": 87, "startLine": 86}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PREDICTABLE_RANDOM", "ruleIndex": 2}, {"message": {"markdown": "", "text": "This random generator (java.util.Random) is predictable \nAt DHCPTransaction.java:[lines 124-146] \nIn class net.java.sip.communicator.impl.provdisc.dhcp.DHCPTransaction$RetransmissionHandler \nIn method net.java.sip.communicator.impl.provdisc.dhcp.DHCPTransaction$RetransmissionHandler.run() \nAt DHCPTransaction.java:[line 133] \nValue java.util.Random."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            int rand = new Random().nextInt(2) - 1;\n"}, "startLine": 133}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/provdisc/dhcp/DHCPTransaction.java"}, "contextRegion": {"snippet": {"text": "        {\n            int rand = new Random().nextInt(2) - 1;\n"}, "endLine": 133, "startLine": 132}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PREDICTABLE_RANDOM", "ruleIndex": 2}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt SkinJarBuilder.java:[lines 28-446] \nIn class net.java.sip.communicator.impl.resources.util.SkinJarBuilder \nIn method net.java.sip.communicator.impl.resources.util.SkinJarBuilder.unzipIntoTmp(File) \nAt SkinJarBuilder.java:[line 158] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/util/zip/ZipEntry.getName()Ljava/lang/String;."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                    File file = new File(dest, entry.getName());\n"}, "startLine": 158}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/resources/util/SkinJarBuilder.java"}, "contextRegion": {"snippet": {"text": "                    ZipEntry entry = e.nextElement();\n                    File file = new File(dest, entry.getName());\n"}, "endLine": 158, "startLine": 157}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt SkinJarBuilder.java:[lines 28-446] \nIn class net.java.sip.communicator.impl.resources.util.SkinJarBuilder \nIn method net.java.sip.communicator.impl.resources.util.SkinJarBuilder.zipDir(String, ZipOutputStream) \nAt SkinJarBuilder.java:[line 237] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/resources/util/SkinJarBuilder.zipDir(Ljava/lang/String;Ljava/util/zip/ZipOutputStream;)V parameter 1 \nAt SkinJarBuilder.java:[line 220]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        File directory = new File(dir2zip);\n"}, "startLine": 237}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/impl/resources/util/SkinJarBuilder.java"}, "contextRegion": {"snippet": {"text": "    {\n        File directory = new File(dir2zip);\n"}, "endLine": 237, "startLine": 236}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt JabberStatusEnum.java:[lines 121-299] \nIn class net.java.sip.communicator.service.protocol.jabberconstants.JabberStatusEnum \nIn method net.java.sip.communicator.service.protocol.jabberconstants.JabberStatusEnum.getResourceAsStream(String, Class) \nAt JabberStatusEnum.java:[line 290] \nSink method java/net/URL.openStream()Ljava/io/InputStream; \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/protocol/jabberconstants/JabberStatusEnum.getResourceAsStream(Ljava/lang/String;Ljava/lang/Class;)Ljava/io/InputStream; parameter 1 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nMethod usage not detected \nAt JabberStatusEnum.java:[line 156] \nAt JabberStatusEnum.java:[line 157] \nAt JabberStatusEnum.java:[line 159] \nAt JabberStatusEnum.java:[line 160] \nAt JabberStatusEnum.java:[line 162] \nAt JabberStatusEnum.java:[line 163] \nAt JabberStatusEnum.java:[line 165] \nAt JabberStatusEnum.java:[line 166] \nAt JabberStatusEnum.java:[line 168] \nAt JabberStatusEnum.java:[line 169] \nAt JabberStatusEnum.java:[line 171] \nAt JabberStatusEnum.java:[line 172] \nAt JabberStatusEnum.java:[line 174] \nAt JabberStatusEnum.java:[line 175] \nAt JabberStatusEnum.java:[line 177] \nAt JabberStatusEnum.java:[line 178] \nAt JabberStatusEnum.java:[line 180] \nAt JabberStatusEnum.java:[line 181] \nAt JabberStatusEnum.java:[line 250] \nAt JabberStatusEnum.java:[line 262] \nAt JabberStatusEnum.java:[line 290]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                return new URL(name).openStream();\n"}, "startLine": 290}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/service/protocol/jabberconstants/JabberStatusEnum.java"}, "contextRegion": {"snippet": {"text": "            try {\n                return new URL(name).openStream();\n"}, "endLine": 290, "startLine": 289}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "URLCONNECTION_SSRF_FD", "ruleIndex": 9}, {"message": {"markdown": "", "text": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks \nAt ConferenceInfoDocument.java:[lines 32-612] \nIn class net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument \nIn method new net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument(String) \nAt ConferenceInfoDocument.java:[line 206] \nValue DocumentBuilder.parse(...)."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                    .parse(new ByteArrayInputStream(bytes));\n"}, "startLine": 206}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/service/protocol/media/ConferenceInfoDocument.java"}, "contextRegion": {"snippet": {"text": "            document = XMLUtils.newDocumentBuilderFactory().newDocumentBuilder()\n                    .parse(new ByteArrayInputStream(bytes));\n"}, "endLine": 206, "startLine": 205}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "XXE_DOCUMENT", "ruleIndex": 6}, {"message": {"markdown": "", "text": "The use of TransformerFactory.newInstance(...) (TransformerFactory) is vulnerable to XML External Entity attacks \nAt ConferenceInfoDocument.java:[lines 32-612] \nIn class net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument \nIn method net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument.toXml(String) \nAt ConferenceInfoDocument.java:[line 450] \nValue TransformerFactory.newInstance(...)."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            Transformer transformer = TransformerFactory.newInstance().newTransformer();\n"}, "startLine": 450}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/service/protocol/media/ConferenceInfoDocument.java"}, "contextRegion": {"snippet": {"text": "        try {\n            Transformer transformer = TransformerFactory.newInstance().newTransformer();\n"}, "endLine": 450, "startLine": 449}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "XXE_DTD_TRANSFORM_FACTORY", "ruleIndex": 11}, {"message": {"markdown": "", "text": "The use of TransformerFactory.newInstance(...) is vulnerable to XSLT External Entity attacks \nAt ConferenceInfoDocument.java:[lines 32-612] \nIn class net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument \nIn method net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument.toXml(String) \nAt ConferenceInfoDocument.java:[line 450] \nValue TransformerFactory.newInstance(...)."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            Transformer transformer = TransformerFactory.newInstance().newTransformer();\n"}, "startLine": 450}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/net/java/sip/communicator/service/protocol/media/ConferenceInfoDocument.java"}, "contextRegion": {"snippet": {"text": "        try {\n            Transformer transformer = TransformerFactory.newInstance().newTransformer();\n"}, "endLine": 450, "startLine": 449}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "XXE_XSLT_TRANSFORM_FACTORY", "ruleIndex": 12}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ChatActivity.java:[lines 82-1154] \nIn class org.atalk.android.gui.chat.ChatActivity \nIn method org.atalk.android.gui.chat.ChatActivity.onActivityResult(int, int, Intent) \nAt ChatActivity.java:[line 930] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/FilePathHelper.getPath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nAt ChatActivity.java:[line 929]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                                openDownloadable(new File(filePath));\n"}, "startLine": 930}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/android/gui/chat/ChatActivity.java"}, "contextRegion": {"snippet": {"text": "                            if (StringUtils.isNotEmpty(filePath))\n                                openDownloadable(new File(filePath));\n"}, "endLine": 930, "startLine": 929}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt ChatActivity.java:[lines 1073-1142] \nIn class org.atalk.android.gui.chat.ChatActivity$MediaShareAsynTask \nIn method org.atalk.android.gui.chat.ChatActivity$MediaShareAsynTask.getUrlInfo(String) \nAt ChatActivity.java:[line 1125] \nSink method java/net/URL.openConnection()Ljava/net/URLConnection; \nSink parameter 0 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nUnknown source org/atalk/android/gui/chat/ChatActivity$MediaShareAsynTask.getUrlInfo(Ljava/lang/String;)Ljava/lang/String; parameter 0 \nAt ChatActivity.java:[line 1082] \nAt ChatActivity.java:[line 1123] \nAt ChatActivity.java:[line 1124]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                HttpURLConnection httpConnection = (HttpURLConnection) mUrl.openConnection();\n"}, "startLine": 1125}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/android/gui/chat/ChatActivity.java"}, "contextRegion": {"snippet": {"text": "                URL mUrl = new URL(urlString);\n                HttpURLConnection httpConnection = (HttpURLConnection) mUrl.openConnection();\n"}, "endLine": 1125, "startLine": 1124}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "URLCONNECTION_SSRF_FD", "ruleIndex": 9}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ChatFragment.java:[lines 567-858] \nIn class org.atalk.android.gui.chat.ChatFragment$2 \nIn method org.atalk.android.gui.chat.ChatFragment$2.onActionItemClicked(ActionMode, MenuItem) \nAt ChatFragment.java:[line 797] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/ChatMessage.getMessage()Ljava/lang/String;."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                                                file = new File(chatMsg.getMessage());\n"}, "startLine": 797}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/android/gui/chat/ChatFragment.java"}, "contextRegion": {"snippet": {"text": "                                            else if ((file = chatListAdapter.getFileName(cPos)) == null) {\n                                                file = new File(chatMsg.getMessage());\n"}, "endLine": 797, "startLine": 796}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt CaptchaDialog.java:[lines 91-340] \nIn class org.atalk.android.gui.chat.conference.CaptchaDialog \nIn method org.atalk.android.gui.chat.conference.CaptchaDialog.initCaptchaData() \nAt CaptchaDialog.java:[line 301] \nSink method java/net/URL.openConnection()Ljava/net/URLConnection; \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/xdata/FormField.getFirstValue()Ljava/lang/String; \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nAt CaptchaDialog.java:[line 300]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                        bmCaptcha = BitmapFactory.decodeStream(uri.openConnection().getInputStream());\n"}, "startLine": 301}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/android/gui/chat/conference/CaptchaDialog.java"}, "contextRegion": {"snippet": {"text": "                        URL uri = new URL(urlString);\n                        bmCaptcha = BitmapFactory.decodeStream(uri.openConnection().getInputStream());\n"}, "endLine": 301, "startLine": 300}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "URLCONNECTION_SSRF_FD", "ruleIndex": 9}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileSendConversation.java:[lines 51-227] \nIn class org.atalk.android.gui.chat.filetransfer.FileSendConversation \nIn method org.atalk.android.gui.chat.filetransfer.FileSendConversation.newInstance(ChatFragment, String, String, String, boolean) \nAt FileSendConversation.java:[line 69] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/filetransfer/FileSendConversation.newInstance(Lorg/atalk/android/gui/chat/ChatFragment;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lorg/atalk/android/gui/chat/filetransfer/FileSendConversation; parameter 1 \nAt ChatFragment.java:[line 1387]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        fragmentSFC.mXferFile = new File(fileName);\n"}, "startLine": 69}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/android/gui/chat/filetransfer/FileSendConversation.java"}, "contextRegion": {"snippet": {"text": "        fragmentSFC.mSendTo = sendTo;\n        fragmentSFC.mXferFile = new File(fileName);\n"}, "endLine": 69, "startLine": 68}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileTransferConversation.java:[lines 62-1015] \nIn class org.atalk.android.gui.chat.filetransfer.FileTransferConversation \nIn method org.atalk.android.gui.chat.filetransfer.FileTransferConversation.setTransferFilePath(String, String) \nAt FileTransferConversation.java:[line 954] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/filetransfer/FileTransferConversation.setTransferFilePath(Ljava/lang/String;Ljava/lang/String;)V parameter 1 \nMethod usage not detected."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        mXferFile = new File(downloadDir, fileName);\n"}, "startLine": 954}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/android/gui/chat/filetransfer/FileTransferConversation.java"}, "contextRegion": {"snippet": {"text": "        File downloadDir = FileBackend.getaTalkStore(downloadPath, true);\n        mXferFile = new File(downloadDir, fileName);\n"}, "endLine": 954, "startLine": 953}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileTransferConversation.java:[lines 62-1015] \nIn class org.atalk.android.gui.chat.filetransfer.FileTransferConversation \nIn method org.atalk.android.gui.chat.filetransfer.FileTransferConversation.setTransferFilePath(String, String) \nAt FileTransferConversation.java:[line 965] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/filetransfer/FileTransferConversation.setTransferFilePath(Ljava/lang/String;Ljava/lang/String;)V parameter 1 \nMethod usage not detected \nAt FileTransferConversation.java:[line 963] \nAt FileTransferConversation.java:[line 964]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            mXferFile = new File(downloadDir, newFileName);\n"}, "startLine": 965}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/android/gui/chat/filetransfer/FileTransferConversation.java"}, "contextRegion": {"snippet": {"text": "                    + ++index + fileName.substring(filenameLength);\n            mXferFile = new File(downloadDir, newFileName);\n"}, "endLine": 965, "startLine": 964}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt MediaPreviewAdapter.java:[lines 39-118] \nIn class org.atalk.android.gui.share.MediaPreviewAdapter \nIn method org.atalk.android.gui.share.MediaPreviewAdapter.onBindViewHolder(MediaPreviewAdapter$MediaPreviewViewHolder, int) \nAt MediaPreviewAdapter.java:[line 72] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/FilePathHelper.getPath(Landroid/content/Context;Lorg/atalk/android/gui/share/Attachment;)Ljava/lang/String;."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        final File file = new File(FilePathHelper.getPath(chatActivity, attachment));\n"}, "startLine": 72}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/android/gui/share/MediaPreviewAdapter.java"}, "contextRegion": {"snippet": {"text": "        final Attachment attachment = mediaPreviews.get(position);\n        final File file = new File(FilePathHelper.getPath(chatActivity, attachment));\n"}, "endLine": 72, "startLine": 71}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt EntityListHelper.java:[lines 328-372] \nIn class org.atalk.android.gui.util.EntityListHelper$doEraseAllEntityHistory \nIn method org.atalk.android.gui.util.EntityListHelper$doEraseAllEntityHistory.doInBackground(Void[]) \nAt EntityListHelper.java:[line 352] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/msghistory/MessageHistoryService.getLocallyStoredFilePath()Ljava/util/List; \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nAt EntityListHelper.java:[line 351]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                    File file = new File(msgFile);\n"}, "startLine": 352}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/android/gui/util/EntityListHelper.java"}, "contextRegion": {"snippet": {"text": "                for (String msgFile : msgFiles) {\n                    File file = new File(msgFile);\n"}, "endLine": 352, "startLine": 351}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt EntityListHelper.java:[lines 222-290] \nIn class org.atalk.android.gui.util.EntityListHelper$doEraseEntityChatHistory \nIn method org.atalk.android.gui.util.EntityListHelper$doEraseEntityChatHistory.doInBackground(Object[]) \nAt EntityListHelper.java:[line 254] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nUnknown source net/java/sip/communicator/service/msghistory/MessageHistoryService.getLocallyStoredFilePath(Ljava/lang/Object;)Ljava/util/List; \nAt EntityListHelper.java:[line 253]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                            msgFiles.add(new File(filePath));\n"}, "startLine": 254}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/android/gui/util/EntityListHelper.java"}, "contextRegion": {"snippet": {"text": "                        for (String filePath : filePathDel) {\n                            msgFiles.add(new File(filePath));\n"}, "endLine": 254, "startLine": 253}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This random generator (java.util.Random) is predictable \nAt MediaStreamImpl.java:[lines 65-3448] \nIn class org.atalk.impl.neomedia.MediaStreamImpl \nIn method new org.atalk.impl.neomedia.MediaStreamImpl(StreamConnector, MediaDevice, SrtpControl) \nAt MediaStreamImpl.java:[line 147] \nValue java.util.Random."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "    private long localSourceID = (new Random().nextInt()) & 0x00000000FFFFFFFFL;\n"}, "startLine": 147}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/impl/neomedia/MediaStreamImpl.java"}, "contextRegion": {"snippet": {"text": "     */\n    private long localSourceID = (new Random().nextInt()) & 0x00000000FFFFFFFFL;\n"}, "endLine": 147, "startLine": 146}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PREDICTABLE_RANDOM", "ruleIndex": 2}, {"message": {"markdown": "", "text": "This random generator (java.util.Random) is predictable \nAt RtxTransformer.java:[lines 46-517] \nIn class org.atalk.impl.neomedia.transform.RtxTransformer \nIn method org.atalk.impl.neomedia.transform.RtxTransformer.getNextRtxSequenceNumber(long) \nAt RtxTransformer.java:[line 158] \nValue java.util.Random."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                seq = new Random().nextInt(0xffff);\n"}, "startLine": 158}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/impl/neomedia/transform/RtxTransformer.java"}, "contextRegion": {"snippet": {"text": "            if (seq == null)\n                seq = new Random().nextInt(0xffff);\n"}, "endLine": 158, "startLine": 157}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PREDICTABLE_RANDOM", "ruleIndex": 2}, {"message": {"markdown": "", "text": "Unsafe comparison of hash that are susceptible to timing attack \nAt ZRTPTransformEngine.java:[lines 137-1433] \nIn class org.atalk.impl.neomedia.transform.zrtp.ZRTPTransformEngine \nIn method org.atalk.impl.neomedia.transform.zrtp.ZRTPTransformEngine.sendInfo(ZrtpCodes$MessageSeverity, EnumSet) \nAt ZRTPTransformEngine.java:[line 941] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source org/atalk/impl/neomedia/transform/zrtp/ZRTPTransformEngine.receivedSignaledZRTPVersion \nAt ZRTPTransformEngine.java:[line 941]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            if (!peerHelloVersion.equals(receivedSignaledZRTPVersion)\n"}, "startLine": 941}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/impl/neomedia/transform/zrtp/ZRTPTransformEngine.java"}, "contextRegion": {"snippet": {"text": "\n            if (!peerHelloVersion.equals(receivedSignaledZRTPVersion)\n"}, "endLine": 941, "startLine": 940}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "UNSAFE_HASH_EQUALS", "ruleIndex": 3}, {"message": {"markdown": "", "text": "Unsafe comparison of hash that are susceptible to timing attack \nAt ZRTPTransformEngine.java:[lines 137-1433] \nIn class org.atalk.impl.neomedia.transform.zrtp.ZRTPTransformEngine \nIn method org.atalk.impl.neomedia.transform.zrtp.ZRTPTransformEngine.sendInfo(ZrtpCodes$MessageSeverity, EnumSet) \nAt ZRTPTransformEngine.java:[line 942] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source org/atalk/impl/neomedia/transform/zrtp/ZRTPTransformEngine.receivedSignaledZRTPHashValue \nAt ZRTPTransformEngine.java:[line 941]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                    || !peerHelloHash.equals(receivedSignaledZRTPHashValue)) {\n"}, "startLine": 942}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/impl/neomedia/transform/zrtp/ZRTPTransformEngine.java"}, "contextRegion": {"snippet": {"text": "            if (!peerHelloVersion.equals(receivedSignaledZRTPVersion)\n                    || !peerHelloHash.equals(receivedSignaledZRTPHashValue)) {\n"}, "endLine": 942, "startLine": 941}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "UNSAFE_HASH_EQUALS", "ruleIndex": 3}, {"message": {"markdown": "", "text": "Files could be saved to external storage \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.getaTalkStore(String, boolean) \nAt FileBackend.java:[line 236]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        File atalkDLDir = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS) + filePath);\n"}, "startLine": 236}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/persistance/FileBackend.java"}, "contextRegion": {"snippet": {"text": "        // File atalkDLDir = new File(Environment.getExternalStorageDirectory(), filePath);\n        File atalkDLDir = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS) + filePath);\n"}, "endLine": 236, "startLine": 235}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "ANDROID_EXTERNAL_FILE_ACCESS", "ruleIndex": 13}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.copyRecursive(File, File, String) \nAt FileBackend.java:[line 118] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/FileBackend.copyRecursive(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)V parameter 0 \nMethod usage not detected."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            dstPath = new File(targetPath, subFolder);\n"}, "startLine": 118}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/persistance/FileBackend.java"}, "contextRegion": {"snippet": {"text": "        if (subFolder != null)\n            dstPath = new File(targetPath, subFolder);\n"}, "endLine": 118, "startLine": 117}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.copyRecursive(File, File, String) \nAt FileBackend.java:[line 139] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getName()Ljava/lang/String;."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                copyRecursive(new File(srcPath, fileName), dstPath, fileName);\n"}, "startLine": 139}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/persistance/FileBackend.java"}, "contextRegion": {"snippet": {"text": "                String fileName = file.getName();\n                copyRecursive(new File(srcPath, fileName), dstPath, fileName);\n"}, "endLine": 139, "startLine": 138}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.getOutputMediaFile(int) \nAt FileBackend.java:[line 255] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/text/SimpleDateFormat.format(Ljava/util/Date;)Ljava/lang/String; \nAt FileBackend.java:[line 255]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            mediaFile = new File(aTalkMediaDir, \"IMG_\" + timeStamp + \".jpg\");\n"}, "startLine": 255}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/persistance/FileBackend.java"}, "contextRegion": {"snippet": {"text": "        if (type == MEDIA_TYPE_IMAGE) {\n            mediaFile = new File(aTalkMediaDir, \"IMG_\" + timeStamp + \".jpg\");\n"}, "endLine": 255, "startLine": 254}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.getOutputMediaFile(int) \nAt FileBackend.java:[line 258] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/text/SimpleDateFormat.format(Ljava/util/Date;)Ljava/lang/String; \nAt FileBackend.java:[line 258]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            mediaFile = new File(aTalkMediaDir, \"VID_\" + timeStamp + \".mp4\");\n"}, "startLine": 258}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/persistance/FileBackend.java"}, "contextRegion": {"snippet": {"text": "        else if (type == MEDIA_TYPE_VIDEO) {\n            mediaFile = new File(aTalkMediaDir, \"VID_\" + timeStamp + \".mp4\");\n"}, "endLine": 258, "startLine": 257}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.getaTalkStore(String, boolean) \nAt FileBackend.java:[line 236] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/FileBackend.getaTalkStore(Ljava/lang/String;Z)Ljava/io/File; parameter 1 \nUnknown source org/atalk/persistance/FileBackend.FP_aTALK \nUnknown source android/os/Environment.getExternalStoragePublicDirectory(Ljava/lang/String;)Ljava/io/File; \nAt FileTransferConversation.java:[line 946] \nAt FileTransferConversation.java:[line 948] \nAt FileTransferConversation.java:[line 949] \nAt FileTransferConversation.java:[line 950] \nAt FileTransferConversation.java:[line 953] \nAt FileBackend.java:[line 229] \nAt FileBackend.java:[line 230] \nAt FileBackend.java:[line 231] \nAt FileBackend.java:[line 236] \nAt FileBackend.java:[line 249]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        File atalkDLDir = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS) + filePath);\n"}, "startLine": 236}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/atalk/persistance/FileBackend.java"}, "contextRegion": {"snippet": {"text": "        // File atalkDLDir = new File(Environment.getExternalStorageDirectory(), filePath);\n        File atalkDLDir = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS) + filePath);\n"}, "endLine": 236, "startLine": 235}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt AvatarManager.java:[lines 54-548] \nIn class org.jivesoftware.smackx.avatar.AvatarManager \nIn method org.jivesoftware.smackx.avatar.AvatarManager.getAvatarImageByJid(BareJid) \nAt AvatarManager.java:[line 258] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarImageByJid(Lorg/jxmpp/jid/BareJid;)[B parameter 0 \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nTainted source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        LOGGER.log(Level.FINE, \"Fetching avatar from local storage for: (\" + jid + \") => \" + avatarId);\n"}, "startLine": 258}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/AvatarManager.java"}, "contextRegion": {"snippet": {"text": "        String avatarId = getAvatarHashByJid(jid);\n        LOGGER.log(Level.FINE, \"Fetching avatar from local storage for: (\" + jid + \") => \" + avatarId);\n"}, "endLine": 258, "startLine": 257}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "CRLF_INJECTION_LOGS", "ruleIndex": 14}, {"message": {"markdown": "", "text": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt AvatarManager.java:[lines 54-548] \nIn class org.jivesoftware.smackx.avatar.AvatarManager \nIn method org.jivesoftware.smackx.avatar.AvatarManager.purgeAvatarImageByJid(BareJid) \nAt AvatarManager.java:[line 333] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.purgeAvatarImageByJid(Lorg/jxmpp/jid/BareJid;)V parameter 0 \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nTainted source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 332] \nAt AvatarManager.java:[line 333] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        LOGGER.log(Level.INFO, \"Purge avatar from store for: (\" + jid + \") => \" + avatarId);\n"}, "startLine": 333}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/AvatarManager.java"}, "contextRegion": {"snippet": {"text": "        String avatarId = getAvatarHashByJid(jid);\n        LOGGER.log(Level.INFO, \"Purge avatar from store for: (\" + jid + \") => \" + avatarId);\n"}, "endLine": 333, "startLine": 332}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "CRLF_INJECTION_LOGS", "ruleIndex": 14}, {"message": {"markdown": "", "text": "Unsafe comparison of hash that are susceptible to timing attack \nAt AvatarManager.java:[lines 54-548] \nIn class org.jivesoftware.smackx.avatar.AvatarManager \nIn method org.jivesoftware.smackx.avatar.AvatarManager.isHashMultipleOwner(BareJid, String) \nAt AvatarManager.java:[line 386] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.isHashMultipleOwner(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)Z parameter 0 \nMethod usage with tainted arguments detected \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt UserAvatarManager.java:[line 317] \nAt UserAvatarManager.java:[line 334] \nAt UserAvatarManager.java:[line 335] \nAt VCardAvatarManager.java:[line 185] \nAt VCardAvatarManager.java:[line 213] \nAt VCardAvatarManager.java:[line 214]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                if (!TextUtils.isEmpty(imageHash) && imageHash.equals(avatarHash)) {\n"}, "startLine": 386}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/AvatarManager.java"}, "contextRegion": {"snippet": {"text": "                String imageHash = getAvatarHashByJid(contactJid);\n                if (!TextUtils.isEmpty(imageHash) && imageHash.equals(avatarHash)) {\n"}, "endLine": 386, "startLine": 385}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "CRITICAL"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "UNSAFE_HASH_EQUALS", "ruleIndex": 3}, {"message": {"markdown": "", "text": "This API SHA1 (SHA-1) is not a recommended cryptographic hash function \nAt AvatarManager.java:[lines 54-548] \nIn class org.jivesoftware.smackx.avatar.AvatarManager \nIn method org.jivesoftware.smackx.avatar.AvatarManager.getAvatarHash(byte[]) \nAt AvatarManager.java:[line 501] \nValue SHA1."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                MessageDigest messageDigest = MessageDigest.getInstance(\"SHA1\");\n"}, "startLine": 501}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/AvatarManager.java"}, "contextRegion": {"snippet": {"text": "            if (imageData != null) {\n                MessageDigest messageDigest = MessageDigest.getInstance(\"SHA1\");\n"}, "endLine": 501, "startLine": 500}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "WEAK_MESSAGE_DIGEST_SHA1", "ruleIndex": 1}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AvatarCacheFile.java:[lines 33-170] \nIn class org.jivesoftware.smackx.avatar.cache.AvatarCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.AvatarCacheFile.getAvatarForHash(String) \nAt AvatarCacheFile.java:[line 119] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.getAvatarForHash(Ljava/lang/String;)[B parameter 0 \nMethod usage with tainted arguments detected \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1649] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1702] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1706] \nAt AvatarManager.java:[line 238] \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 260] \nAt AvatarManager.java:[line 278] \nAt AvatarManager.java:[line 279] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 316] \nAt AvatarManager.java:[line 317] \nAt JidToHashCacheFile.java:[line 96]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "\t\tFile file = new File(mStoreDir, id);\n"}, "startLine": 119}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.java"}, "contextRegion": {"snippet": {"text": "\t\tbyte[] avatarImage = null;\n\t\tFile file = new File(mStoreDir, id);\n"}, "endLine": 119, "startLine": 118}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "CRITICAL"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AvatarCacheFile.java:[lines 33-170] \nIn class org.jivesoftware.smackx.avatar.cache.AvatarCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.AvatarCacheFile.purgeItemFor(String) \nAt AvatarCacheFile.java:[line 158] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.purgeItemFor(Ljava/lang/String;)Z parameter 0 \nMethod usage with tainted arguments detected \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 332] \nAt AvatarManager.java:[line 335] \nAt AvatarManager.java:[line 337] \nAt AvatarManager.java:[line 445] \nAt AvatarManager.java:[line 448] \nAt AvatarManager.java:[line 451] \nAt AvatarManager.java:[line 462] \nAt AvatarManager.java:[line 463] \nAt AvatarManager.java:[line 464] \nAt JidToHashCacheFile.java:[line 96] \nAt UserAvatarManager.java:[line 317] \nAt UserAvatarManager.java:[line 334] \nAt UserAvatarManager.java:[line 336] \nAt VCardAvatarManager.java:[line 185] \nAt VCardAvatarManager.java:[line 213] \nAt VCardAvatarManager.java:[line 215]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "\t\tFile file = new File(mStoreDir, photoHash);\n"}, "startLine": 158}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.java"}, "contextRegion": {"snippet": {"text": "\t{\n\t\tFile file = new File(mStoreDir, photoHash);\n"}, "endLine": 158, "startLine": 157}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "CRITICAL"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AvatarCacheFile.java:[lines 33-170] \nIn class org.jivesoftware.smackx.avatar.cache.AvatarCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.AvatarCacheFile.addAvatarByHash(String, InputStream) \nAt AvatarCacheFile.java:[line 88] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.addAvatarByHash(Ljava/lang/String;Ljava/io/InputStream;)V parameter 1 \nMethod usage not detected."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "\t\tFile file = new File(mStoreDir, id);\n"}, "startLine": 88}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.java"}, "contextRegion": {"snippet": {"text": "\t{\n\t\tFile file = new File(mStoreDir, id);\n"}, "endLine": 88, "startLine": 87}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AvatarCacheFile.java:[lines 33-170] \nIn class org.jivesoftware.smackx.avatar.cache.AvatarCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.AvatarCacheFile.addAvatarByHash(String, byte[]) \nAt AvatarCacheFile.java:[line 61] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.addAvatarByHash(Ljava/lang/String;[B)V parameter 1 \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1705] \nAt AvatarManager.java:[line 196] \nAt AvatarManager.java:[line 199] \nAt AvatarManager.java:[line 216] \nAt AvatarManager.java:[line 217] \nAt AvatarManager.java:[line 218] \nAt AvatarManager.java:[line 278] \nAt AvatarManager.java:[line 280] \nAt AvatarManager.java:[line 281] \nAt AvatarManager.java:[line 531] \nAt AvatarManager.java:[line 539] \nAt UserAvatarManager.java:[line 160] \nAt UserAvatarManager.java:[line 164] \nAt UserAvatarManager.java:[line 324] \nAt UserAvatarManager.java:[line 390]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "\t\tFile file = new File(mStoreDir, id);\n"}, "startLine": 61}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.java"}, "contextRegion": {"snippet": {"text": "\t{\n\t\tFile file = new File(mStoreDir, id);\n"}, "endLine": 61, "startLine": 60}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AvatarCacheFile.java:[lines 33-170] \nIn class org.jivesoftware.smackx.avatar.cache.AvatarCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.AvatarCacheFile.contains(String) \nAt AvatarCacheFile.java:[line 151] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.contains(Ljava/lang/String;)Z parameter 0 \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1705] \nAt AvatarManager.java:[line 196] \nAt AvatarManager.java:[line 216] \nAt AvatarManager.java:[line 217] \nAt AvatarManager.java:[line 218] \nAt AvatarManager.java:[line 278] \nAt AvatarManager.java:[line 280] \nAt AvatarManager.java:[line 281] \nAt AvatarManager.java:[line 363] \nAt AvatarManager.java:[line 531] \nAt AvatarManager.java:[line 537] \nAt AvatarManager.java:[line 539] \nAt UserAvatarManager.java:[line 160] \nAt UserAvatarManager.java:[line 164] \nAt UserAvatarManager.java:[line 315] \nAt UserAvatarManager.java:[line 324] \nAt UserAvatarManager.java:[line 390] \nAt VCardAvatarManager.java:[line 281] \nAt VCardAvatarManager.java:[line 284] \nAt VCardTempXUpdate.java:[line 109]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "\t\tFile file = new File(mStoreDir, photoHash);\n"}, "startLine": 151}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.java"}, "contextRegion": {"snippet": {"text": "\t{\n\t\tFile file = new File(mStoreDir, photoHash);\n"}, "endLine": 151, "startLine": 150}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages \nAt JidToHashCacheFile.java:[lines 35-143] \nIn class org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile.getHashForJid(BareJid) \nAt JidToHashCacheFile.java:[line 99] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V \nSink parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nMethod usage with tainted arguments detected \nAt MetaContactImpl.java:[line 634] \nAt GlobalDisplayDetailsImpl.java:[line 135] \nAt GlobalDisplayDetailsImpl.java:[line 136] \nAt InfoRetriever.java:[line 62] \nAt InfoRetriever.java:[line 83] \nAt InfoRetriever.java:[line 119] \nAt InfoRetriever.java:[line 147] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1651] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1687] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1705] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 110] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 129] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 140] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 269] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 307] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 393] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 59] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 87] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 111] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 152] \nAt ServerStoredContactListJabberImpl.java:[line 1544] \nAt ServerStoredContactListJabberImpl.java:[line 1550] \nAt AccountID.java:[line 245] \nAt AvatarManager.java:[line 196] \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 332] \nAt AvatarManager.java:[line 359] \nAt AvatarManager.java:[line 385] \nAt AvatarManager.java:[line 437] \nAt AvatarManager.java:[line 438] \nAt AvatarManager.java:[line 445] \nAt AvatarManager.java:[line 462] \nAt AvatarManager.java:[line 537] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 99] \nAt JidToHashCacheFile.java:[line 131] \nAt UserAvatarManager.java:[line 198] \nAt UserAvatarManager.java:[line 315] \nAt UserAvatarManager.java:[line 317] \nAt UserAvatarManager.java:[line 390] \nAt VCardAvatarManager.java:[line 175] \nAt VCardAvatarManager.java:[line 181] \nAt VCardAvatarManager.java:[line 185] \nAt VCardAvatarManager.java:[line 270] \nAt VCardAvatarManager.java:[line 284] \nAt VCardAvatarManager.java:[line 290] \nAt VCardAvatarManager.java:[line 142]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "\t\t\tLOGGER.log(Level.WARNING, \"Could not restore photoHash from file: \" + id, e);\n"}, "startLine": 99}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.java"}, "contextRegion": {"snippet": {"text": "\t\tcatch (IOException e) {\n\t\t\tLOGGER.log(Level.WARNING, \"Could not restore photoHash from file: \" + id, e);\n"}, "endLine": 99, "startLine": 98}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "CRLF_INJECTION_LOGS", "ruleIndex": 14}, {"message": {"markdown": "", "text": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages \nAt JidToHashCacheFile.java:[lines 35-143] \nIn class org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile.getHashForJid(BareJid) \nAt JidToHashCacheFile.java:[line 106] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V \nSink parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nMethod usage with tainted arguments detected \nAt MetaContactImpl.java:[line 634] \nAt GlobalDisplayDetailsImpl.java:[line 135] \nAt GlobalDisplayDetailsImpl.java:[line 136] \nAt InfoRetriever.java:[line 62] \nAt InfoRetriever.java:[line 83] \nAt InfoRetriever.java:[line 119] \nAt InfoRetriever.java:[line 147] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1651] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1687] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1705] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 110] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 129] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 140] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 269] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 307] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 393] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 59] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 87] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 111] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 152] \nAt ServerStoredContactListJabberImpl.java:[line 1544] \nAt ServerStoredContactListJabberImpl.java:[line 1550] \nAt AccountID.java:[line 245] \nAt AvatarManager.java:[line 196] \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 332] \nAt AvatarManager.java:[line 359] \nAt AvatarManager.java:[line 385] \nAt AvatarManager.java:[line 437] \nAt AvatarManager.java:[line 438] \nAt AvatarManager.java:[line 445] \nAt AvatarManager.java:[line 462] \nAt AvatarManager.java:[line 537] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 106] \nAt JidToHashCacheFile.java:[line 131] \nAt UserAvatarManager.java:[line 198] \nAt UserAvatarManager.java:[line 315] \nAt UserAvatarManager.java:[line 317] \nAt UserAvatarManager.java:[line 390] \nAt VCardAvatarManager.java:[line 175] \nAt VCardAvatarManager.java:[line 181] \nAt VCardAvatarManager.java:[line 185] \nAt VCardAvatarManager.java:[line 270] \nAt VCardAvatarManager.java:[line 284] \nAt VCardAvatarManager.java:[line 290] \nAt VCardAvatarManager.java:[line 142]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "\t\t\t\tLOGGER.log(Level.WARNING, \"Error while closing stream: \" + id, e);\n"}, "startLine": 106}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.java"}, "contextRegion": {"snippet": {"text": "\t\t\tcatch (IOException e) {\n\t\t\t\tLOGGER.log(Level.WARNING, \"Error while closing stream: \" + id, e);\n"}, "endLine": 106, "startLine": 105}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "CRLF_INJECTION_LOGS", "ruleIndex": 14}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt JidToHashCacheFile.java:[lines 35-143] \nIn class org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile.getFileFor(BareJid) \nAt JidToHashCacheFile.java:[line 132] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smack/util/stringencoder/StringEncoder.encode(Ljava/lang/Object;)Ljava/lang/String;."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "\t\treturn new File(mStoreDir, filename);\n"}, "startLine": 132}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.java"}, "contextRegion": {"snippet": {"text": "\t\tString filename = filenameEncoder.encode(id.toString());\n\t\treturn new File(mStoreDir, filename);\n"}, "endLine": 132, "startLine": 131}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt UserAvatarManager.java:[lines 57-429] \nIn class org.jivesoftware.smackx.avatar.useravatar.UserAvatarManager \nIn method org.jivesoftware.smackx.avatar.useravatar.UserAvatarManager.downloadAvatar(EntityBareJid, String, AvatarMetadata$Info) \nAt UserAvatarManager.java:[line 338] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.isHashMultipleOwner(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)Z parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.purgeItemFor(Ljava/lang/String;)Z parameter 0 \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.isAvatarNew(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)Z parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.addJidToAvatarHashIndex(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.addJidToAvatarHashIndex(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 1 \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nTainted source org/jivesoftware/smackx/avatar/useravatar/UserAvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/useravatar/UserAvatarManager.downloadAvatar(Lorg/jxmpp/jid/EntityBareJid;Ljava/lang/String;Lorg/jivesoftware/smackx/avatar/useravatar/packet/AvatarMetadata$Info;)Z parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/useravatar/UserAvatarManager.downloadAvatar(Lorg/jxmpp/jid/EntityBareJid;Ljava/lang/String;Lorg/jivesoftware/smackx/avatar/useravatar/packet/AvatarMetadata$Info;)Z parameter 2 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.addHashByJid(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 1 \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 316] \nAt AvatarManager.java:[line 317] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131] \nAt UserAvatarManager.java:[line 317] \nAt UserAvatarManager.java:[line 318] \nAt UserAvatarManager.java:[line 334] \nAt UserAvatarManager.java:[line 338]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                LOGGER.log(Level.INFO, \"Avatar with new avatarHash received (old => new) \"\n"}, "startLine": 338}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/useravatar/UserAvatarManager.java"}, "contextRegion": {"snippet": {"text": "\n                LOGGER.log(Level.INFO, \"Avatar with new avatarHash received (old => new) \"\n"}, "endLine": 338, "startLine": 337}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "CRLF_INJECTION_LOGS", "ruleIndex": 14}, {"message": {"markdown": "", "text": "Unsafe comparison of hash that are susceptible to timing attack \nAt UserAvatarManager.java:[lines 57-429] \nIn class org.jivesoftware.smackx.avatar.useravatar.UserAvatarManager \nIn method org.jivesoftware.smackx.avatar.useravatar.UserAvatarManager.downloadAvatar(EntityBareJid, String, AvatarMetadata$Info) \nAt UserAvatarManager.java:[line 334] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.addJidToAvatarHashIndex(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/useravatar/UserAvatarManager.downloadAvatar(Lorg/jxmpp/jid/EntityBareJid;Ljava/lang/String;Lorg/jivesoftware/smackx/avatar/useravatar/packet/AvatarMetadata$Info;)Z parameter 1 \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1705] \nAt AvatarManager.java:[line 316] \nAt AvatarManager.java:[line 317] \nAt UserAvatarManager.java:[line 390]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                if (!TextUtils.isEmpty(currentAvatarHash) && !currentAvatarHash.equals(avatarId)\n"}, "startLine": 334}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/useravatar/UserAvatarManager.java"}, "contextRegion": {"snippet": {"text": "                 */\n                if (!TextUtils.isEmpty(currentAvatarHash) && !currentAvatarHash.equals(avatarId)\n"}, "endLine": 334, "startLine": 333}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "UNSAFE_HASH_EQUALS", "ruleIndex": 3}, {"message": {"markdown": "", "text": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt VCardAvatarManager.java:[lines 49-363] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager \nIn method org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager.downloadVCard(BareJid) \nAt VCardAvatarManager.java:[line 181] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.mAccount \nUnknown source java/lang/Exception.getMessage()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.downloadVCard(Lorg/jxmpp/jid/BareJid;)Lorg/jivesoftware/smackx/vcardtemp/packet/VCard; parameter 0 \nMethod usage with tainted arguments detected \nAt InfoRetriever.java:[line 62] \nAt InfoRetriever.java:[line 83] \nAt InfoRetriever.java:[line 119] \nAt InfoRetriever.java:[line 147] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1651] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 110] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 129] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 140] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 269] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 307] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 393] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 59] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 87] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 111] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 152] \nAt ServerStoredContactListJabberImpl.java:[line 1550] \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131] \nAt VCardAvatarManager.java:[line 175] \nAt VCardAvatarManager.java:[line 181] \nAt VCardAvatarManager.java:[line 290]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            LOGGER.log(Level.WARNING, \"Error while downloading VCard for: '\" + userId + \"'. \" + e.getMessage());\n"}, "startLine": 181}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.java"}, "contextRegion": {"snippet": {"text": "                | SmackException.NotConnectedException | InterruptedException e) {\n            LOGGER.log(Level.WARNING, \"Error while downloading VCard for: '\" + userId + \"'. \" + e.getMessage());\n"}, "endLine": 181, "startLine": 180}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "CRLF_INJECTION_LOGS", "ruleIndex": 14}, {"message": {"markdown": "", "text": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt VCardAvatarManager.java:[lines 49-363] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager \nIn method org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager.downloadVCard(BareJid) \nAt VCardAvatarManager.java:[line 218] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.mAccount \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.addAvatarImage([B)Ljava/lang/String; \nUnknown source java/lang/Exception.getMessage()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.addJidToAvatarHashIndex(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.addJidToAvatarHashIndex(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nUnknown source org/jivesoftware/smack/util/StringUtils.encodeHex([B)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.downloadVCard(Lorg/jxmpp/jid/BareJid;)Lorg/jivesoftware/smackx/vcardtemp/packet/VCard; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHash([B)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.setAvatarHash(Ljava/lang/String;)Z parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.addHashByJid(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 1 \nMethod usage with tainted arguments detected \nAt InfoRetriever.java:[line 62] \nAt InfoRetriever.java:[line 83] \nAt InfoRetriever.java:[line 119] \nAt InfoRetriever.java:[line 147] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1651] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 110] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 129] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 140] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 269] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 307] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 393] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 59] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 87] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 111] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 152] \nAt ServerStoredContactListJabberImpl.java:[line 1550] \nAt AvatarManager.java:[line 216] \nAt AvatarManager.java:[line 217] \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 316] \nAt AvatarManager.java:[line 317] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131] \nAt VCardAvatarManager.java:[line 175] \nAt VCardAvatarManager.java:[line 181] \nAt VCardAvatarManager.java:[line 192] \nAt VCardAvatarManager.java:[line 199] \nAt VCardAvatarManager.java:[line 218] \nAt VCardAvatarManager.java:[line 290]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            LOGGER.log(Level.INFO, \"Downloaded vcard info for: \" + userId + \"; Hash = \" + avatarHash);\n"}, "startLine": 218}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.java"}, "contextRegion": {"snippet": {"text": "            }\n            LOGGER.log(Level.INFO, \"Downloaded vcard info for: \" + userId + \"; Hash = \" + avatarHash);\n"}, "endLine": 218, "startLine": 217}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "CRLF_INJECTION_LOGS", "ruleIndex": 14}, {"message": {"markdown": "", "text": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt VCardAvatarManager.java:[lines 49-363] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager \nIn method org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager.processContactPhotoPresence(Stanza) \nAt VCardAvatarManager.java:[line 293] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smack/packet/Stanza.getFrom()Lorg/jxmpp/jid/Jid; \nTainted source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.mAvatarHash \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.getAvatarHash()Ljava/lang/String; \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt VCardAvatarManager.java:[line 270] \nAt VCardAvatarManager.java:[line 281] \nAt VCardAvatarManager.java:[line 293] \nAt VCardTempXUpdate.java:[line 109]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                        LOGGER.log(Level.INFO, \"Presence with new avatarHash received (old => new) from: \"\n"}, "startLine": 293}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.java"}, "contextRegion": {"snippet": {"text": "                    if ((mVCard != null) && (mVCard.getAvatar() != null)) {\n                        LOGGER.log(Level.INFO, \"Presence with new avatarHash received (old => new) from: \"\n"}, "endLine": 293, "startLine": 292}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "CRLF_INJECTION_LOGS", "ruleIndex": 14}, {"message": {"markdown": "", "text": "Unsafe comparison of hash that are susceptible to timing attack \nAt VCardAvatarManager.java:[lines 49-363] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager \nIn method org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager.downloadVCard(BareJid) \nAt VCardAvatarManager.java:[line 193] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nTainted source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt VCardAvatarManager.java:[line 185]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                if (!avatarHash.equals(currentAvatarHash)) {\n"}, "startLine": 193}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.java"}, "contextRegion": {"snippet": {"text": "                avatarHash = addAvatarImage(avatarImage);\n                if (!avatarHash.equals(currentAvatarHash)) {\n"}, "endLine": 193, "startLine": 192}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "UNSAFE_HASH_EQUALS", "ruleIndex": 3}, {"message": {"markdown": "", "text": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt VCardTempXUpdate.java:[lines 42-158] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.packet.VCardTempXUpdate \nIn method org.jivesoftware.smackx.avatar.vcardavatar.packet.VCardTempXUpdate.setAvatarHash(String) \nAt VCardTempXUpdate.java:[line 94] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.mAvatarHash \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.setAvatarHash(Ljava/lang/String;)Z parameter 0 \nMethod usage with tainted arguments detected \nAt AvatarManager.java:[line 216] \nAt AvatarManager.java:[line 217] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 531] \nAt AvatarManager.java:[line 535] \nAt JidToHashCacheFile.java:[line 96] \nAt VCardAvatarManager.java:[line 192] \nAt VCardAvatarManager.java:[line 200] \nAt VCardAvatarManager.java:[line 142] \nAt VCardAvatarManager.java:[line 144] \nAt VCardTempXUpdate.java:[line 94]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            LOGGER.log(Level.INFO, \"Account avatar hash updated with (old => new): \" + \"\\n\"\n"}, "startLine": 94}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.java"}, "contextRegion": {"snippet": {"text": "        if ((avatarHash != null) && !avatarHash.equals(mAvatarHash)) {\n            LOGGER.log(Level.INFO, \"Account avatar hash updated with (old => new): \" + \"\\n\"\n"}, "endLine": 94, "startLine": 93}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "CRLF_INJECTION_LOGS", "ruleIndex": 14}, {"message": {"markdown": "", "text": "Unsafe comparison of hash that are susceptible to timing attack \nAt VCardTempXUpdate.java:[lines 42-158] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.packet.VCardTempXUpdate \nIn method org.jivesoftware.smackx.avatar.vcardavatar.packet.VCardTempXUpdate.setAvatarHash(String) \nAt VCardTempXUpdate.java:[line 93] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.mAvatarHash \nAt VCardTempXUpdate.java:[line 93]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        if ((avatarHash != null) && !avatarHash.equals(mAvatarHash)) {\n"}, "startLine": 93}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.java"}, "contextRegion": {"snippet": {"text": "        boolean isNewHash = false;\n        if ((avatarHash != null) && !avatarHash.equals(mAvatarHash)) {\n"}, "endLine": 93, "startLine": 92}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "UNSAFE_HASH_EQUALS", "ruleIndex": 3}, {"message": {"markdown": "", "text": "This random generator (java.lang.Math.random()) is predictable \nAt RelayChannel.java:[lines 11-234] \nIn class org.xmpp.jnodes.RelayChannel \nIn method org.xmpp.jnodes.RelayChannel.createLocalRelayChannel(String, int, int) \nAt RelayChannel.java:[line 38] \nValue java.lang.Math.random()."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                int a = Math.round((int) (Math.random() * range)) + minPort;\n"}, "startLine": 38}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant12/aTalk/src/main/java/org/xmpp/jnodes/RelayChannel.java"}, "contextRegion": {"snippet": {"text": "            try {\n                int a = Math.round((int) (Math.random() * range)) + minPort;\n"}, "endLine": 38, "startLine": 37}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PREDICTABLE_RANDOM", "ruleIndex": 2}], "automationDetails": {"description": {"text": "Static Analysis Security Test results using @ShiftLeft/sast-scan"}, "guid": "97daaeba-9f7d-4c22-97c3-77f87966521d"}, "versionControlProvenance": [{"branch": "", "repositoryUri": "", "revisionId": ""}]}

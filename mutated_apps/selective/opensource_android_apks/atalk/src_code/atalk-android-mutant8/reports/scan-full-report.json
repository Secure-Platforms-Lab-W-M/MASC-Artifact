{"tool": {"driver": {"name": "Java Source Analyzer", "version": "1.0.0-scan", "fullName": "Java Source Analyzer"}}, "conversion": {"tool": {"driver": {"name": "@ShiftLeft/sast-scan"}}, "invocation": {"arguments": ["pmd", "-no-cache", "--failOnViolation", "false", "-language", "java", "-d", "/media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8", "-r", "/media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/reports/source-java-report.csv", "-f", "csv", "-R", "/tmp/.mount_scane5XfUc/usr/src/tools_config/rules-pmd.xml"], "executionSuccessful": true, "commandLine": "pmd -no-cache --failOnViolation false -language java -d /media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8 -r /media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/reports/source-java-report.csv -f csv -R /tmp/.mount_scane5XfUc/usr/src/tools_config/rules-pmd.xml", "endTimeUtc": "2020-12-02T12:41:18Z", "workingDirectory": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8"}}}, "invocations": [{"executionSuccessful": true, "endTimeUtc": "2020-12-02T12:41:18Z", "workingDirectory": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8"}}], "properties": {"metrics": {"total": 0, "critical": 0, "high": 0, "medium": 0, "low": 0}}, "results": [], "automationDetails": {"description": {"text": "Static Analysis Security Test results using @ShiftLeft/sast-scan"}, "guid": "d2b40503-761c-4fd8-a2da-41729c35a52b"}, "versionControlProvenance": [{"branch": "", "repositoryUri": "", "revisionId": ""}]}
{"tool": {"driver": {"name": "Class File Analyzer", "rules": [{"id": "PATH_TRAVERSAL_IN", "help": {"text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt OtrKeyManagerImpl.java:[lines 30-107] \nIn class net.java.otr4j.OtrKeyManagerImpl$DefaultPropertiesStore \nIn method net.java.otr4j.OtrKeyManagerImpl$DefaultPropertiesStore.getConfigurationFile() \nAt OtrKeyManagerImpl.java:[line 50] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/otr4j/OtrKeyManagerImpl$DefaultPropertiesStore.filepath \nAt OtrKeyManagerImpl.java:[line 50].", "markdown": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt OtrKeyManagerImpl.java:[lines 30-107] \nIn class net.java.otr4j.OtrKeyManagerImpl$DefaultPropertiesStore \nIn method net.java.otr4j.OtrKeyManagerImpl$DefaultPropertiesStore.getConfigurationFile() \nAt OtrKeyManagerImpl.java:[line 50] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/otr4j/OtrKeyManagerImpl$DefaultPropertiesStore.filepath \nAt OtrKeyManagerImpl.java:[line 50]."}, "name": "PATH TRAVERSAL IN", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input ."}, "helpUri": "https://slscan.io?q=PATH_TRAVERSAL_IN", "shortDescription": {"text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt OtrKeyManagerImpl.java:[lines 30-107] \nIn class net.java.otr4j.OtrKeyManagerImpl$DefaultPropertiesStore \nIn method net.java.otr4j.OtrKeyManagerImpl$DefaultPropertiesStore.getConfigurationFile() \nAt OtrKeyManagerImpl.java:[line 50] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/otr4j/OtrKeyManagerImpl$DefaultPropertiesStore.filepath \nAt OtrKeyManagerImpl.java:[line 50]."}}, {"id": "WEAK_MESSAGE_DIGEST_SHA1", "help": {"text": "This API SHA-1 (SHA-1) is not a recommended cryptographic hash function \nAt OtrCryptoEngineImpl.java:[lines 31-342] \nIn class net.java.otr4j.crypto.OtrCryptoEngineImpl \nIn method net.java.otr4j.crypto.OtrCryptoEngineImpl.sha1Hash(byte[]) \nAt OtrCryptoEngineImpl.java:[line 153] \nValue SHA-1.", "markdown": "This API SHA-1 (SHA-1) is not a recommended cryptographic hash function \nAt OtrCryptoEngineImpl.java:[lines 31-342] \nIn class net.java.otr4j.crypto.OtrCryptoEngineImpl \nIn method net.java.otr4j.crypto.OtrCryptoEngineImpl.sha1Hash(byte[]) \nAt OtrCryptoEngineImpl.java:[line 153] \nValue SHA-1."}, "name": "WEAK MESSAGE DIGEST SHA1", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "This API SHA-1 (SHA-1) is not a recommended cryptographic hash function ."}, "helpUri": "https://slscan.io?q=WEAK_MESSAGE_DIGEST_SHA1", "shortDescription": {"text": "This API SHA-1 (SHA-1) is not a recommended cryptographic hash function \nAt OtrCryptoEngineImpl.java:[lines 31-342] \nIn class net.java.otr4j.crypto.OtrCryptoEngineImpl \nIn method net.java.otr4j.crypto.OtrCryptoEngineImpl.sha1Hash(byte[]) \nAt OtrCryptoEngineImpl.java:[line 153] \nValue SHA-1."}}, {"id": "PREDICTABLE_RANDOM", "help": {"text": "This random generator (java.util.Random) is predictable \nAt AuthContextImpl.java:[lines 32-792] \nIn class net.java.otr4j.session.AuthContextImpl \nIn method net.java.otr4j.session.AuthContextImpl.getR() \nAt AuthContextImpl.java:[line 218] \nValue java.util.Random.", "markdown": "This random generator (java.util.Random) is predictable \nAt AuthContextImpl.java:[lines 32-792] \nIn class net.java.otr4j.session.AuthContextImpl \nIn method net.java.otr4j.session.AuthContextImpl.getR() \nAt AuthContextImpl.java:[line 218] \nValue java.util.Random."}, "name": "Predictable Random", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "This random generator (java.util.Random) is predictable ."}, "helpUri": "https://slscan.io?q=PREDICTABLE_RANDOM", "shortDescription": {"text": "This random generator (java.util.Random) is predictable \nAt AuthContextImpl.java:[lines 32-792] \nIn class net.java.otr4j.session.AuthContextImpl \nIn method net.java.otr4j.session.AuthContextImpl.getR() \nAt AuthContextImpl.java:[line 218] \nValue java.util.Random."}}, {"id": "UNSAFE_HASH_EQUALS", "help": {"text": "Unsafe comparison of hash that are susceptible to timing attack \nAt AuthContextImpl.java:[lines 32-792] \nIn class net.java.otr4j.session.AuthContextImpl \nIn method net.java.otr4j.session.AuthContextImpl.handleRevealSignatureMessage(RevealSignatureMessage) \nAt AuthContextImpl.java:[line 579] \nSink method java/util/Arrays.equals([B[B)Z \nSink parameter 0 \nUnknown source net/java/otr4j/session/AuthContextImpl.remoteDHPublicKeyHash \nUnknown source net/java/otr4j/session/AuthContextImpl.getRemoteDHPublicKeyHash()[B \nAt AuthContextImpl.java:[line 261] \nAt AuthContextImpl.java:[line 579].", "markdown": "Unsafe comparison of hash that are susceptible to timing attack \nAt AuthContextImpl.java:[lines 32-792] \nIn class net.java.otr4j.session.AuthContextImpl \nIn method net.java.otr4j.session.AuthContextImpl.handleRevealSignatureMessage(RevealSignatureMessage) \nAt AuthContextImpl.java:[line 579] \nSink method java/util/Arrays.equals([B[B)Z \nSink parameter 0 \nUnknown source net/java/otr4j/session/AuthContextImpl.remoteDHPublicKeyHash \nUnknown source net/java/otr4j/session/AuthContextImpl.getRemoteDHPublicKeyHash()[B \nAt AuthContextImpl.java:[line 261] \nAt AuthContextImpl.java:[line 579]."}, "name": "UNSAFE HASH EQUALS", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "Unsafe comparison of hash that are susceptible to timing attack ."}, "helpUri": "https://slscan.io?q=UNSAFE_HASH_EQUALS", "shortDescription": {"text": "Unsafe comparison of hash that are susceptible to timing attack \nAt AuthContextImpl.java:[lines 32-792] \nIn class net.java.otr4j.session.AuthContextImpl \nIn method net.java.otr4j.session.AuthContextImpl.handleRevealSignatureMessage(RevealSignatureMessage) \nAt AuthContextImpl.java:[line 579] \nSink method java/util/Arrays.equals([B[B)Z \nSink parameter 0 \nUnknown source net/java/otr4j/session/AuthContextImpl.remoteDHPublicKeyHash \nUnknown source net/java/otr4j/session/AuthContextImpl.getRemoteDHPublicKeyHash()[B \nAt AuthContextImpl.java:[line 261] \nAt AuthContextImpl.java:[line 579]."}}, {"id": "CIPHER_INTEGRITY", "help": {"text": "The cipher does not provide data integrity \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 89].", "markdown": "The cipher does not provide data integrity \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 89]."}, "name": "Cipher Integrity", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "The cipher does not provide data integrity ."}, "helpUri": "https://slscan.io?q=CIPHER_INTEGRITY", "shortDescription": {"text": "The cipher does not provide data integrity \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 89]."}}, {"id": "ECB_MODE", "help": {"text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 89].", "markdown": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 89]."}, "name": "Ecb Mode", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data ."}, "helpUri": "https://slscan.io?q=ECB_MODE", "shortDescription": {"text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 89]."}}, {"id": "XXE_DOCUMENT", "help": {"text": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.parse(ByteArrayInputStream) \nAt HistoryServiceImpl.java:[line 220] \nValue DocumentBuilder.parse(...).", "markdown": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.parse(ByteArrayInputStream) \nAt HistoryServiceImpl.java:[line 220] \nValue DocumentBuilder.parse(...)."}, "name": "Xxe Document", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks ."}, "helpUri": "https://slscan.io?q=XXE_DOCUMENT", "shortDescription": {"text": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.parse(ByteArrayInputStream) \nAt HistoryServiceImpl.java:[line 220] \nValue DocumentBuilder.parse(...)."}}, {"id": "SQL_INJECTION_ANDROID", "help": {"text": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByKeyword(MetaContact, String, boolean) \nAt MessageHistoryServiceImpl.java:[line 1720] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByKeyword(Lnet/java/sip/communicator/service/contactlist/MetaContact;Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 434] \nAt MessageHistoryServiceImpl.java:[line 1712] \nAt MessageHistoryServiceImpl.java:[line 1720].", "markdown": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByKeyword(MetaContact, String, boolean) \nAt MessageHistoryServiceImpl.java:[line 1720] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByKeyword(Lnet/java/sip/communicator/service/contactlist/MetaContact;Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 434] \nAt MessageHistoryServiceImpl.java:[line 1712] \nAt MessageHistoryServiceImpl.java:[line 1720]."}, "name": "SQL INJECTION ANDROID", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) ."}, "helpUri": "https://slscan.io?q=SQL_INJECTION_ANDROID", "shortDescription": {"text": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByKeyword(MetaContact, String, boolean) \nAt MessageHistoryServiceImpl.java:[line 1720] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByKeyword(Lnet/java/sip/communicator/service/contactlist/MetaContact;Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 434] \nAt MessageHistoryServiceImpl.java:[line 1712] \nAt MessageHistoryServiceImpl.java:[line 1720]."}}, {"id": "COMMAND_INJECTION", "help": {"text": "This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection \nAt CommandNotificationHandlerImpl.java:[lines 23-57] \nIn class net.java.sip.communicator.impl.notification.CommandNotificationHandlerImpl \nIn method net.java.sip.communicator.impl.notification.CommandNotificationHandlerImpl.execute(CommandNotificationAction, Map) \nAt CommandNotificationHandlerImpl.java:[line 53] \nSink method java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/notification/CommandNotificationAction.getDescriptor()Ljava/lang/String; \nUnknown source java/util/Map.entrySet()Ljava/util/Set; \nUnknown source net/java/sip/communicator/impl/notification/CommandNotificationHandlerImpl.execute(Lnet/java/sip/communicator/service/notification/CommandNotificationAction;Ljava/util/Map;)V parameter 0 \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nUnknown source net/java/sip/communicator/service/notification/CommandNotificationAction.commandDescriptor \nUnknown source java/util/Map$Entry.getKey()Ljava/lang/Object; \nUnknown source java/util/Map$Entry.getValue()Ljava/lang/Object; \nMethod usage not detected \nAt CommandNotificationHandlerImpl.java:[line 41] \nAt CommandNotificationHandlerImpl.java:[line 43] \nAt CommandNotificationHandlerImpl.java:[line 47] \nAt CommandNotificationHandlerImpl.java:[line 48] \nAt CommandNotificationAction.java:[line 36].", "markdown": "This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection \nAt CommandNotificationHandlerImpl.java:[lines 23-57] \nIn class net.java.sip.communicator.impl.notification.CommandNotificationHandlerImpl \nIn method net.java.sip.communicator.impl.notification.CommandNotificationHandlerImpl.execute(CommandNotificationAction, Map) \nAt CommandNotificationHandlerImpl.java:[line 53] \nSink method java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/notification/CommandNotificationAction.getDescriptor()Ljava/lang/String; \nUnknown source java/util/Map.entrySet()Ljava/util/Set; \nUnknown source net/java/sip/communicator/impl/notification/CommandNotificationHandlerImpl.execute(Lnet/java/sip/communicator/service/notification/CommandNotificationAction;Ljava/util/Map;)V parameter 0 \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nUnknown source net/java/sip/communicator/service/notification/CommandNotificationAction.commandDescriptor \nUnknown source java/util/Map$Entry.getKey()Ljava/lang/Object; \nUnknown source java/util/Map$Entry.getValue()Ljava/lang/Object; \nMethod usage not detected \nAt CommandNotificationHandlerImpl.java:[line 41] \nAt CommandNotificationHandlerImpl.java:[line 43] \nAt CommandNotificationHandlerImpl.java:[line 47] \nAt CommandNotificationHandlerImpl.java:[line 48] \nAt CommandNotificationAction.java:[line 36]."}, "name": "Command Injection", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection ."}, "helpUri": "https://slscan.io?q=COMMAND_INJECTION", "shortDescription": {"text": "This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection \nAt CommandNotificationHandlerImpl.java:[lines 23-57] \nIn class net.java.sip.communicator.impl.notification.CommandNotificationHandlerImpl \nIn method net.java.sip.communicator.impl.notification.CommandNotificationHandlerImpl.execute(CommandNotificationAction, Map) \nAt CommandNotificationHandlerImpl.java:[line 53] \nSink method java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/notification/CommandNotificationAction.getDescriptor()Ljava/lang/String; \nUnknown source java/util/Map.entrySet()Ljava/util/Set; \nUnknown source net/java/sip/communicator/impl/notification/CommandNotificationHandlerImpl.execute(Lnet/java/sip/communicator/service/notification/CommandNotificationAction;Ljava/util/Map;)V parameter 0 \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nUnknown source net/java/sip/communicator/service/notification/CommandNotificationAction.commandDescriptor \nUnknown source java/util/Map$Entry.getKey()Ljava/lang/Object; \nUnknown source java/util/Map$Entry.getValue()Ljava/lang/Object; \nMethod usage not detected \nAt CommandNotificationHandlerImpl.java:[line 41] \nAt CommandNotificationHandlerImpl.java:[line 43] \nAt CommandNotificationHandlerImpl.java:[line 47] \nAt CommandNotificationHandlerImpl.java:[line 48] \nAt CommandNotificationAction.java:[line 36]."}}, {"id": "URLCONNECTION_SSRF_FD", "help": {"text": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt ProtocolIconJabberImpl.java:[lines 41-163] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolIconJabberImpl \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolIconJabberImpl.loadIcon(String) \nAt ProtocolIconJabberImpl.java:[line 128] \nSink method java/net/URL.openStream()Ljava/io/InputStream; \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/protocol/jabber/ProtocolIconJabberImpl.loadIcon(Ljava/lang/String;)[B parameter 0 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nAt ProtocolIconJabberImpl.java:[line 57] \nAt ProtocolIconJabberImpl.java:[line 58] \nAt ProtocolIconJabberImpl.java:[line 59] \nAt ProtocolIconJabberImpl.java:[line 114] \nAt ProtocolIconJabberImpl.java:[line 128] \nAt ProtocolProviderServiceJabberImpl.java:[line 2189] \nAt ProtocolProviderServiceJabberImpl.java:[line 2193] \nAt AccountID.java:[line 399] \nAt AccountID.java:[line 412] \nAt AccountID.java:[line 419] \nAt AccountID.java:[line 423] \nAt AccountID.java:[line 427] \nAt AccountID.java:[line 1465].", "markdown": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt ProtocolIconJabberImpl.java:[lines 41-163] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolIconJabberImpl \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolIconJabberImpl.loadIcon(String) \nAt ProtocolIconJabberImpl.java:[line 128] \nSink method java/net/URL.openStream()Ljava/io/InputStream; \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/protocol/jabber/ProtocolIconJabberImpl.loadIcon(Ljava/lang/String;)[B parameter 0 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nAt ProtocolIconJabberImpl.java:[line 57] \nAt ProtocolIconJabberImpl.java:[line 58] \nAt ProtocolIconJabberImpl.java:[line 59] \nAt ProtocolIconJabberImpl.java:[line 114] \nAt ProtocolIconJabberImpl.java:[line 128] \nAt ProtocolProviderServiceJabberImpl.java:[line 2189] \nAt ProtocolProviderServiceJabberImpl.java:[line 2193] \nAt AccountID.java:[line 399] \nAt AccountID.java:[line 412] \nAt AccountID.java:[line 419] \nAt AccountID.java:[line 423] \nAt AccountID.java:[line 427] \nAt AccountID.java:[line 1465]."}, "name": "URLCONNECTION SSRF FD", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "This web server request could be used by an attacker to expose internal services and filesystem. ."}, "helpUri": "https://slscan.io?q=URLCONNECTION_SSRF_FD", "shortDescription": {"text": "This web server request could be used by an attacker to expose internal services and filesystem"}}, {"id": "WEAK_TRUST_MANAGER", "help": {"text": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt ProtocolProviderServiceJabberImpl.java:[lines 2696-2786] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl$HostTrustManager \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl$HostTrustManager.getAcceptedIssuers() \nAt ProtocolProviderServiceJabberImpl.java:[line 2707].", "markdown": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt ProtocolProviderServiceJabberImpl.java:[lines 2696-2786] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl$HostTrustManager \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl$HostTrustManager.getAcceptedIssuers() \nAt ProtocolProviderServiceJabberImpl.java:[line 2707]."}, "name": "WEAK TRUST MANAGER", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack ."}, "helpUri": "https://slscan.io?q=WEAK_TRUST_MANAGER", "shortDescription": {"text": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt ProtocolProviderServiceJabberImpl.java:[lines 2696-2786] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl$HostTrustManager \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl$HostTrustManager.getAcceptedIssuers() \nAt ProtocolProviderServiceJabberImpl.java:[line 2707]."}}, {"id": "XXE_DTD_TRANSFORM_FACTORY", "help": {"text": "The use of TransformerFactory.newInstance(...) (TransformerFactory) is vulnerable to XML External Entity attacks \nAt ConferenceInfoDocument.java:[lines 32-612] \nIn class net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument \nIn method net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument.toXml(String) \nAt ConferenceInfoDocument.java:[line 450] \nValue TransformerFactory.newInstance(...).", "markdown": "The use of TransformerFactory.newInstance(...) (TransformerFactory) is vulnerable to XML External Entity attacks \nAt ConferenceInfoDocument.java:[lines 32-612] \nIn class net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument \nIn method net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument.toXml(String) \nAt ConferenceInfoDocument.java:[line 450] \nValue TransformerFactory.newInstance(...)."}, "name": "XXE DTD TRANSFORM FACTORY", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "The use of TransformerFactory.newInstance(...) (TransformerFactory) is vulnerable to XML External Entity attacks ."}, "helpUri": "https://slscan.io?q=XXE_DTD_TRANSFORM_FACTORY", "shortDescription": {"text": "The use of TransformerFactory.newInstance(...) (TransformerFactory) is vulnerable to XML External Entity attacks \nAt ConferenceInfoDocument.java:[lines 32-612] \nIn class net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument \nIn method net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument.toXml(String) \nAt ConferenceInfoDocument.java:[line 450] \nValue TransformerFactory.newInstance(...)."}}, {"id": "XXE_XSLT_TRANSFORM_FACTORY", "help": {"text": "The use of TransformerFactory.newInstance(...) is vulnerable to XSLT External Entity attacks \nAt ConferenceInfoDocument.java:[lines 32-612] \nIn class net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument \nIn method net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument.toXml(String) \nAt ConferenceInfoDocument.java:[line 450] \nValue TransformerFactory.newInstance(...).", "markdown": "The use of TransformerFactory.newInstance(...) is vulnerable to XSLT External Entity attacks \nAt ConferenceInfoDocument.java:[lines 32-612] \nIn class net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument \nIn method net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument.toXml(String) \nAt ConferenceInfoDocument.java:[line 450] \nValue TransformerFactory.newInstance(...)."}, "name": "XXE XSLT TRANSFORM FACTORY", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "The use of TransformerFactory.newInstance(...) is vulnerable to XSLT External Entity attacks ."}, "helpUri": "https://slscan.io?q=XXE_XSLT_TRANSFORM_FACTORY", "shortDescription": {"text": "The use of TransformerFactory.newInstance(...) is vulnerable to XSLT External Entity attacks \nAt ConferenceInfoDocument.java:[lines 32-612] \nIn class net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument \nIn method net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument.toXml(String) \nAt ConferenceInfoDocument.java:[line 450] \nValue TransformerFactory.newInstance(...)."}}, {"id": "INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE", "help": {"text": "Possible information exposure through an error message \nAt ScLogFormatter.java:[lines 41-223] \nIn class net.java.sip.communicator.util.ScLogFormatter \nIn method net.java.sip.communicator.util.ScLogFormatter.format(LogRecord) \nAt ScLogFormatter.java:[line 145].", "markdown": "Possible information exposure through an error message \nAt ScLogFormatter.java:[lines 41-223] \nIn class net.java.sip.communicator.util.ScLogFormatter \nIn method net.java.sip.communicator.util.ScLogFormatter.format(LogRecord) \nAt ScLogFormatter.java:[line 145]."}, "name": "INFORMATION EXPOSURE THROUGH AN ERROR MESSAGE", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "Possible information exposure through an error message ."}, "helpUri": "https://slscan.io?q=INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE", "shortDescription": {"text": "Possible information exposure through an error message \nAt ScLogFormatter.java:[lines 41-223] \nIn class net.java.sip.communicator.util.ScLogFormatter \nIn method net.java.sip.communicator.util.ScLogFormatter.format(LogRecord) \nAt ScLogFormatter.java:[line 145]."}}, {"id": "ANDROID_BROADCAST", "help": {"text": "Broadcast intents could be received by a malicious application \nAt aTalkApp.java:[lines 49-525] \nIn class org.atalk.android.aTalkApp \nIn method org.atalk.android.aTalkApp.doShutdownApplication() \nAt aTalkApp.java:[line 187].", "markdown": "Broadcast intents could be received by a malicious application \nAt aTalkApp.java:[lines 49-525] \nIn class org.atalk.android.aTalkApp \nIn method org.atalk.android.aTalkApp.doShutdownApplication() \nAt aTalkApp.java:[line 187]."}, "name": "Android Broadcast", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "Broadcast intents could be received by a malicious application ."}, "helpUri": "https://slscan.io?q=ANDROID_BROADCAST", "shortDescription": {"text": "Broadcast intents could be received by a malicious application \nAt aTalkApp.java:[lines 49-525] \nIn class org.atalk.android.aTalkApp \nIn method org.atalk.android.aTalkApp.doShutdownApplication() \nAt aTalkApp.java:[line 187]."}}, {"id": "ANDROID_WEB_VIEW_JAVASCRIPT", "help": {"text": "WebView with JavaScript enabled \nAt WebViewFragment.java:[lines 48-264] \nIn class org.atalk.android.gui.webview.WebViewFragment \nIn method org.atalk.android.gui.webview.WebViewFragment.onCreateView(LayoutInflater, ViewGroup, Bundle) \nAt WebViewFragment.java:[line 86].", "markdown": "WebView with JavaScript enabled \nAt WebViewFragment.java:[lines 48-264] \nIn class org.atalk.android.gui.webview.WebViewFragment \nIn method org.atalk.android.gui.webview.WebViewFragment.onCreateView(LayoutInflater, ViewGroup, Bundle) \nAt WebViewFragment.java:[line 86]."}, "name": "ANDROID WEB VIEW JAVASCRIPT", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "WebView with JavaScript enabled ."}, "helpUri": "https://slscan.io?q=ANDROID_WEB_VIEW_JAVASCRIPT", "shortDescription": {"text": "WebView with JavaScript enabled \nAt WebViewFragment.java:[lines 48-264] \nIn class org.atalk.android.gui.webview.WebViewFragment \nIn method org.atalk.android.gui.webview.WebViewFragment.onCreateView(LayoutInflater, ViewGroup, Bundle) \nAt WebViewFragment.java:[line 86]."}}, {"id": "ANDROID_WEB_VIEW_JAVASCRIPT_INTERFACE", "help": {"text": "WebView with JavaScript interface \nAt WebViewFragment.java:[lines 48-264] \nIn class org.atalk.android.gui.webview.WebViewFragment \nIn method org.atalk.android.gui.webview.WebViewFragment.onCreateView(LayoutInflater, ViewGroup, Bundle) \nAt WebViewFragment.java:[line 89].", "markdown": "WebView with JavaScript interface \nAt WebViewFragment.java:[lines 48-264] \nIn class org.atalk.android.gui.webview.WebViewFragment \nIn method org.atalk.android.gui.webview.WebViewFragment.onCreateView(LayoutInflater, ViewGroup, Bundle) \nAt WebViewFragment.java:[line 89]."}, "name": "ANDROID WEB VIEW JAVASCRIPT INTERFACE", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "WebView with JavaScript interface ."}, "helpUri": "https://slscan.io?q=ANDROID_WEB_VIEW_JAVASCRIPT_INTERFACE", "shortDescription": {"text": "WebView with JavaScript interface \nAt WebViewFragment.java:[lines 48-264] \nIn class org.atalk.android.gui.webview.WebViewFragment \nIn method org.atalk.android.gui.webview.WebViewFragment.onCreateView(LayoutInflater, ViewGroup, Bundle) \nAt WebViewFragment.java:[line 89]."}}, {"id": "PATH_TRAVERSAL_OUT", "help": {"text": "This API (java/io/FileOutputStream.<init>(Ljava/lang/String;)V) writes to a file whose location might be specified by user input \nAt FailSafeTransactionImpl.java:[lines 49-183] \nIn class org.atalk.impl.fileaccess.FailSafeTransactionImpl \nIn method org.atalk.impl.fileaccess.FailSafeTransactionImpl.failsafeCopy(File, File) \nAt FailSafeTransactionImpl.java:[line 165] \nSink method java/io/FileOutputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/fileaccess/FailSafeTransactionImpl.failsafeCopy(Ljava/io/File;Ljava/io/File;)V parameter 0 \nAt FailSafeTransactionImpl.java:[line 71] \nAt FailSafeTransactionImpl.java:[line 97] \nAt FailSafeTransactionImpl.java:[line 132] \nAt FailSafeTransactionImpl.java:[line 165].", "markdown": "This API (java/io/FileOutputStream.<init>(Ljava/lang/String;)V) writes to a file whose location might be specified by user input \nAt FailSafeTransactionImpl.java:[lines 49-183] \nIn class org.atalk.impl.fileaccess.FailSafeTransactionImpl \nIn method org.atalk.impl.fileaccess.FailSafeTransactionImpl.failsafeCopy(File, File) \nAt FailSafeTransactionImpl.java:[line 165] \nSink method java/io/FileOutputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/fileaccess/FailSafeTransactionImpl.failsafeCopy(Ljava/io/File;Ljava/io/File;)V parameter 0 \nAt FailSafeTransactionImpl.java:[line 71] \nAt FailSafeTransactionImpl.java:[line 97] \nAt FailSafeTransactionImpl.java:[line 132] \nAt FailSafeTransactionImpl.java:[line 165]."}, "name": "PATH TRAVERSAL OUT", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "This API (java/io/FileOutputStream.<init>(Ljava/lang/String;)V) writes to a file whose location might be specified by user input ."}, "helpUri": "https://slscan.io?q=PATH_TRAVERSAL_OUT", "shortDescription": {"text": "This API (java/io/FileOutputStream.<init>(Ljava/lang/String;)V) writes to a file whose location might be specified by user input \nAt FailSafeTransactionImpl.java:[lines 49-183] \nIn class org.atalk.impl.fileaccess.FailSafeTransactionImpl \nIn method org.atalk.impl.fileaccess.FailSafeTransactionImpl.failsafeCopy(File, File) \nAt FailSafeTransactionImpl.java:[line 165] \nSink method java/io/FileOutputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/fileaccess/FailSafeTransactionImpl.failsafeCopy(Ljava/io/File;Ljava/io/File;)V parameter 0 \nAt FailSafeTransactionImpl.java:[line 71] \nAt FailSafeTransactionImpl.java:[line 97] \nAt FailSafeTransactionImpl.java:[line 132] \nAt FailSafeTransactionImpl.java:[line 165]."}}, {"id": "HARD_CODE_KEY", "help": {"text": "Hard coded cryptographic key found \nAt DtlsControlImpl.java:[lines 52-845] \nIn class org.atalk.impl.neomedia.transform.dtls.DtlsControlImpl \nValue is hard coded in field org.atalk.impl.neomedia.transform.dtls.DtlsControlImpl.RSA_KEY_PUBLIC_EXPONENTLjava/math/BigInteger; with suspicious name \nAt DtlsControlImpl.java:[lines 52-845].", "markdown": "Hard coded cryptographic key found \nAt DtlsControlImpl.java:[lines 52-845] \nIn class org.atalk.impl.neomedia.transform.dtls.DtlsControlImpl \nValue is hard coded in field org.atalk.impl.neomedia.transform.dtls.DtlsControlImpl.RSA_KEY_PUBLIC_EXPONENTLjava/math/BigInteger; with suspicious name \nAt DtlsControlImpl.java:[lines 52-845]."}, "name": "HARD CODE KEY", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "Hard coded cryptographic key found ."}, "helpUri": "https://slscan.io?q=HARD_CODE_KEY", "shortDescription": {"text": "Hard coded cryptographic key found \nAt DtlsControlImpl.java:[lines 52-845] \nIn class org.atalk.impl.neomedia.transform.dtls.DtlsControlImpl \nValue is hard coded in field org.atalk.impl.neomedia.transform.dtls.DtlsControlImpl.RSA_KEY_PUBLIC_EXPONENTLjava/math/BigInteger; with suspicious name \nAt DtlsControlImpl.java:[lines 52-845]."}}, {"id": "ANDROID_EXTERNAL_FILE_ACCESS", "help": {"text": "Files could be saved to external storage \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.getaTalkStore(String, boolean) \nAt FileBackend.java:[line 236].", "markdown": "Files could be saved to external storage \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.getaTalkStore(String, boolean) \nAt FileBackend.java:[line 236]."}, "name": "ANDROID EXTERNAL FILE ACCESS", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "Files could be saved to external storage ."}, "helpUri": "https://slscan.io?q=ANDROID_EXTERNAL_FILE_ACCESS", "shortDescription": {"text": "Files could be saved to external storage \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.getaTalkStore(String, boolean) \nAt FileBackend.java:[line 236]."}}, {"id": "CRLF_INJECTION_LOGS", "help": {"text": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt AvatarManager.java:[lines 54-548] \nIn class org.jivesoftware.smackx.avatar.AvatarManager \nIn method org.jivesoftware.smackx.avatar.AvatarManager.getAvatarImageByJid(BareJid) \nAt AvatarManager.java:[line 258] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarImageByJid(Lorg/jxmpp/jid/BareJid;)[B parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nTainted source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131].", "markdown": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt AvatarManager.java:[lines 54-548] \nIn class org.jivesoftware.smackx.avatar.AvatarManager \nIn method org.jivesoftware.smackx.avatar.AvatarManager.getAvatarImageByJid(BareJid) \nAt AvatarManager.java:[line 258] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarImageByJid(Lorg/jxmpp/jid/BareJid;)[B parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nTainted source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131]."}, "name": "CRLF INJECTION LOGS", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages ."}, "helpUri": "https://slscan.io?q=CRLF_INJECTION_LOGS", "shortDescription": {"text": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt AvatarManager.java:[lines 54-548] \nIn class org.jivesoftware.smackx.avatar.AvatarManager \nIn method org.jivesoftware.smackx.avatar.AvatarManager.getAvatarImageByJid(BareJid) \nAt AvatarManager.java:[line 258] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarImageByJid(Lorg/jxmpp/jid/BareJid;)[B parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nTainted source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131]."}}, {"id": "STATIC_IV", "help": {"text": "The initialization vector (IV) is not properly generated \nAt OmemoMediaSharingUtils.java:[lines 38-122] \nIn class org.jivesoftware.smackx.omemo_media_sharing.OmemoMediaSharingUtils \nIn method org.jivesoftware.smackx.omemo_media_sharing.OmemoMediaSharingUtils.decryptionCipherFrom(byte[], byte[]) \nAt OmemoMediaSharingUtils.java:[line 119].", "markdown": "The initialization vector (IV) is not properly generated \nAt OmemoMediaSharingUtils.java:[lines 38-122] \nIn class org.jivesoftware.smackx.omemo_media_sharing.OmemoMediaSharingUtils \nIn method org.jivesoftware.smackx.omemo_media_sharing.OmemoMediaSharingUtils.decryptionCipherFrom(byte[], byte[]) \nAt OmemoMediaSharingUtils.java:[line 119]."}, "name": "Static Iv", "properties": {"tags": ["Scan"], "precision": "high"}, "defaultConfiguration": {"level": "error"}, "fullDescription": {"text": "The initialization vector (IV) is not properly generated ."}, "helpUri": "https://slscan.io?q=STATIC_IV", "shortDescription": {"text": "The initialization vector (IV) is not properly generated \nAt OmemoMediaSharingUtils.java:[lines 38-122] \nIn class org.jivesoftware.smackx.omemo_media_sharing.OmemoMediaSharingUtils \nIn method org.jivesoftware.smackx.omemo_media_sharing.OmemoMediaSharingUtils.decryptionCipherFrom(byte[], byte[]) \nAt OmemoMediaSharingUtils.java:[line 119]."}}], "version": "1.0.0-scan", "fullName": "Class File Analyzer"}}, "conversion": {"tool": {"driver": {"name": "@ShiftLeft/sast-scan"}}, "invocation": {"arguments": ["-jar", "/tmp/.mount_scane5XfUc/opt/spotbugs/lib/spotbugs.jar", "-textui", "-include", "/tmp/.mount_scane5XfUc/usr/src/tools_config/spotbugs/include.xml", "-exclude", "/tmp/.mount_scane5XfUc/usr/src/tools_config/spotbugs/exclude.xml", "-noClassOk", "-auxclasspathFromFile", "/tmp/tmp5z7meztu", "-sourcepath", "/media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8", "-quiet", "-medium", "-xml:withMessages", "-effort:max", "-nested:false", "-output", "/media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/reports/class-report.xml", "/media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8"], "executionSuccessful": true, "commandLine": "-jar /tmp/.mount_scane5XfUc/opt/spotbugs/lib/spotbugs.jar -textui -include /tmp/.mount_scane5XfUc/usr/src/tools_config/spotbugs/include.xml -exclude /tmp/.mount_scane5XfUc/usr/src/tools_config/spotbugs/exclude.xml -noClassOk -auxclasspathFromFile /tmp/tmp5z7meztu -sourcepath /media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8 -quiet -medium -xml:withMessages -effort:max -nested:false -output /media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/reports/class-report.xml /media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8", "endTimeUtc": "2020-12-02T12:41:17Z", "workingDirectory": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8"}}}, "invocations": [{"executionSuccessful": true, "endTimeUtc": "2020-12-02T12:41:17Z", "workingDirectory": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8"}}], "properties": {"metrics": {"total": 183, "critical": 11, "high": 172, "medium": 0, "low": 0}}, "results": [{"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt OtrKeyManagerImpl.java:[lines 30-107] \nIn class net.java.otr4j.OtrKeyManagerImpl$DefaultPropertiesStore \nIn method net.java.otr4j.OtrKeyManagerImpl$DefaultPropertiesStore.getConfigurationFile() \nAt OtrKeyManagerImpl.java:[line 50] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/otr4j/OtrKeyManagerImpl$DefaultPropertiesStore.filepath \nAt OtrKeyManagerImpl.java:[line 50]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            File configFile = new File(filepath);\n"}, "startLine": 50}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/otr4j/OtrKeyManagerImpl.java"}, "contextRegion": {"snippet": {"text": "        {\n            File configFile = new File(filepath);\n"}, "endLine": 50, "startLine": 49}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API SHA-1 (SHA-1) is not a recommended cryptographic hash function \nAt OtrCryptoEngineImpl.java:[lines 31-342] \nIn class net.java.otr4j.crypto.OtrCryptoEngineImpl \nIn method net.java.otr4j.crypto.OtrCryptoEngineImpl.sha1Hash(byte[]) \nAt OtrCryptoEngineImpl.java:[line 153] \nValue SHA-1."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            MessageDigest sha256 = MessageDigest.getInstance(\"SHA-1\");\n"}, "startLine": 153}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/otr4j/crypto/OtrCryptoEngineImpl.java"}, "contextRegion": {"snippet": {"text": "        try {\n            MessageDigest sha256 = MessageDigest.getInstance(\"SHA-1\");\n"}, "endLine": 153, "startLine": 152}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "WEAK_MESSAGE_DIGEST_SHA1", "ruleIndex": 1}, {"message": {"markdown": "", "text": "This random generator (java.util.Random) is predictable \nAt AuthContextImpl.java:[lines 32-792] \nIn class net.java.otr4j.session.AuthContextImpl \nIn method net.java.otr4j.session.AuthContextImpl.getR() \nAt AuthContextImpl.java:[line 218] \nValue java.util.Random."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            new Random().nextBytes(r);\n"}, "startLine": 218}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/otr4j/session/AuthContextImpl.java"}, "contextRegion": {"snippet": {"text": "            r = new byte[OtrCryptoEngine.AES_KEY_BYTE_LENGTH];\n            new Random().nextBytes(r);\n"}, "endLine": 218, "startLine": 217}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PREDICTABLE_RANDOM", "ruleIndex": 2}, {"message": {"markdown": "", "text": "Unsafe comparison of hash that are susceptible to timing attack \nAt AuthContextImpl.java:[lines 32-792] \nIn class net.java.otr4j.session.AuthContextImpl \nIn method net.java.otr4j.session.AuthContextImpl.handleRevealSignatureMessage(RevealSignatureMessage) \nAt AuthContextImpl.java:[line 579] \nSink method java/util/Arrays.equals([B[B)Z \nSink parameter 0 \nUnknown source net/java/otr4j/session/AuthContextImpl.remoteDHPublicKeyHash \nUnknown source net/java/otr4j/session/AuthContextImpl.getRemoteDHPublicKeyHash()[B \nAt AuthContextImpl.java:[line 261] \nAt AuthContextImpl.java:[line 579]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                if (!Arrays.equals(remoteDHPublicKeyHash, this.getRemoteDHPublicKeyHash())) {\n"}, "startLine": 579}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/otr4j/session/AuthContextImpl.java"}, "contextRegion": {"snippet": {"text": "                byte[] remoteDHPublicKeyHash = otrCryptoEngine.sha256Hash(remoteDHPublicKeyDecrypted);\n                if (!Arrays.equals(remoteDHPublicKeyHash, this.getRemoteDHPublicKeyHash())) {\n"}, "endLine": 579, "startLine": 578}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "UNSAFE_HASH_EQUALS", "ruleIndex": 3}, {"message": {"markdown": "", "text": "This random generator (java.util.Random) is predictable \nAt InstanceTag.java:[lines 11-89] \nIn class net.java.otr4j.session.InstanceTag \nIn method net.java.otr4j.session.InstanceTag.<static initializer for InstanceTag>() \nAt InstanceTag.java:[line 11] \nValue java.util.Random."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "\tprivate static final Random RANDOM = new Random();\n"}, "startLine": 11}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/otr4j/session/InstanceTag.java"}, "contextRegion": {"snippet": {"text": "\n\tprivate static final Random RANDOM = new Random();\n"}, "endLine": 11, "startLine": 10}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PREDICTABLE_RANDOM", "ruleIndex": 2}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt CertificateServiceImpl.java:[lines 59-971] \nIn class net.java.sip.communicator.impl.certificate.CertificateServiceImpl \nIn method net.java.sip.communicator.impl.certificate.CertificateServiceImpl.loadKeyStore(CertificateConfigEntry) \nAt CertificateServiceImpl.java:[line 385] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/certificate/CertificateConfigEntry.keyStore \nUnknown source net/java/sip/communicator/service/certificate/CertificateConfigEntry.getKeyStore()Ljava/lang/String; \nAt CertificateServiceImpl.java:[line 385] \nAt CertificateConfigEntry.java:[line 180]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        final File f = new File(entry.getKeyStore());\n"}, "startLine": 385}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/certificate/CertificateServiceImpl.java"}, "contextRegion": {"snippet": {"text": "    {\n        final File f = new File(entry.getKeyStore());\n"}, "endLine": 385, "startLine": 384}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This random generator (java.util.Random) is predictable \nAt CertificateServiceImpl.java:[lines 59-971] \nIn class net.java.sip.communicator.impl.certificate.CertificateServiceImpl \nIn method net.java.sip.communicator.impl.certificate.CertificateServiceImpl.setClientAuthCertificateConfig(CertificateConfigEntry) \nAt CertificateServiceImpl.java:[line 265] \nValue java.util.Random."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            e.setId(\"conf\" + Math.abs(new Random().nextInt()));\n"}, "startLine": 265}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/certificate/CertificateServiceImpl.java"}, "contextRegion": {"snippet": {"text": "        if (e.getId() == null)\n            e.setId(\"conf\" + Math.abs(new Random().nextInt()));\n"}, "endLine": 265, "startLine": 264}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PREDICTABLE_RANDOM", "ruleIndex": 2}, {"message": {"markdown": "", "text": "The cipher does not provide data integrity \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 89]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                decryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n"}, "startLine": 89}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/credentialsstorage/AESCrypto.java"}, "contextRegion": {"snippet": {"text": "            for (int i = 0; i < KEY_LENGTHS.length; i++) {\n                decryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n"}, "endLine": 89, "startLine": 88}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "CRITICAL"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "CIPHER_INTEGRITY", "ruleIndex": 4}, {"message": {"markdown": "", "text": "The cipher does not provide data integrity \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 90]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                encryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n"}, "startLine": 90}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/credentialsstorage/AESCrypto.java"}, "contextRegion": {"snippet": {"text": "                decryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n                encryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n"}, "endLine": 90, "startLine": 89}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "CRITICAL"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "CIPHER_INTEGRITY", "ruleIndex": 4}, {"message": {"markdown": "", "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 89]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                decryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n"}, "startLine": 89}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/credentialsstorage/AESCrypto.java"}, "contextRegion": {"snippet": {"text": "            for (int i = 0; i < KEY_LENGTHS.length; i++) {\n                decryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n"}, "endLine": 89, "startLine": 88}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "CRITICAL"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "ECB_MODE", "ruleIndex": 5}, {"message": {"markdown": "", "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AESCrypto.java:[lines 51-182] \nIn class net.java.sip.communicator.impl.credentialsstorage.AESCrypto \nIn method new net.java.sip.communicator.impl.credentialsstorage.AESCrypto(String) \nAt AESCrypto.java:[line 90]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                encryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n"}, "startLine": 90}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/credentialsstorage/AESCrypto.java"}, "contextRegion": {"snippet": {"text": "                decryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n                encryptCipher = Cipher.getInstance(CIPHER_ALGORITHM);\n"}, "endLine": 90, "startLine": 89}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "CRITICAL"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "ECB_MODE", "ruleIndex": 5}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HistoryImpl.java:[lines 50-371] \nIn class net.java.sip.communicator.impl.history.HistoryImpl \nIn method net.java.sip.communicator.impl.history.HistoryImpl.writeFile(String) \nAt HistoryImpl.java:[line 195] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/history/HistoryImpl.writeFile(Ljava/lang/String;)V parameter 0 \nMethod usage not detected."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        File file = new File(this.directory, filename);\n"}, "startLine": 195}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/history/HistoryImpl.java"}, "contextRegion": {"snippet": {"text": "    {\n        File file = new File(this.directory, filename);\n"}, "endLine": 195, "startLine": 194}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HistoryImpl.java:[lines 50-371] \nIn class net.java.sip.communicator.impl.history.HistoryImpl \nIn method net.java.sip.communicator.impl.history.HistoryImpl.writeFile(String, Document) \nAt HistoryImpl.java:[line 217] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/history/HistoryImpl.writeFile(Ljava/lang/String;Lorg/w3c/dom/Document;)V parameter 1 \nMethod usage not detected."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        File file = new File(this.directory, filename);\n"}, "startLine": 217}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/history/HistoryImpl.java"}, "contextRegion": {"snippet": {"text": "    {\n        File file = new File(this.directory, filename);\n"}, "endLine": 217, "startLine": 216}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.createHistoryDirectories(HistoryID) \nAt HistoryServiceImpl.java:[line 248] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/history/HistoryID.getID()[Ljava/lang/String; \nUnknown source net/java/sip/communicator/service/history/HistoryID.id \nAt HistoryServiceImpl.java:[line 239] \nAt HistoryID.java:[line 87]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            dir = new File(dir, s);\n"}, "startLine": 248}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/history/HistoryServiceImpl.java"}, "contextRegion": {"snippet": {"text": "        for (String s : idComponents) {\n            dir = new File(dir, s);\n"}, "endLine": 248, "startLine": 247}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.getDirForHistory(HistoryID) \nAt HistoryServiceImpl.java:[line 465] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/history/HistoryID.getID()[Ljava/lang/String; \nUnknown source net/java/sip/communicator/service/history/HistoryID.id \nAt HistoryServiceImpl.java:[line 445] \nAt HistoryServiceImpl.java:[line 450] \nAt HistoryServiceImpl.java:[line 465] \nAt HistoryID.java:[line 87]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        return new File(histDir, dirName.toString());\n"}, "startLine": 465}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/history/HistoryServiceImpl.java"}, "contextRegion": {"snippet": {"text": "\n        return new File(histDir, dirName.toString());\n"}, "endLine": 465, "startLine": 464}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.getExistingHistories(String[]) \nAt HistoryServiceImpl.java:[line 505] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/history/HistoryServiceImpl.getExistingHistories([Ljava/lang/String;)Ljava/util/List; parameter 0 \nMethod usage not detected \nAt HistoryServiceImpl.java:[line 503] \nAt HistoryServiceImpl.java:[line 505]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        File srcFolder = new File(histDir, folderPath.toString());\n"}, "startLine": 505}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/history/HistoryServiceImpl.java"}, "contextRegion": {"snippet": {"text": "\n        File srcFolder = new File(histDir, folderPath.toString());\n"}, "endLine": 505, "startLine": 504}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.parse(ByteArrayInputStream) \nAt HistoryServiceImpl.java:[line 220] \nValue DocumentBuilder.parse(...)."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        return builder.parse(in);\n"}, "startLine": 220}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/history/HistoryServiceImpl.java"}, "contextRegion": {"snippet": {"text": "    {\n        return builder.parse(in);\n"}, "endLine": 220, "startLine": 219}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "XXE_DOCUMENT", "ruleIndex": 6}, {"message": {"markdown": "", "text": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks \nAt HistoryServiceImpl.java:[lines 65-552] \nIn class net.java.sip.communicator.impl.history.HistoryServiceImpl \nIn method net.java.sip.communicator.impl.history.HistoryServiceImpl.parse(File) \nAt HistoryServiceImpl.java:[line 203] \nValue DocumentBuilder.parse(...)."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        Document doc = builder.parse(fis);\n"}, "startLine": 203}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/history/HistoryServiceImpl.java"}, "contextRegion": {"snippet": {"text": "        FileInputStream fis = new FileInputStream(file);\n        Document doc = builder.parse(fis);\n"}, "endLine": 203, "startLine": 202}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "XXE_DOCUMENT", "ruleIndex": 6}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.createFileRecordFromProperties(Map, Object) \nAt MessageHistoryServiceImpl.java:[line 1196] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.createFileRecordFromProperties(Ljava/util/Map;Ljava/lang/Object;)Lnet/java/sip/communicator/service/filehistory/FileRecord; parameter 1 \nUnknown source java/util/Map.get(Ljava/lang/Object;)Ljava/lang/Object; \nAt MessageHistoryServiceImpl.java:[line 1062] \nAt MessageHistoryServiceImpl.java:[line 1071] \nAt MessageHistoryServiceImpl.java:[line 1103] \nAt MessageHistoryServiceImpl.java:[line 1122] \nAt MessageHistoryServiceImpl.java:[line 1125] \nAt MessageHistoryServiceImpl.java:[line 1193]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        return new FileRecord(uuid, entityJid, dir, date, new File(file), encType, status);\n"}, "startLine": 1196}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.java"}, "contextRegion": {"snippet": {"text": "        int status = Integer.parseInt(mProperties.get(ChatMessage.STATUS));\n        return new FileRecord(uuid, entityJid, dir, date, new File(file), encType, status);\n"}, "endLine": 1196, "startLine": 1195}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByKeyword(MetaContact, String, boolean) \nAt MessageHistoryServiceImpl.java:[line 1720] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByKeyword(Lnet/java/sip/communicator/service/contactlist/MetaContact;Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 434] \nAt MessageHistoryServiceImpl.java:[line 1712] \nAt MessageHistoryServiceImpl.java:[line 1720]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "startLine": 1720}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.java"}, "contextRegion": {"snippet": {"text": "\n            Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "endLine": 1720, "startLine": 1719}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "SQL_INJECTION_ANDROID", "ruleIndex": 7}, {"message": {"markdown": "", "text": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByKeyword(ChatRoom, String, boolean) \nAt MessageHistoryServiceImpl.java:[line 1919] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByKeyword(Lnet/java/sip/communicator/service/protocol/ChatRoom;Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 1899] \nAt MessageHistoryServiceImpl.java:[line 1917] \nAt MessageHistoryServiceImpl.java:[line 1919]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "startLine": 1919}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.java"}, "contextRegion": {"snippet": {"text": "\n        Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "endLine": 1919, "startLine": 1918}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "SQL_INJECTION_ANDROID", "ruleIndex": 7}, {"message": {"markdown": "", "text": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByKeywords(MetaContact, String[], boolean) \nAt MessageHistoryServiceImpl.java:[line 1755] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByKeywords(Lnet/java/sip/communicator/service/contactlist/MetaContact;[Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 447] \nAt MessageHistoryServiceImpl.java:[line 1745] \nAt MessageHistoryServiceImpl.java:[line 1747] \nAt MessageHistoryServiceImpl.java:[line 1755]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "startLine": 1755}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.java"}, "contextRegion": {"snippet": {"text": "\n            Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "endLine": 1755, "startLine": 1754}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "SQL_INJECTION_ANDROID", "ruleIndex": 7}, {"message": {"markdown": "", "text": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByKeywords(ChatRoom, String[], boolean) \nAt MessageHistoryServiceImpl.java:[line 1962] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByKeywords(Lnet/java/sip/communicator/service/protocol/ChatRoom;[Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 1938] \nAt MessageHistoryServiceImpl.java:[line 1958] \nAt MessageHistoryServiceImpl.java:[line 1960] \nAt MessageHistoryServiceImpl.java:[line 1962]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "startLine": 1962}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.java"}, "contextRegion": {"snippet": {"text": "\n        Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "endLine": 1962, "startLine": 1961}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "SQL_INJECTION_ANDROID", "ruleIndex": 7}, {"message": {"markdown": "", "text": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByPeriod(MetaContact, Date, Date, String[], boolean) \nAt MessageHistoryServiceImpl.java:[line 1688] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByPeriod(Lnet/java/sip/communicator/service/contactlist/MetaContact;Ljava/util/Date;Ljava/util/Date;[Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 421] \nAt MessageHistoryServiceImpl.java:[line 1678] \nAt MessageHistoryServiceImpl.java:[line 1680] \nAt MessageHistoryServiceImpl.java:[line 1688]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "startLine": 1688}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.java"}, "contextRegion": {"snippet": {"text": "\n            Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "endLine": 1688, "startLine": 1687}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "SQL_INJECTION_ANDROID", "ruleIndex": 7}, {"message": {"markdown": "", "text": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findByPeriod(ChatRoom, Date, Date, String[], boolean) \nAt MessageHistoryServiceImpl.java:[line 1880] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nUnknown source net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.findByPeriod(Lnet/java/sip/communicator/service/protocol/ChatRoom;Ljava/util/Date;Ljava/util/Date;[Ljava/lang/String;Z)Ljava/util/Collection; parameter 1 \nMethod usage not detected \nAt MessageHistoryServiceImpl.java:[line 1852] \nAt MessageHistoryServiceImpl.java:[line 1876] \nAt MessageHistoryServiceImpl.java:[line 1878] \nAt MessageHistoryServiceImpl.java:[line 1880]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "startLine": 1880}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.java"}, "contextRegion": {"snippet": {"text": "\n        Cursor cursor = mDB.query(ChatMessage.TABLE_NAME, null,\n"}, "endLine": 1880, "startLine": 1879}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "SQL_INJECTION_ANDROID", "ruleIndex": 7}, {"message": {"markdown": "", "text": "This use of android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; can be vulnerable to SQL injection (with Android SQL) \nAt MessageHistoryServiceImpl.java:[lines 79-2361] \nIn class net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl \nIn method net.java.sip.communicator.impl.msghistory.MessageHistoryServiceImpl.findRecentMessagesPerContact(int, String, String, boolean) \nAt MessageHistoryServiceImpl.java:[line 694] \nSink method android/database/sqlite/SQLiteDatabase.query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; \nSink parameter 4 \nAt MessageHistoryServiceImpl.java:[line 686] \nAt MessageHistoryServiceImpl.java:[line 687] \nAt MessageHistoryServiceImpl.java:[line 688]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        Cursor cursor = mDB.query(ChatSession.TABLE_NAME, null, whereCondition, args, null,\n"}, "startLine": 694}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/msghistory/MessageHistoryServiceImpl.java"}, "contextRegion": {"snippet": {"text": "\n        Cursor cursor = mDB.query(ChatSession.TABLE_NAME, null, whereCondition, args, null,\n"}, "endLine": 694, "startLine": 693}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "SQL_INJECTION_ANDROID", "ruleIndex": 7}, {"message": {"markdown": "", "text": "This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection \nAt CommandNotificationHandlerImpl.java:[lines 23-57] \nIn class net.java.sip.communicator.impl.notification.CommandNotificationHandlerImpl \nIn method net.java.sip.communicator.impl.notification.CommandNotificationHandlerImpl.execute(CommandNotificationAction, Map) \nAt CommandNotificationHandlerImpl.java:[line 53] \nSink method java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/notification/CommandNotificationAction.getDescriptor()Ljava/lang/String; \nUnknown source java/util/Map.entrySet()Ljava/util/Set; \nUnknown source net/java/sip/communicator/impl/notification/CommandNotificationHandlerImpl.execute(Lnet/java/sip/communicator/service/notification/CommandNotificationAction;Ljava/util/Map;)V parameter 0 \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nUnknown source net/java/sip/communicator/service/notification/CommandNotificationAction.commandDescriptor \nUnknown source java/util/Map$Entry.getKey()Ljava/lang/Object; \nUnknown source java/util/Map$Entry.getValue()Ljava/lang/Object; \nMethod usage not detected \nAt CommandNotificationHandlerImpl.java:[line 41] \nAt CommandNotificationHandlerImpl.java:[line 43] \nAt CommandNotificationHandlerImpl.java:[line 47] \nAt CommandNotificationHandlerImpl.java:[line 48] \nAt CommandNotificationAction.java:[line 36]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            Runtime.getRuntime().exec(actionDescriptor);\n"}, "startLine": 53}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/notification/CommandNotificationHandlerImpl.java"}, "contextRegion": {"snippet": {"text": "        try {\n            Runtime.getRuntime().exec(actionDescriptor);\n"}, "endLine": 53, "startLine": 52}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "COMMAND_INJECTION", "ruleIndex": 8}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HttpFileDownloadJabberImpl.java:[lines 38-206] \nIn class net.java.sip.communicator.impl.protocol.jabber.HttpFileDownloadJabberImpl \nIn method new net.java.sip.communicator.impl.protocol.jabber.HttpFileDownloadJabberImpl(Contact, String, String, int) \nAt HttpFileDownloadJabberImpl.java:[line 81] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/protocol/jabber/HttpFileDownloadJabberImpl.mFileName \nAt HttpFileDownloadJabberImpl.java:[line 81]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        mFile = (mFileName != null) ? new File(mFileName) : null;\n"}, "startLine": 81}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/HttpFileDownloadJabberImpl.java"}, "contextRegion": {"snippet": {"text": "        mFileName = uri.getLastPathSegment();\n        mFile = (mFileName != null) ? new File(mFileName) : null;\n"}, "endLine": 81, "startLine": 80}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HttpFileUploadJabberImpl.java:[lines 35-141] \nIn class net.java.sip.communicator.impl.protocol.jabber.HttpFileUploadJabberImpl \nIn method new net.java.sip.communicator.impl.protocol.jabber.HttpFileUploadJabberImpl(Object, String, String) \nAt HttpFileUploadJabberImpl.java:[line 51] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/protocol/jabber/HttpFileUploadJabberImpl.<init>(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V parameter 0 \nAt FileSendConversation.java:[line 215]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        mFile = new File(file);\n"}, "startLine": 51}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/HttpFileUploadJabberImpl.java"}, "contextRegion": {"snippet": {"text": "        mFileName = file;\n        mFile = new File(file);\n"}, "endLine": 51, "startLine": 50}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt OperationSetFileTransferJabberImpl.java:[lines 46-551] \nIn class net.java.sip.communicator.impl.protocol.jabber.OperationSetFileTransferJabberImpl \nIn method net.java.sip.communicator.impl.protocol.jabber.OperationSetFileTransferJabberImpl.sendFile(Contact, Contact, String, String, String) \nAt OperationSetFileTransferJabberImpl.java:[line 191] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/protocol/jabber/OperationSetFileTransferJabberImpl.sendFile(Lnet/java/sip/communicator/service/protocol/Contact;Lnet/java/sip/communicator/service/protocol/Contact;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lnet/java/sip/communicator/service/protocol/FileTransfer; parameter 1 \nMethod usage not detected."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        return this.sendFile(toContact, new File(localPath), uuid);\n"}, "startLine": 191}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/OperationSetFileTransferJabberImpl.java"}, "contextRegion": {"snippet": {"text": "    {\n        return this.sendFile(toContact, new File(localPath), uuid);\n"}, "endLine": 191, "startLine": 190}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt ProtocolIconJabberImpl.java:[lines 41-163] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolIconJabberImpl \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolIconJabberImpl.loadIcon(String) \nAt ProtocolIconJabberImpl.java:[line 128] \nSink method java/net/URL.openStream()Ljava/io/InputStream; \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/protocol/jabber/ProtocolIconJabberImpl.loadIcon(Ljava/lang/String;)[B parameter 0 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nAt ProtocolIconJabberImpl.java:[line 57] \nAt ProtocolIconJabberImpl.java:[line 58] \nAt ProtocolIconJabberImpl.java:[line 59] \nAt ProtocolIconJabberImpl.java:[line 114] \nAt ProtocolIconJabberImpl.java:[line 128] \nAt ProtocolProviderServiceJabberImpl.java:[line 2189] \nAt ProtocolProviderServiceJabberImpl.java:[line 2193] \nAt AccountID.java:[line 399] \nAt AccountID.java:[line 412] \nAt AccountID.java:[line 419] \nAt AccountID.java:[line 423] \nAt AccountID.java:[line 427] \nAt AccountID.java:[line 1465]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            is = new URL(imagePath).openStream();\n"}, "startLine": 128}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/ProtocolIconJabberImpl.java"}, "contextRegion": {"snippet": {"text": "            // try to load path it maybe valid url\n            is = new URL(imagePath).openStream();\n"}, "endLine": 128, "startLine": 127}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "URLCONNECTION_SSRF_FD", "ruleIndex": 9}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ProtocolProviderServiceJabberImpl.java:[lines 171-3126] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl.initAvatarStore() \nAt ProtocolProviderServiceJabberImpl.java:[line 1674] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/content/Context.getFilesDir()Ljava/io/File; \nAt ProtocolProviderServiceJabberImpl.java:[line 1674]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        File avatarStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir() + \"/avatarStore\");\n"}, "startLine": 1674}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/ProtocolProviderServiceJabberImpl.java"}, "contextRegion": {"snippet": {"text": "        /* Persistent Storage directory for Avatar. */\n        File avatarStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir() + \"/avatarStore\");\n"}, "endLine": 1674, "startLine": 1673}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ProtocolProviderServiceJabberImpl.java:[lines 171-3126] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl.initRosterStore() \nAt ProtocolProviderServiceJabberImpl.java:[line 1691] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/content/Context.getFilesDir()Ljava/io/File; \nUnknown source net/java/sip/communicator/service/protocol/AccountID.userID \nUnknown source net/java/sip/communicator/service/protocol/jabber/JabberAccountID.getUserID()Ljava/lang/String; \nAt ProtocolProviderServiceJabberImpl.java:[line 1689] \nAt ProtocolProviderServiceJabberImpl.java:[line 1691] \nAt AccountID.java:[line 239]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        rosterStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir() + \"/rosterStore_\" + userID);\n"}, "startLine": 1691}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/ProtocolProviderServiceJabberImpl.java"}, "contextRegion": {"snippet": {"text": "\n        rosterStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir() + \"/rosterStore_\" + userID);\n"}, "endLine": 1691, "startLine": 1690}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt ProtocolProviderServiceJabberImpl.java:[lines 2696-2786] \nIn class net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl$HostTrustManager \nIn method net.java.sip.communicator.impl.protocol.jabber.ProtocolProviderServiceJabberImpl$HostTrustManager.getAcceptedIssuers() \nAt ProtocolProviderServiceJabberImpl.java:[line 2707]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            return new X509Certificate[0];\n"}, "startLine": 2707}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/ProtocolProviderServiceJabberImpl.java"}, "contextRegion": {"snippet": {"text": "        {\n            return new X509Certificate[0];\n"}, "endLine": 2707, "startLine": 2706}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "WEAK_TRUST_MANAGER", "ruleIndex": 10}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ScServiceDiscoveryManager.java:[lines 48-653] \nIn class net.java.sip.communicator.impl.protocol.jabber.ScServiceDiscoveryManager \nIn method net.java.sip.communicator.impl.protocol.jabber.ScServiceDiscoveryManager.initDiscoInfoPersistentStore() \nAt ScServiceDiscoveryManager.java:[line 628] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/content/Context.getFilesDir()Ljava/io/File; \nUnknown source net/java/sip/communicator/service/protocol/AccountID.getUserID()Ljava/lang/String; \nUnknown source net/java/sip/communicator/service/protocol/AccountID.userID \nAt ScServiceDiscoveryManager.java:[line 627] \nAt ScServiceDiscoveryManager.java:[line 628] \nAt AccountID.java:[line 239]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        discoInfoStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir() + \"/discoInfoStore_\" + userID);\n"}, "startLine": 628}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/ScServiceDiscoveryManager.java"}, "contextRegion": {"snippet": {"text": "        String userID = parentProvider.getAccountID().getUserID();\n        discoInfoStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir() + \"/discoInfoStore_\" + userID);\n"}, "endLine": 628, "startLine": 627}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ScServiceDiscoveryManager.java:[lines 48-653] \nIn class net.java.sip.communicator.impl.protocol.jabber.ScServiceDiscoveryManager \nIn method net.java.sip.communicator.impl.protocol.jabber.ScServiceDiscoveryManager.initEntityPersistentStore() \nAt ScServiceDiscoveryManager.java:[line 600] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/content/Context.getFilesDir()Ljava/io/File; \nAt ScServiceDiscoveryManager.java:[line 600]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        entityStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir() + \"/entityStore\");\n"}, "startLine": 600}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/ScServiceDiscoveryManager.java"}, "contextRegion": {"snippet": {"text": "    {\n        entityStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir() + \"/entityStore\");\n"}, "endLine": 600, "startLine": 599}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ThumbnailedFile.java:[lines 43-88] \nIn class net.java.sip.communicator.impl.protocol.jabber.ThumbnailedFile \nIn method new net.java.sip.communicator.impl.protocol.jabber.ThumbnailedFile(File, int, int, String, byte[]) \nAt ThumbnailedFile.java:[line 43] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getPath()Ljava/lang/String;."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        super(file.getPath());\n"}, "startLine": 43}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/protocol/jabber/ThumbnailedFile.java"}, "contextRegion": {"snippet": {"text": "    {\n        super(file.getPath());\n"}, "endLine": 43, "startLine": 42}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This random generator (java.util.Random) is predictable \nAt DHCPProvisioningDiscover.java:[lines 60-234] \nIn class net.java.sip.communicator.impl.provdisc.dhcp.DHCPProvisioningDiscover \nIn method new net.java.sip.communicator.impl.provdisc.dhcp.DHCPProvisioningDiscover(int, byte) \nAt DHCPProvisioningDiscover.java:[line 81] \nValue java.util.Random."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        xid = new Random().nextInt();\n"}, "startLine": 81}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/provdisc/dhcp/DHCPProvisioningDiscover.java"}, "contextRegion": {"snippet": {"text": "        socket = new DatagramSocket(port);\n        xid = new Random().nextInt();\n"}, "endLine": 81, "startLine": 80}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PREDICTABLE_RANDOM", "ruleIndex": 2}, {"message": {"markdown": "", "text": "This random generator (java.util.Random) is predictable \nAt DHCPTransaction.java:[lines 30-117] \nIn class net.java.sip.communicator.impl.provdisc.dhcp.DHCPTransaction \nIn method net.java.sip.communicator.impl.provdisc.dhcp.DHCPTransaction.schedule() \nAt DHCPTransaction.java:[line 87] \nValue java.util.Random."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        int rand = new Random().nextInt(2) - 1;\n"}, "startLine": 87}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/provdisc/dhcp/DHCPTransaction.java"}, "contextRegion": {"snippet": {"text": "        /* choose a random between [-1, 1] */\n        int rand = new Random().nextInt(2) - 1;\n"}, "endLine": 87, "startLine": 86}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PREDICTABLE_RANDOM", "ruleIndex": 2}, {"message": {"markdown": "", "text": "This random generator (java.util.Random) is predictable \nAt DHCPTransaction.java:[lines 124-146] \nIn class net.java.sip.communicator.impl.provdisc.dhcp.DHCPTransaction$RetransmissionHandler \nIn method net.java.sip.communicator.impl.provdisc.dhcp.DHCPTransaction$RetransmissionHandler.run() \nAt DHCPTransaction.java:[line 133] \nValue java.util.Random."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            int rand = new Random().nextInt(2) - 1;\n"}, "startLine": 133}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/provdisc/dhcp/DHCPTransaction.java"}, "contextRegion": {"snippet": {"text": "        {\n            int rand = new Random().nextInt(2) - 1;\n"}, "endLine": 133, "startLine": 132}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PREDICTABLE_RANDOM", "ruleIndex": 2}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt SkinJarBuilder.java:[lines 28-446] \nIn class net.java.sip.communicator.impl.resources.util.SkinJarBuilder \nIn method net.java.sip.communicator.impl.resources.util.SkinJarBuilder.unzipIntoTmp(File) \nAt SkinJarBuilder.java:[line 158] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/util/zip/ZipEntry.getName()Ljava/lang/String;."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                    File file = new File(dest, entry.getName());\n"}, "startLine": 158}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/resources/util/SkinJarBuilder.java"}, "contextRegion": {"snippet": {"text": "                    ZipEntry entry = e.nextElement();\n                    File file = new File(dest, entry.getName());\n"}, "endLine": 158, "startLine": 157}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt SkinJarBuilder.java:[lines 28-446] \nIn class net.java.sip.communicator.impl.resources.util.SkinJarBuilder \nIn method net.java.sip.communicator.impl.resources.util.SkinJarBuilder.zipDir(String, ZipOutputStream) \nAt SkinJarBuilder.java:[line 237] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/impl/resources/util/SkinJarBuilder.zipDir(Ljava/lang/String;Ljava/util/zip/ZipOutputStream;)V parameter 1 \nAt SkinJarBuilder.java:[line 220]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        File directory = new File(dir2zip);\n"}, "startLine": 237}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/impl/resources/util/SkinJarBuilder.java"}, "contextRegion": {"snippet": {"text": "    {\n        File directory = new File(dir2zip);\n"}, "endLine": 237, "startLine": 236}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection \nAt LogUploadServiceImpl.java:[lines 31-99] \nIn class net.java.sip.communicator.plugin.loggingutils.LogUploadServiceImpl \nIn method net.java.sip.communicator.plugin.loggingutils.LogUploadServiceImpl.sendLogs(String[], String, String) \nAt LogUploadServiceImpl.java:[line 56] \nSink method java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; \nSink parameter 0 \nUnknown source org/atalk/service/fileaccess/FileAccessService.getPrivatePersistentFile(Ljava/lang/String;Lorg/atalk/service/fileaccess/FileCategory;)Ljava/io/File; \nAt LogUploadServiceImpl.java:[line 56]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                Runtime.getRuntime().exec(\"logcat -v time -f \" + logcatFile);\n"}, "startLine": 56}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/plugin/loggingutils/LogUploadServiceImpl.java"}, "contextRegion": {"snippet": {"text": "                logcatFile = LoggingUtilsActivator.getFileAccessService().getPrivatePersistentFile(logcatFN, FileCategory.LOG);\n                Runtime.getRuntime().exec(\"logcat -v time -f \" + logcatFile);\n"}, "endLine": 56, "startLine": 55}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "COMMAND_INJECTION", "ruleIndex": 8}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt LogsCollector.java:[lines 36-256] \nIn class net.java.sip.communicator.plugin.loggingutils.LogsCollector \nIn method net.java.sip.communicator.plugin.loggingutils.LogsCollector.collectLogs(File, File) \nAt LogsCollector.java:[line 77] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getName()Ljava/lang/String; \nAt LogsCollector.java:[line 77]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                destination = new File(destination.getParentFile(), destination.getName() + \".zip\");\n"}, "startLine": 77}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/plugin/loggingutils/LogsCollector.java"}, "contextRegion": {"snippet": {"text": "            if (!destination.getName().endsWith(\"zip\"))\n                destination = new File(destination.getParentFile(), destination.getName() + \".zip\");\n"}, "endLine": 77, "startLine": 76}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt LogsCollector.java:[lines 36-256] \nIn class net.java.sip.communicator.plugin.loggingutils.LogsCollector \nIn method net.java.sip.communicator.plugin.loggingutils.LogsCollector.collectLogs(File, File) \nAt LogsCollector.java:[line 80] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/plugin/loggingutils/LogsCollector.getDefaultFileName()Ljava/lang/String; \nUnknown source java/text/SimpleDateFormat.format(Ljava/util/Date;)Ljava/lang/String; \nAt LogsCollector.java:[line 80] \nAt LogsCollector.java:[line 105]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            destination = new File(destination, getDefaultFileName());\n"}, "startLine": 80}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/plugin/loggingutils/LogsCollector.java"}, "contextRegion": {"snippet": {"text": "        else {\n            destination = new File(destination, getDefaultFileName());\n"}, "endLine": 80, "startLine": 79}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt JabberStatusEnum.java:[lines 121-299] \nIn class net.java.sip.communicator.service.protocol.jabberconstants.JabberStatusEnum \nIn method net.java.sip.communicator.service.protocol.jabberconstants.JabberStatusEnum.getResourceAsStream(String, Class) \nAt JabberStatusEnum.java:[line 290] \nSink method java/net/URL.openStream()Ljava/io/InputStream; \nSink parameter 0 \nUnknown source net/java/sip/communicator/service/protocol/jabberconstants/JabberStatusEnum.getResourceAsStream(Ljava/lang/String;Ljava/lang/Class;)Ljava/io/InputStream; parameter 1 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nMethod usage not detected \nAt JabberStatusEnum.java:[line 156] \nAt JabberStatusEnum.java:[line 157] \nAt JabberStatusEnum.java:[line 159] \nAt JabberStatusEnum.java:[line 160] \nAt JabberStatusEnum.java:[line 162] \nAt JabberStatusEnum.java:[line 163] \nAt JabberStatusEnum.java:[line 165] \nAt JabberStatusEnum.java:[line 166] \nAt JabberStatusEnum.java:[line 168] \nAt JabberStatusEnum.java:[line 169] \nAt JabberStatusEnum.java:[line 171] \nAt JabberStatusEnum.java:[line 172] \nAt JabberStatusEnum.java:[line 174] \nAt JabberStatusEnum.java:[line 175] \nAt JabberStatusEnum.java:[line 177] \nAt JabberStatusEnum.java:[line 178] \nAt JabberStatusEnum.java:[line 180] \nAt JabberStatusEnum.java:[line 181] \nAt JabberStatusEnum.java:[line 250] \nAt JabberStatusEnum.java:[line 262] \nAt JabberStatusEnum.java:[line 290]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                return new URL(name).openStream();\n"}, "startLine": 290}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/service/protocol/jabberconstants/JabberStatusEnum.java"}, "contextRegion": {"snippet": {"text": "            try {\n                return new URL(name).openStream();\n"}, "endLine": 290, "startLine": 289}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "URLCONNECTION_SSRF_FD", "ruleIndex": 9}, {"message": {"markdown": "", "text": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks \nAt ConferenceInfoDocument.java:[lines 32-612] \nIn class net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument \nIn method new net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument(String) \nAt ConferenceInfoDocument.java:[line 206] \nValue DocumentBuilder.parse(...)."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                    .parse(new ByteArrayInputStream(bytes));\n"}, "startLine": 206}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/service/protocol/media/ConferenceInfoDocument.java"}, "contextRegion": {"snippet": {"text": "            document = XMLUtils.newDocumentBuilderFactory().newDocumentBuilder()\n                    .parse(new ByteArrayInputStream(bytes));\n"}, "endLine": 206, "startLine": 205}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "XXE_DOCUMENT", "ruleIndex": 6}, {"message": {"markdown": "", "text": "The use of TransformerFactory.newInstance(...) (TransformerFactory) is vulnerable to XML External Entity attacks \nAt ConferenceInfoDocument.java:[lines 32-612] \nIn class net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument \nIn method net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument.toXml(String) \nAt ConferenceInfoDocument.java:[line 450] \nValue TransformerFactory.newInstance(...)."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            Transformer transformer = TransformerFactory.newInstance().newTransformer();\n"}, "startLine": 450}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/service/protocol/media/ConferenceInfoDocument.java"}, "contextRegion": {"snippet": {"text": "        try {\n            Transformer transformer = TransformerFactory.newInstance().newTransformer();\n"}, "endLine": 450, "startLine": 449}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "XXE_DTD_TRANSFORM_FACTORY", "ruleIndex": 11}, {"message": {"markdown": "", "text": "The use of TransformerFactory.newInstance(...) is vulnerable to XSLT External Entity attacks \nAt ConferenceInfoDocument.java:[lines 32-612] \nIn class net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument \nIn method net.java.sip.communicator.service.protocol.media.ConferenceInfoDocument.toXml(String) \nAt ConferenceInfoDocument.java:[line 450] \nValue TransformerFactory.newInstance(...)."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            Transformer transformer = TransformerFactory.newInstance().newTransformer();\n"}, "startLine": 450}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/service/protocol/media/ConferenceInfoDocument.java"}, "contextRegion": {"snippet": {"text": "        try {\n            Transformer transformer = TransformerFactory.newInstance().newTransformer();\n"}, "endLine": 450, "startLine": 449}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "XXE_XSLT_TRANSFORM_FACTORY", "ruleIndex": 12}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileHandler.java:[lines 28-179] \nIn class net.java.sip.communicator.util.FileHandler \nIn method net.java.sip.communicator.util.FileHandler.checkDestinationDirectory(String) \nAt FileHandler.java:[line 175] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/util/FileHandler.checkDestinationDirectory(Ljava/lang/String;)V parameter 0 \nAt FileHandler.java:[line 126] \nAt FileHandler.java:[line 129] \nAt FileHandler.java:[line 135] \nAt FileHandler.java:[line 138] \nAt FileHandler.java:[line 140] \nAt FileHandler.java:[line 172] \nAt FileHandler.java:[line 173] \nAt FileHandler.java:[line 174]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                new File(dirName).mkdirs();\n"}, "startLine": 175}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/util/FileHandler.java"}, "contextRegion": {"snippet": {"text": "                dirName = dirName.replaceAll(\"%t\", System.getProperty(\"java.io.tmpdir\"));\n                new File(dirName).mkdirs();\n"}, "endLine": 175, "startLine": 174}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This random generator (java.util.Random) is predictable \nAt NetworkUtils.java:[lines 41-715] \nIn class net.java.sip.communicator.util.NetworkUtils \nIn method net.java.sip.communicator.util.NetworkUtils.<static initializer for NetworkUtils>() \nAt NetworkUtils.java:[line 88] \nValue java.util.Random."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "    private static Random portNumberGenerator = new Random();\n"}, "startLine": 88}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/util/NetworkUtils.java"}, "contextRegion": {"snippet": {"text": "     */\n    private static Random portNumberGenerator = new Random();\n"}, "endLine": 88, "startLine": 87}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PREDICTABLE_RANDOM", "ruleIndex": 2}, {"message": {"markdown": "", "text": "This random generator (java.util.Random) is predictable \nAt NetworkUtils.java:[lines 41-715] \nIn class net.java.sip.communicator.util.NetworkUtils \nIn method net.java.sip.communicator.util.NetworkUtils.<static initializer for NetworkUtils>() \nAt NetworkUtils.java:[line 104] \nValue java.util.Random."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "    private static final Random random = new Random();\n"}, "startLine": 104}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/util/NetworkUtils.java"}, "contextRegion": {"snippet": {"text": "     */\n    private static final Random random = new Random();\n"}, "endLine": 104, "startLine": 103}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PREDICTABLE_RANDOM", "ruleIndex": 2}, {"message": {"markdown": "", "text": "Possible information exposure through an error message \nAt ScLogFormatter.java:[lines 41-223] \nIn class net.java.sip.communicator.util.ScLogFormatter \nIn method net.java.sip.communicator.util.ScLogFormatter.format(LogRecord) \nAt ScLogFormatter.java:[line 145]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                record.getThrown().printStackTrace(pw);\n"}, "startLine": 145}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/util/ScLogFormatter.java"}, "contextRegion": {"snippet": {"text": "                PrintWriter pw = new PrintWriter(sw);\n                record.getThrown().printStackTrace(pw);\n"}, "endLine": 145, "startLine": 144}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE", "ruleIndex": 13}, {"message": {"markdown": "", "text": "This API SHA-1 (SHA-1) is not a recommended cryptographic hash function \nAt Sha1Crypto.java:[lines 12-79] \nIn class net.java.sip.communicator.util.Sha1Crypto \nIn method net.java.sip.communicator.util.Sha1Crypto.encode(String) \nAt Sha1Crypto.java:[line 26] \nValue SHA-1."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        MessageDigest messageDigest = MessageDigest.getInstance(\"SHA-1\");\n"}, "startLine": 26}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/util/Sha1Crypto.java"}, "contextRegion": {"snippet": {"text": "    {\n        MessageDigest messageDigest = MessageDigest.getInstance(\"SHA-1\");\n"}, "endLine": 26, "startLine": 25}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "WEAK_MESSAGE_DIGEST_SHA1", "ruleIndex": 1}, {"message": {"markdown": "", "text": "This API SHA-1 (SHA-1) is not a recommended cryptographic hash function \nAt Sha1Crypto.java:[lines 12-79] \nIn class net.java.sip.communicator.util.Sha1Crypto \nIn method net.java.sip.communicator.util.Sha1Crypto.encode(byte[]) \nAt Sha1Crypto.java:[line 47] \nValue SHA-1."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        MessageDigest messageDigest = MessageDigest.getInstance(\"SHA-1\");\n"}, "startLine": 47}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/util/Sha1Crypto.java"}, "contextRegion": {"snippet": {"text": "    {\n        MessageDigest messageDigest = MessageDigest.getInstance(\"SHA-1\");\n"}, "endLine": 47, "startLine": 46}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "WEAK_MESSAGE_DIGEST_SHA1", "ruleIndex": 1}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt DeleteOnHaltHook.java:[lines 24-66] \nIn class net.java.sip.communicator.util.launchutils.DeleteOnHaltHook \nIn method net.java.sip.communicator.util.launchutils.DeleteOnHaltHook.runHooks() \nAt DeleteOnHaltHook.java:[line 61] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nUnknown source net/java/sip/communicator/util/launchutils/DeleteOnHaltHook.files \nAt DeleteOnHaltHook.java:[line 51] \nAt DeleteOnHaltHook.java:[line 57] \nAt DeleteOnHaltHook.java:[line 59] \nAt DeleteOnHaltHook.java:[line 60]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                new File(filename).delete();\n"}, "startLine": 61}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/util/launchutils/DeleteOnHaltHook.java"}, "contextRegion": {"snippet": {"text": "            for (String filename : toBeDeleted)\n                new File(filename).delete();\n"}, "endLine": 61, "startLine": 60}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt LaunchArgHandler.java:[lines 33-517] \nIn class net.java.sip.communicator.util.launchutils.LaunchArgHandler \nIn method net.java.sip.communicator.util.launchutils.LaunchArgHandler.handleConfigArg(String) \nAt LaunchArgHandler.java:[line 357] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source net/java/sip/communicator/util/launchutils/LaunchArgHandler.handleConfigArg(Ljava/lang/String;)I parameter 0 \nAt AEGetURLEventHandler.java:[line 48] \nAt AEGetURLEventHandler.java:[line 49] \nAt LaunchArgHandler.java:[line 240] \nAt LaunchArgHandler.java:[line 254] \nAt LaunchArgHandler.java:[line 354]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        File configDir = new File(configArg);\n"}, "startLine": 357}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/net/java/sip/communicator/util/launchutils/LaunchArgHandler.java"}, "contextRegion": {"snippet": {"text": "        }\n        File configDir = new File(configArg);\n"}, "endLine": 357, "startLine": 356}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "Broadcast intents could be received by a malicious application \nAt aTalkApp.java:[lines 49-525] \nIn class org.atalk.android.aTalkApp \nIn method org.atalk.android.aTalkApp.doShutdownApplication() \nAt aTalkApp.java:[line 187]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        sendBroadcast(exitIntent);\n"}, "startLine": 187}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/android/aTalkApp.java"}, "contextRegion": {"snippet": {"text": "        exitIntent.setAction(ACTION_EXIT);\n        sendBroadcast(exitIntent);\n"}, "endLine": 187, "startLine": 186}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "ANDROID_BROADCAST", "ruleIndex": 14}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AccountsListActivity.java:[lines 47-268] \nIn class org.atalk.android.gui.account.AccountsListActivity \nIn method org.atalk.android.gui.account.AccountsListActivity.removeAccountPersistentStore(AccountID) \nAt AccountsListActivity.java:[line 260] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/content/Context.getFilesDir()Ljava/io/File; \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.purgeItemFor(Lorg/jxmpp/jid/BareJid;)Z parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.clearPersistentStorage(Lorg/jxmpp/jid/BareJid;)V parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nUnknown source net/java/sip/communicator/service/protocol/AccountID.getBareJid()Lorg/jxmpp/jid/BareJid; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nUnknown source net/java/sip/communicator/service/protocol/AccountID.userBareJid \nAt AccountID.java:[line 245] \nAt AccountsListActivity.java:[line 242] \nAt AccountsListActivity.java:[line 260] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 437] \nAt AvatarManager.java:[line 468] \nAt JidToHashCacheFile.java:[line 131]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            File discoInfoStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir()\n"}, "startLine": 260}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/android/gui/account/AccountsListActivity.java"}, "contextRegion": {"snippet": {"text": "            // File discoInfoStoreDirectory = discoveryInfoManager.getDiscoInfoPersistentStore();\n            File discoInfoStoreDirectory = new File(aTalkApp.getGlobalContext().getFilesDir()\n"}, "endLine": 260, "startLine": 259}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ChatActivity.java:[lines 82-1154] \nIn class org.atalk.android.gui.chat.ChatActivity \nIn method org.atalk.android.gui.chat.ChatActivity.onActivityResult(int, int, Intent) \nAt ChatActivity.java:[line 930] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getPath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getUriRealPathAboveKitkat(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source android/net/Uri.getLastPathSegment()Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePathWithCreate(Landroid/content/Context;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source android/net/Uri.getPath()Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getRealPath(Landroid/content/ContentResolver;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source android/database/Cursor.getString(I)Ljava/lang/String; \nAt ChatActivity.java:[line 928] \nAt ChatActivity.java:[line 929] \nAt FilePathHelper.java:[line 71] \nAt FilePathHelper.java:[line 73] \nAt FilePathHelper.java:[line 90] \nAt FilePathHelper.java:[line 94] \nAt FilePathHelper.java:[line 219] \nAt FilePathHelper.java:[line 251] \nAt FilePathHelper.java:[line 260]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                                openDownloadable(new File(filePath));\n"}, "startLine": 930}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/android/gui/chat/ChatActivity.java"}, "contextRegion": {"snippet": {"text": "                            if (StringUtils.isNotEmpty(filePath))\n                                openDownloadable(new File(filePath));\n"}, "endLine": 930, "startLine": 929}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt ChatActivity.java:[lines 1073-1142] \nIn class org.atalk.android.gui.chat.ChatActivity$MediaShareAsynTask \nIn method org.atalk.android.gui.chat.ChatActivity$MediaShareAsynTask.getUrlInfo(String) \nAt ChatActivity.java:[line 1125] \nSink method java/net/URL.openConnection()Ljava/net/URLConnection; \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/ChatActivity$MediaShareAsynTask.getUrlInfo(Ljava/lang/String;)Ljava/lang/String; parameter 0 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nAt ChatActivity.java:[line 1082] \nAt ChatActivity.java:[line 1123] \nAt ChatActivity.java:[line 1124]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                HttpURLConnection httpConnection = (HttpURLConnection) mUrl.openConnection();\n"}, "startLine": 1125}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/android/gui/chat/ChatActivity.java"}, "contextRegion": {"snippet": {"text": "                URL mUrl = new URL(urlString);\n                HttpURLConnection httpConnection = (HttpURLConnection) mUrl.openConnection();\n"}, "endLine": 1125, "startLine": 1124}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "URLCONNECTION_SSRF_FD", "ruleIndex": 9}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ChatFragment.java:[lines 567-858] \nIn class org.atalk.android.gui.chat.ChatFragment$2 \nIn method org.atalk.android.gui.chat.ChatFragment$2.onActionItemClicked(ActionMode, MenuItem) \nAt ChatFragment.java:[line 797] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/ChatMessage.getMessage()Ljava/lang/String;."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                                                file = new File(chatMsg.getMessage());\n"}, "startLine": 797}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/android/gui/chat/ChatFragment.java"}, "contextRegion": {"snippet": {"text": "                                            else if ((file = chatListAdapter.getFileName(cPos)) == null) {\n                                                file = new File(chatMsg.getMessage());\n"}, "endLine": 797, "startLine": 796}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/FileInputStream.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt MetaContactChatTransport.java:[lines 45-848] \nIn class org.atalk.android.gui.chat.MetaContactChatTransport \nIn method org.atalk.android.gui.chat.MetaContactChatTransport.getFileThumbnail(File) \nAt MetaContactChatTransport.java:[line 826] \nSink method java/io/FileInputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/MetaContactChatTransport.getFileThumbnail(Ljava/io/File;)[B parameter 0 \nUnknown source java/io/File.toString()Ljava/lang/String; \nMethod usage not detected \nAt MetaContactChatTransport.java:[line 576] \nAt MetaContactChatTransport.java:[line 591] \nAt MetaContactChatTransport.java:[line 614] \nAt MetaContactChatTransport.java:[line 824]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                FileInputStream fis = new FileInputStream(imagePath);\n"}, "startLine": 826}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/android/gui/chat/MetaContactChatTransport.java"}, "contextRegion": {"snippet": {"text": "            try {\n                FileInputStream fis = new FileInputStream(imagePath);\n"}, "endLine": 826, "startLine": 825}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt CaptchaDialog.java:[lines 91-340] \nIn class org.atalk.android.gui.chat.conference.CaptchaDialog \nIn method org.atalk.android.gui.chat.conference.CaptchaDialog.initCaptchaData() \nAt CaptchaDialog.java:[line 301] \nSink method java/net/URL.openConnection()Ljava/net/URLConnection; \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/xdata/FormField.getFirstValue()Ljava/lang/String; \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nAt CaptchaDialog.java:[line 300]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                        bmCaptcha = BitmapFactory.decodeStream(uri.openConnection().getInputStream());\n"}, "startLine": 301}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/android/gui/chat/conference/CaptchaDialog.java"}, "contextRegion": {"snippet": {"text": "                        URL uri = new URL(urlString);\n                        bmCaptcha = BitmapFactory.decodeStream(uri.openConnection().getInputStream());\n"}, "endLine": 301, "startLine": 300}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "URLCONNECTION_SSRF_FD", "ruleIndex": 9}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileHttpDownloadConversation.java:[lines 59-608] \nIn class org.atalk.android.gui.chat.filetransfer.FileHttpDownloadConversation \nIn method org.atalk.android.gui.chat.filetransfer.FileHttpDownloadConversation.checkProgress() \nAt FileHttpDownloadConversation.java:[line 546] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/filetransfer/FileHttpDownloadConversation.fileName \nAt FileHttpDownloadConversation.java:[line 546]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            File tmpFile = new File(FileBackend.getaTalkStore(FileBackend.TMP, true), fileName);\n"}, "startLine": 546}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/android/gui/chat/filetransfer/FileHttpDownloadConversation.java"}, "contextRegion": {"snippet": {"text": "        if (lastJobStatus == DownloadManager.STATUS_FAILED || waitTime < 0) {\n            File tmpFile = new File(FileBackend.getaTalkStore(FileBackend.TMP, true), fileName);\n"}, "endLine": 546, "startLine": 545}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileHttpDownloadConversation.java:[lines 59-608] \nIn class org.atalk.android.gui.chat.filetransfer.FileHttpDownloadConversation \nIn method org.atalk.android.gui.chat.filetransfer.FileHttpDownloadConversation.download(Uri) \nAt FileHttpDownloadConversation.java:[line 362] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/filetransfer/FileHttpDownloadConversation.fileName \nAt FileHttpDownloadConversation.java:[line 362]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            File tmpFile = new File(FileBackend.getaTalkStore(FileBackend.TMP, true), fileName);\n"}, "startLine": 362}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/android/gui/chat/filetransfer/FileHttpDownloadConversation.java"}, "contextRegion": {"snippet": {"text": "        try {\n            File tmpFile = new File(FileBackend.getaTalkStore(FileBackend.TMP, true), fileName);\n"}, "endLine": 362, "startLine": 361}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileHttpDownloadConversation.java:[lines 427-500] \nIn class org.atalk.android.gui.chat.filetransfer.FileHttpDownloadConversation$DownloadReceiver \nIn method org.atalk.android.gui.chat.filetransfer.FileHttpDownloadConversation$DownloadReceiver.onReceive(Context, Intent) \nAt FileHttpDownloadConversation.java:[line 443] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getPath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getUriRealPathAboveKitkat(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source android/net/Uri.getLastPathSegment()Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePathWithCreate(Landroid/content/Context;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source android/net/Uri.getPath()Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getRealPath(Landroid/content/ContentResolver;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source android/database/Cursor.getString(I)Ljava/lang/String; \nAt FileHttpDownloadConversation.java:[line 443] \nAt FilePathHelper.java:[line 71] \nAt FilePathHelper.java:[line 73] \nAt FilePathHelper.java:[line 90] \nAt FilePathHelper.java:[line 94] \nAt FilePathHelper.java:[line 219] \nAt FilePathHelper.java:[line 251] \nAt FilePathHelper.java:[line 260]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                    File inFile = new File(FilePathHelper.getPath(context, fileUri));\n"}, "startLine": 443}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/android/gui/chat/filetransfer/FileHttpDownloadConversation.java"}, "contextRegion": {"snippet": {"text": "                    Uri fileUri = downloadManager.getUriForDownloadedFile(lastDownloadId);\n                    File inFile = new File(FilePathHelper.getPath(context, fileUri));\n"}, "endLine": 443, "startLine": 442}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileSendConversation.java:[lines 51-227] \nIn class org.atalk.android.gui.chat.filetransfer.FileSendConversation \nIn method org.atalk.android.gui.chat.filetransfer.FileSendConversation.newInstance(ChatFragment, String, String, String, boolean) \nAt FileSendConversation.java:[line 69] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/filetransfer/FileSendConversation.newInstance(Lorg/atalk/android/gui/chat/ChatFragment;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lorg/atalk/android/gui/chat/filetransfer/FileSendConversation; parameter 1 \nAt ChatFragment.java:[line 1387]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        fragmentSFC.mXferFile = new File(fileName);\n"}, "startLine": 69}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/android/gui/chat/filetransfer/FileSendConversation.java"}, "contextRegion": {"snippet": {"text": "        fragmentSFC.mSendTo = sendTo;\n        fragmentSFC.mXferFile = new File(fileName);\n"}, "endLine": 69, "startLine": 68}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileTransferConversation.java:[lines 62-1015] \nIn class org.atalk.android.gui.chat.filetransfer.FileTransferConversation \nIn method org.atalk.android.gui.chat.filetransfer.FileTransferConversation.setTransferFilePath(String, String) \nAt FileTransferConversation.java:[line 954] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/filetransfer/FileTransferConversation.setTransferFilePath(Ljava/lang/String;Ljava/lang/String;)V parameter 1 \nAt FileHttpDownloadConversation.java:[line 280] \nAt FileReceiveConversation.java:[line 222]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        mXferFile = new File(downloadDir, fileName);\n"}, "startLine": 954}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/android/gui/chat/filetransfer/FileTransferConversation.java"}, "contextRegion": {"snippet": {"text": "        File downloadDir = FileBackend.getaTalkStore(downloadPath, true);\n        mXferFile = new File(downloadDir, fileName);\n"}, "endLine": 954, "startLine": 953}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileTransferConversation.java:[lines 62-1015] \nIn class org.atalk.android.gui.chat.filetransfer.FileTransferConversation \nIn method org.atalk.android.gui.chat.filetransfer.FileTransferConversation.setTransferFilePath(String, String) \nAt FileTransferConversation.java:[line 965] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/android/gui/chat/filetransfer/FileTransferConversation.setTransferFilePath(Ljava/lang/String;Ljava/lang/String;)V parameter 1 \nAt FileHttpDownloadConversation.java:[line 280] \nAt FileReceiveConversation.java:[line 222] \nAt FileTransferConversation.java:[line 963] \nAt FileTransferConversation.java:[line 964]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            mXferFile = new File(downloadDir, newFileName);\n"}, "startLine": 965}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/android/gui/chat/filetransfer/FileTransferConversation.java"}, "contextRegion": {"snippet": {"text": "                    + ++index + fileName.substring(filenameLength);\n            mXferFile = new File(downloadDir, newFileName);\n"}, "endLine": 965, "startLine": 964}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt IBRCaptchaProcessDialog.java:[lines 72-579] \nIn class org.atalk.android.gui.login.IBRCaptchaProcessDialog \nIn method org.atalk.android.gui.login.IBRCaptchaProcessDialog.lambda$getCaptcha$2(String) \nAt IBRCaptchaProcessDialog.java:[line 332] \nSink method java/net/URL.openConnection()Ljava/net/URLConnection; \nSink parameter 0 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nUnknown source org/atalk/android/gui/login/IBRCaptchaProcessDialog.lambda$getCaptcha$2(Ljava/lang/String;)V parameter 0 \nMethod usage not detected \nAt IBRCaptchaProcessDialog.java:[line 330] \nAt IBRCaptchaProcessDialog.java:[line 331]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                    mCaptcha = BitmapFactory.decodeStream(uri.openConnection().getInputStream());\n"}, "startLine": 332}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/android/gui/login/IBRCaptchaProcessDialog.java"}, "contextRegion": {"snippet": {"text": "                    URL uri = new URL(urlString);\n                    mCaptcha = BitmapFactory.decodeStream(uri.openConnection().getInputStream());\n"}, "endLine": 332, "startLine": 331}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "URLCONNECTION_SSRF_FD", "ruleIndex": 9}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt MediaPreviewAdapter.java:[lines 39-118] \nIn class org.atalk.android.gui.share.MediaPreviewAdapter \nIn method org.atalk.android.gui.share.MediaPreviewAdapter.onBindViewHolder(MediaPreviewAdapter$MediaPreviewViewHolder, int) \nAt MediaPreviewAdapter.java:[line 72] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getUriRealPathAboveKitkat(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getPath(Landroid/content/Context;Lorg/atalk/android/gui/share/Attachment;)Ljava/lang/String; \nUnknown source android/net/Uri.getLastPathSegment()Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePathWithCreate(Landroid/content/Context;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source android/net/Uri.getPath()Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getRealPath(Landroid/content/ContentResolver;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source android/database/Cursor.getString(I)Ljava/lang/String; \nAt MediaPreviewAdapter.java:[line 72] \nAt FilePathHelper.java:[line 56] \nAt FilePathHelper.java:[line 58] \nAt FilePathHelper.java:[line 90] \nAt FilePathHelper.java:[line 94] \nAt FilePathHelper.java:[line 219] \nAt FilePathHelper.java:[line 251] \nAt FilePathHelper.java:[line 260]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        final File file = new File(FilePathHelper.getPath(chatActivity, attachment));\n"}, "startLine": 72}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/android/gui/share/MediaPreviewAdapter.java"}, "contextRegion": {"snippet": {"text": "        final Attachment attachment = mediaPreviews.get(position);\n        final File file = new File(FilePathHelper.getPath(chatActivity, attachment));\n"}, "endLine": 72, "startLine": 71}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt EntityListHelper.java:[lines 328-372] \nIn class org.atalk.android.gui.util.EntityListHelper$doEraseAllEntityHistory \nIn method org.atalk.android.gui.util.EntityListHelper$doEraseAllEntityHistory.doInBackground(Void[]) \nAt EntityListHelper.java:[line 352] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nUnknown source net/java/sip/communicator/service/msghistory/MessageHistoryService.getLocallyStoredFilePath()Ljava/util/List; \nAt EntityListHelper.java:[line 351]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                    File file = new File(msgFile);\n"}, "startLine": 352}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/android/gui/util/EntityListHelper.java"}, "contextRegion": {"snippet": {"text": "                for (String msgFile : msgFiles) {\n                    File file = new File(msgFile);\n"}, "endLine": 352, "startLine": 351}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt EntityListHelper.java:[lines 222-290] \nIn class org.atalk.android.gui.util.EntityListHelper$doEraseEntityChatHistory \nIn method org.atalk.android.gui.util.EntityListHelper$doEraseEntityChatHistory.doInBackground(Object[]) \nAt EntityListHelper.java:[line 254] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nUnknown source net/java/sip/communicator/service/msghistory/MessageHistoryService.getLocallyStoredFilePath(Ljava/lang/Object;)Ljava/util/List; \nAt EntityListHelper.java:[line 253]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                            msgFiles.add(new File(filePath));\n"}, "startLine": 254}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/android/gui/util/EntityListHelper.java"}, "contextRegion": {"snippet": {"text": "                        for (String filePath : filePathDel) {\n                            msgFiles.add(new File(filePath));\n"}, "endLine": 254, "startLine": 253}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt XhtmlImageParser.java:[lines 68-114] \nIn class org.atalk.android.gui.util.XhtmlImageParser$HttpGetDrawableTask \nIn method org.atalk.android.gui.util.XhtmlImageParser$HttpGetDrawableTask.getDrawable(String) \nAt XhtmlImageParser.java:[line 104] \nSink method java/net/URL.openConnection()Ljava/net/URLConnection; \nSink parameter 0 \nUnknown source org/atalk/android/gui/util/XhtmlImageParser$HttpGetDrawableTask.getDrawable(Ljava/lang/String;)Landroid/graphics/drawable/Drawable; parameter 0 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nMethod usage not detected \nAt XhtmlImageParser.java:[line 68] \nAt XhtmlImageParser.java:[line 74] \nAt XhtmlImageParser.java:[line 101] \nAt XhtmlImageParser.java:[line 103]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                URLConnection urlConnection = sourceURL.openConnection();\n"}, "startLine": 104}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/android/gui/util/XhtmlImageParser.java"}, "contextRegion": {"snippet": {"text": "                URL sourceURL = new URL(urlString);\n                URLConnection urlConnection = sourceURL.openConnection();\n"}, "endLine": 104, "startLine": 103}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "URLCONNECTION_SSRF_FD", "ruleIndex": 9}, {"message": {"markdown": "", "text": "WebView with JavaScript enabled \nAt WebViewFragment.java:[lines 48-264] \nIn class org.atalk.android.gui.webview.WebViewFragment \nIn method org.atalk.android.gui.webview.WebViewFragment.onCreateView(LayoutInflater, ViewGroup, Bundle) \nAt WebViewFragment.java:[line 86]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        webSettings.setJavaScriptEnabled(true);\n"}, "startLine": 86}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/android/gui/webview/WebViewFragment.java"}, "contextRegion": {"snippet": {"text": "        final WebSettings webSettings = webview.getSettings();\n        webSettings.setJavaScriptEnabled(true);\n"}, "endLine": 86, "startLine": 85}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "ANDROID_WEB_VIEW_JAVASCRIPT", "ruleIndex": 15}, {"message": {"markdown": "", "text": "WebView with JavaScript interface \nAt WebViewFragment.java:[lines 48-264] \nIn class org.atalk.android.gui.webview.WebViewFragment \nIn method org.atalk.android.gui.webview.WebViewFragment.onCreateView(LayoutInflater, ViewGroup, Bundle) \nAt WebViewFragment.java:[line 89]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        webview.addJavascriptInterface(aTalkApp.getGlobalContext(), \"Android\");\n"}, "startLine": 89}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/android/gui/webview/WebViewFragment.java"}, "contextRegion": {"snippet": {"text": "\n        webview.addJavascriptInterface(aTalkApp.getGlobalContext(), \"Android\");\n"}, "endLine": 89, "startLine": 88}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "ANDROID_WEB_VIEW_JAVASCRIPT_INTERFACE", "ruleIndex": 16}, {"message": {"markdown": "", "text": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt WebViewFragment.java:[lines 48-264] \nIn class org.atalk.android.gui.webview.WebViewFragment \nIn method org.atalk.android.gui.webview.WebViewFragment.getBitmapFromURL(String) \nAt WebViewFragment.java:[line 227] \nSink method java/net/URL.openConnection()Ljava/net/URLConnection; \nSink parameter 0 \nUnknown source org/atalk/android/gui/webview/WebViewFragment.getBitmapFromURL(Ljava/lang/String;)Landroid/graphics/Bitmap; parameter 0 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nMethod usage not detected \nAt WebViewFragment.java:[line 226]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n"}, "startLine": 227}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/android/gui/webview/WebViewFragment.java"}, "contextRegion": {"snippet": {"text": "            URL url = new URL(src);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n"}, "endLine": 227, "startLine": 226}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "URLCONNECTION_SSRF_FD", "ruleIndex": 9}, {"message": {"markdown": "", "text": "This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input \nAt AudioBgService.java:[lines 37-624] \nIn class org.atalk.android.plugin.audioservice.AudioBgService \nIn method org.atalk.android.plugin.audioservice.AudioBgService.createMediaVoiceFile() \nAt AudioBgService.java:[line 620] \nSink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; \nSink parameter 0 \nUnknown source org/atalk/persistance/FileBackend.getaTalkStore(Ljava/lang/String;Z)Ljava/io/File; \nUnknown source java/io/File.<init>(Ljava/lang/String;)V \nAt AudioBgService.java:[line 613] \nAt FileBackend.java:[line 236]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            voiceFile = File.createTempFile(\"voice-\", \".3gp\", mediaDir);\n"}, "startLine": 620}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/android/plugin/audioservice/AudioBgService.java"}, "contextRegion": {"snippet": {"text": "        try {\n            voiceFile = File.createTempFile(\"voice-\", \".3gp\", mediaDir);\n"}, "endLine": 620, "startLine": 619}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AudioBgService.java:[lines 37-624] \nIn class org.atalk.android.plugin.audioservice.AudioBgService \nIn method org.atalk.android.plugin.audioservice.AudioBgService.onStartCommand(Intent, int, int) \nAt AudioBgService.java:[line 161] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String;."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                    File soundFile = new File(audioFile.getAbsolutePath());\n"}, "startLine": 161}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/android/plugin/audioservice/AudioBgService.java"}, "contextRegion": {"snippet": {"text": "                if (audioFile != null) {\n                    File soundFile = new File(audioFile.getAbsolutePath());\n"}, "endLine": 161, "startLine": 160}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt CertConfigEntryDialog.java:[lines 56-479] \nIn class org.atalk.android.plugin.certconfig.CertConfigEntryDialog \nIn method org.atalk.android.plugin.certconfig.CertConfigEntryDialog.loadKeyStore() \nAt CertConfigEntryDialog.java:[line 232] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/widget/TextView.getText()Ljava/lang/CharSequence; \nUnknown source java/lang/CharSequence.toString()Ljava/lang/String; \nUnknown source org/atalk/android/gui/util/ViewUtil.toString(Landroid/widget/TextView;)Ljava/lang/String; \nAt ViewUtil.java:[line 185] \nAt CertConfigEntryDialog.java:[line 228]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        final File f = new File(keyStore);\n"}, "startLine": 232}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/android/plugin/certconfig/CertConfigEntryDialog.java"}, "contextRegion": {"snippet": {"text": "\n        final File f = new File(keyStore);\n"}, "endLine": 232, "startLine": 231}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt CertConfigEntryDialog.java:[lines 56-479] \nIn class org.atalk.android.plugin.certconfig.CertConfigEntryDialog \nIn method org.atalk.android.plugin.certconfig.CertConfigEntryDialog.onActivityResult(int, int, Intent) \nAt CertConfigEntryDialog.java:[line 329] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getPath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getUriRealPathAboveKitkat(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source android/net/Uri.getLastPathSegment()Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePathWithCreate(Landroid/content/Context;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source android/net/Uri.getPath()Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getRealPath(Landroid/content/ContentResolver;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source android/database/Cursor.getString(I)Ljava/lang/String; \nAt CertConfigEntryDialog.java:[line 329] \nAt FilePathHelper.java:[line 71] \nAt FilePathHelper.java:[line 73] \nAt FilePathHelper.java:[line 90] \nAt FilePathHelper.java:[line 94] \nAt FilePathHelper.java:[line 219] \nAt FilePathHelper.java:[line 251] \nAt FilePathHelper.java:[line 260]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                    File inFile = new File(FilePathHelper.getPath(mContext, fileUri));\n"}, "startLine": 329}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/android/plugin/certconfig/CertConfigEntryDialog.java"}, "contextRegion": {"snippet": {"text": "                if (fileUri != null) {\n                    File inFile = new File(FilePathHelper.getPath(mContext, fileUri));\n"}, "endLine": 329, "startLine": 328}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection \nAt ExceptionHandler.java:[lines 49-130] \nIn class org.atalk.android.plugin.errorhandler.ExceptionHandler \nIn method org.atalk.android.plugin.errorhandler.ExceptionHandler.uncaughtException(Thread, Throwable) \nAt ExceptionHandler.java:[line 87] \nSink method java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nAt ExceptionHandler.java:[line 87]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "\t\t\tRuntime.getRuntime().exec(\"logcat -v time -f \" + logcatFile.getAbsolutePath());\n"}, "startLine": 87}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/android/plugin/errorhandler/ExceptionHandler.java"}, "contextRegion": {"snippet": {"text": "\t\t\t\t\t.getPrivatePersistentFile(logcatFN, FileCategory.LOG);\n\t\t\tRuntime.getRuntime().exec(\"logcat -v time -f \" + logcatFile.getAbsolutePath());\n"}, "endLine": 87, "startLine": 86}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "COMMAND_INJECTION", "ruleIndex": 8}, {"message": {"markdown": "", "text": "This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input \nAt TTSActivity.java:[lines 30-407] \nIn class org.atalk.android.plugin.textspeech.TTSActivity \nIn method org.atalk.android.plugin.textspeech.TTSActivity.createTtsSpeechFile() \nAt TTSActivity.java:[line 387] \nSink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; \nSink parameter 0 \nUnknown source org/atalk/persistance/FileBackend.getaTalkStore(Ljava/lang/String;Z)Ljava/io/File; \nUnknown source java/io/File.<init>(Ljava/lang/String;)V \nAt TTSActivity.java:[line 380] \nAt FileBackend.java:[line 236]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            ttsFile = File.createTempFile(\"tts_\", \".wav\", mediaDir);\n"}, "startLine": 387}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/android/plugin/textspeech/TTSActivity.java"}, "contextRegion": {"snippet": {"text": "        try {\n            ttsFile = File.createTempFile(\"tts_\", \".wav\", mediaDir);\n"}, "endLine": 387, "startLine": 386}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt TTSActivity.java:[lines 30-407] \nIn class org.atalk.android.plugin.textspeech.TTSActivity \nIn method org.atalk.android.plugin.textspeech.TTSActivity.saveToAudioFile(String) \nAt TTSActivity.java:[line 349] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String;."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        mTTS.synthesizeToFile(text, null, new File(audioFilename), mUtteranceID);\n"}, "startLine": 349}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/android/plugin/textspeech/TTSActivity.java"}, "contextRegion": {"snippet": {"text": "\n        mTTS.synthesizeToFile(text, null, new File(audioFilename), mUtteranceID);\n"}, "endLine": 349, "startLine": 348}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "Possible information exposure through an error message \nAt AndroidLogFormatter.java:[lines 19-128] \nIn class org.atalk.android.util.AndroidLogFormatter \nIn method org.atalk.android.util.AndroidLogFormatter.format(LogRecord) \nAt AndroidLogFormatter.java:[line 78]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "\t\t\t\trecord.getThrown().printStackTrace(pw);\n"}, "startLine": 78}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/android/util/AndroidLogFormatter.java"}, "contextRegion": {"snippet": {"text": "\t\t\t\tPrintWriter pw = new PrintWriter(sw);\n\t\t\t\trecord.getThrown().printStackTrace(pw);\n"}, "endLine": 78, "startLine": 77}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE", "ruleIndex": 13}, {"message": {"markdown": "", "text": "Unsafe comparison of hash that are susceptible to timing attack \nAt X509CertificateView.java:[lines 55-370] \nIn class org.atalk.impl.androidcertdialog.X509CertificateView \nIn method org.atalk.impl.androidcertdialog.X509CertificateView.renderX509(StringBuilder, X509Certificate) \nAt X509CertificateView.java:[line 146] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source java/util/Map.entrySet()Ljava/util/Set; \nUnknown source org/atalk/impl/androidcertdialog/X509CertificateView.splitRdn(Ljava/lang/String;)Ljava/util/Map; parameter 0 \nUnknown source java/util/Map.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nUnknown source android/content/Context.getString(I)Ljava/lang/String; \nUnknown source java/util/Map$Entry.getKey()Ljava/lang/Object; \nUnknown source javax/security/auth/x500/X500Principal.getName()Ljava/lang/String; \nUnknown source org/atalk/impl/androidcertdialog/X509CertificateView.splitRdn(Ljava/lang/String;)Ljava/util/Map; \nAt X509CertificateView.java:[line 132] \nAt X509CertificateView.java:[line 134] \nAt X509CertificateView.java:[line 135] \nAt X509CertificateView.java:[line 363] \nAt X509CertificateView.java:[line 368]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                if ((\"!\" + lblKey + \"!\").equals(lbl))\n"}, "startLine": 146}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/androidcertdialog/X509CertificateView.java"}, "contextRegion": {"snippet": {"text": "                }\n                if ((\"!\" + lblKey + \"!\").equals(lbl))\n"}, "endLine": 146, "startLine": 145}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "UNSAFE_HASH_EQUALS", "ruleIndex": 3}, {"message": {"markdown": "", "text": "Unsafe comparison of hash that are susceptible to timing attack \nAt X509CertificateView.java:[lines 55-370] \nIn class org.atalk.impl.androidcertdialog.X509CertificateView \nIn method org.atalk.impl.androidcertdialog.X509CertificateView.renderX509(StringBuilder, X509Certificate) \nAt X509CertificateView.java:[line 173] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source java/util/Map.entrySet()Ljava/util/Set; \nUnknown source org/atalk/impl/androidcertdialog/X509CertificateView.splitRdn(Ljava/lang/String;)Ljava/util/Map; parameter 0 \nUnknown source java/util/Map.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; \nUnknown source java/util/Iterator.next()Ljava/lang/Object; \nUnknown source android/content/Context.getString(I)Ljava/lang/String; \nUnknown source java/util/Map$Entry.getKey()Ljava/lang/Object; \nUnknown source javax/security/auth/x500/X500Principal.getName()Ljava/lang/String; \nUnknown source org/atalk/impl/androidcertdialog/X509CertificateView.splitRdn(Ljava/lang/String;)Ljava/util/Map; \nAt X509CertificateView.java:[line 159] \nAt X509CertificateView.java:[line 161] \nAt X509CertificateView.java:[line 162] \nAt X509CertificateView.java:[line 363] \nAt X509CertificateView.java:[line 368]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                if ((\"!\" + lblKey + \"!\").equals(lbl))\n"}, "startLine": 173}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/androidcertdialog/X509CertificateView.java"}, "contextRegion": {"snippet": {"text": "                }\n                if ((\"!\" + lblKey + \"!\").equals(lbl))\n"}, "endLine": 173, "startLine": 172}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "UNSAFE_HASH_EQUALS", "ruleIndex": 3}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt UpdateServiceImpl.java:[lines 40-436] \nIn class org.atalk.impl.androidupdate.UpdateServiceImpl \nIn method org.atalk.impl.androidupdate.UpdateServiceImpl.checkForUpdates(boolean) \nAt UpdateServiceImpl.java:[line 110] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getPath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getUriRealPathAboveKitkat(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source android/net/Uri.getLastPathSegment()Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePathWithCreate(Landroid/content/Context;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source android/net/Uri.getPath()Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getRealPath(Landroid/content/ContentResolver;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source android/database/Cursor.getString(I)Ljava/lang/String; \nAt UpdateServiceImpl.java:[line 110] \nAt FilePathHelper.java:[line 71] \nAt FilePathHelper.java:[line 73] \nAt FilePathHelper.java:[line 90] \nAt FilePathHelper.java:[line 94] \nAt FilePathHelper.java:[line 219] \nAt FilePathHelper.java:[line 251] \nAt FilePathHelper.java:[line 260]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                    File apkFile = new File(FilePathHelper.getPath(aTalkApp.getGlobalContext(), fileUri));\n"}, "startLine": 110}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/debug/java/org/atalk/impl/androidupdate/UpdateServiceImpl.java"}, "contextRegion": {"snippet": {"text": "                    Uri fileUri = downloadManager.getUriForDownloadedFile(lastDownload);\n                    File apkFile = new File(FilePathHelper.getPath(aTalkApp.getGlobalContext(), fileUri));\n"}, "endLine": 110, "startLine": 109}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt UpdateServiceImpl.java:[lines 240-275] \nIn class org.atalk.impl.androidupdate.UpdateServiceImpl$DownloadReceiver \nIn method org.atalk.impl.androidupdate.UpdateServiceImpl$DownloadReceiver.onReceive(Context, Intent) \nAt UpdateServiceImpl.java:[line 253] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getPath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getUriRealPathAboveKitkat(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source android/net/Uri.getLastPathSegment()Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePathWithCreate(Landroid/content/Context;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source android/net/Uri.getPath()Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getRealPath(Landroid/content/ContentResolver;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePath(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source android/database/Cursor.getString(I)Ljava/lang/String; \nAt UpdateServiceImpl.java:[line 253] \nAt FilePathHelper.java:[line 71] \nAt FilePathHelper.java:[line 73] \nAt FilePathHelper.java:[line 90] \nAt FilePathHelper.java:[line 94] \nAt FilePathHelper.java:[line 219] \nAt FilePathHelper.java:[line 251] \nAt FilePathHelper.java:[line 260]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                    File apkFile = new File(FilePathHelper.getPath(aTalkApp.getGlobalContext(), fileUri));\n"}, "startLine": 253}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/debug/java/org/atalk/impl/androidupdate/UpdateServiceImpl.java"}, "contextRegion": {"snippet": {"text": "                    Uri fileUri = downloadManager.getUriForDownloadedFile(lastDownload);\n                    File apkFile = new File(FilePathHelper.getPath(aTalkApp.getGlobalContext(), fileUri));\n"}, "endLine": 253, "startLine": 252}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ConfigurationServiceImpl.java:[lines 78-1455] \nIn class org.atalk.impl.configuration.ConfigurationServiceImpl \nIn method org.atalk.impl.configuration.ConfigurationServiceImpl.createConfigurationFile() \nAt ConfigurationServiceImpl.java:[line 762] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getName()Ljava/lang/String; \nAt ConfigurationServiceImpl.java:[line 762]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                        ((extensionBeginIndex > -1) ? name.substring(0, extensionBeginIndex) : name) + \".properties\");\n"}, "startLine": 762}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/configuration/ConfigurationServiceImpl.java"}, "contextRegion": {"snippet": {"text": "                File newConfigurationFile = new File(configurationFile.getParentFile(),\n                        ((extensionBeginIndex > -1) ? name.substring(0, extensionBeginIndex) : name) + \".properties\");\n"}, "endLine": 762, "startLine": 761}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ConfigurationServiceImpl.java:[lines 78-1455] \nIn class org.atalk.impl.configuration.ConfigurationServiceImpl \nIn method org.atalk.impl.configuration.ConfigurationServiceImpl.getConfigurationFile(String, boolean) \nAt ConfigurationServiceImpl.java:[line 923] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/configuration/ConfigurationServiceImpl.getConfigurationFile(Ljava/lang/String;Z)Ljava/io/File; parameter 1 \nUnknown source org/jivesoftware/smack/util/StringUtils.returnIfNotEmptyTrimmed(Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/impl/configuration/ConfigurationServiceImpl.getSystemProperty(Ljava/lang/String;)Ljava/lang/String; \nAt ConfigurationServiceImpl.java:[line 729] \nAt ConfigurationServiceImpl.java:[line 823] \nAt ConfigurationServiceImpl.java:[line 918] \nAt ConfigurationServiceImpl.java:[line 920] \nAt ConfigurationServiceImpl.java:[line 1343]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        File configFileInCurrentDir = new File(pFileName);\n"}, "startLine": 923}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/configuration/ConfigurationServiceImpl.java"}, "contextRegion": {"snippet": {"text": "        // try to open the file in current directory\n        File configFileInCurrentDir = new File(pFileName);\n"}, "endLine": 923, "startLine": 922}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ConfigurationServiceImpl.java:[lines 78-1455] \nIn class org.atalk.impl.configuration.ConfigurationServiceImpl \nIn method org.atalk.impl.configuration.ConfigurationServiceImpl.getConfigurationFile(String, boolean) \nAt ConfigurationServiceImpl.java:[line 932] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/configuration/ConfigurationServiceImpl.getSystemProperty(Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/jivesoftware/smack/util/StringUtils.returnIfNotEmptyTrimmed(Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/impl/configuration/ConfigurationServiceImpl.getString(Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/impl/configuration/ConfigurationServiceImpl.getScHomeDirName()Ljava/lang/String; \nAt ConfigurationServiceImpl.java:[line 878] \nAt ConfigurationServiceImpl.java:[line 883] \nAt ConfigurationServiceImpl.java:[line 891] \nAt ConfigurationServiceImpl.java:[line 932]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        File configDir = new File(getScHomeDirLocation(), getScHomeDirName());\n"}, "startLine": 932}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/configuration/ConfigurationServiceImpl.java"}, "contextRegion": {"snippet": {"text": "\n        File configDir = new File(getScHomeDirLocation(), getScHomeDirName());\n"}, "endLine": 932, "startLine": 931}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ConfigurationServiceImpl.java:[lines 78-1455] \nIn class org.atalk.impl.configuration.ConfigurationServiceImpl \nIn method org.atalk.impl.configuration.ConfigurationServiceImpl.getConfigurationFile(String, boolean) \nAt ConfigurationServiceImpl.java:[line 933] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/configuration/ConfigurationServiceImpl.getConfigurationFile(Ljava/lang/String;Z)Ljava/io/File; parameter 1 \nUnknown source org/jivesoftware/smack/util/StringUtils.returnIfNotEmptyTrimmed(Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/impl/configuration/ConfigurationServiceImpl.getSystemProperty(Ljava/lang/String;)Ljava/lang/String; \nAt ConfigurationServiceImpl.java:[line 729] \nAt ConfigurationServiceImpl.java:[line 823] \nAt ConfigurationServiceImpl.java:[line 918] \nAt ConfigurationServiceImpl.java:[line 920] \nAt ConfigurationServiceImpl.java:[line 1343]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        File configFileInUserHomeDir = new File(configDir, pFileName);\n"}, "startLine": 933}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/configuration/ConfigurationServiceImpl.java"}, "contextRegion": {"snippet": {"text": "        File configDir = new File(getScHomeDirLocation(), getScHomeDirName());\n        File configFileInUserHomeDir = new File(configDir, pFileName);\n"}, "endLine": 933, "startLine": 932}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks \nAt XMLConfigurationStore.java:[lines 29-447] \nIn class org.atalk.impl.configuration.xml.XMLConfigurationStore \nIn method org.atalk.impl.configuration.xml.XMLConfigurationStore.loadConfiguration(File) \nAt XMLConfigurationStore.java:[line 170] \nValue DocumentBuilder.parse(...)."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                propertiesDocument = builder.parse(file);\n"}, "startLine": 170}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/configuration/xml/XMLConfigurationStore.java"}, "contextRegion": {"snippet": {"text": "            else\n                propertiesDocument = builder.parse(file);\n"}, "endLine": 170, "startLine": 169}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "XXE_DOCUMENT", "ruleIndex": 6}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FailSafeTransactionImpl.java:[lines 49-183] \nIn class org.atalk.impl.fileaccess.FailSafeTransactionImpl \nIn method org.atalk.impl.fileaccess.FailSafeTransactionImpl.beginTransaction() \nAt FailSafeTransactionImpl.java:[line 94] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nAt FailSafeTransactionImpl.java:[line 94]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        this.backup = new File(this.file.getAbsolutePath() + BAK_EXT);\n"}, "startLine": 94}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/fileaccess/FailSafeTransactionImpl.java"}, "contextRegion": {"snippet": {"text": "        restoreFile();\n        this.backup = new File(this.file.getAbsolutePath() + BAK_EXT);\n"}, "endLine": 94, "startLine": 93}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FailSafeTransactionImpl.java:[lines 49-183] \nIn class org.atalk.impl.fileaccess.FailSafeTransactionImpl \nIn method org.atalk.impl.fileaccess.FailSafeTransactionImpl.failsafeCopy(File, File) \nAt FailSafeTransactionImpl.java:[line 157] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nAt FailSafeTransactionImpl.java:[line 157]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        File ptoF = new File(to.getAbsolutePath() + PART_EXT);\n"}, "startLine": 157}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/fileaccess/FailSafeTransactionImpl.java"}, "contextRegion": {"snippet": {"text": "\n        File ptoF = new File(to.getAbsolutePath() + PART_EXT);\n"}, "endLine": 157, "startLine": 156}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FailSafeTransactionImpl.java:[lines 49-183] \nIn class org.atalk.impl.fileaccess.FailSafeTransactionImpl \nIn method org.atalk.impl.fileaccess.FailSafeTransactionImpl.restoreFile() \nAt FailSafeTransactionImpl.java:[line 67] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nAt FailSafeTransactionImpl.java:[line 67]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        File back = new File(this.file.getAbsolutePath() + BAK_EXT);\n"}, "startLine": 67}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/fileaccess/FailSafeTransactionImpl.java"}, "contextRegion": {"snippet": {"text": "    {\n        File back = new File(this.file.getAbsolutePath() + BAK_EXT);\n"}, "endLine": 67, "startLine": 66}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/FileOutputStream.<init>(Ljava/lang/String;)V) writes to a file whose location might be specified by user input \nAt FailSafeTransactionImpl.java:[lines 49-183] \nIn class org.atalk.impl.fileaccess.FailSafeTransactionImpl \nIn method org.atalk.impl.fileaccess.FailSafeTransactionImpl.failsafeCopy(File, File) \nAt FailSafeTransactionImpl.java:[line 165] \nSink method java/io/FileOutputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/fileaccess/FailSafeTransactionImpl.failsafeCopy(Ljava/io/File;Ljava/io/File;)V parameter 0 \nAt FailSafeTransactionImpl.java:[line 71] \nAt FailSafeTransactionImpl.java:[line 97] \nAt FailSafeTransactionImpl.java:[line 132] \nAt FailSafeTransactionImpl.java:[line 165]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            out = new FileOutputStream(to + PART_EXT);\n"}, "startLine": 165}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/fileaccess/FailSafeTransactionImpl.java"}, "contextRegion": {"snippet": {"text": "            in = new FileInputStream(from);\n            out = new FileOutputStream(to + PART_EXT);\n"}, "endLine": 165, "startLine": 164}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_OUT", "ruleIndex": 17}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileAccessServiceImpl.java:[lines 46-331] \nIn class org.atalk.impl.fileaccess.FileAccessServiceImpl \nIn method org.atalk.impl.fileaccess.FileAccessServiceImpl.accessibleFile(File, String) \nAt FileAccessServiceImpl.java:[line 227] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/fileaccess/FileAccessServiceImpl.accessibleFile(Ljava/io/File;Ljava/lang/String;)Ljava/io/File; parameter 0 \nMethod usage not detected \nAt FileAccessServiceImpl.java:[line 97] \nAt FileAccessServiceImpl.java:[line 118]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        File file = new File(homedir, fileName);\n"}, "startLine": 227}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/fileaccess/FileAccessServiceImpl.java"}, "contextRegion": {"snippet": {"text": "    {\n        File file = new File(homedir, fileName);\n"}, "endLine": 227, "startLine": 226}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileAccessServiceImpl.java:[lines 46-331] \nIn class org.atalk.impl.fileaccess.FileAccessServiceImpl \nIn method org.atalk.impl.fileaccess.FileAccessServiceImpl.getDefaultDownloadDirectory() \nAt FileAccessServiceImpl.java:[line 266] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 1 \nUnknown source org/atalk/impl/fileaccess/FileAccessServiceImpl.getSystemProperty(Ljava/lang/String;)Ljava/lang/String; parameter 0 \nUnknown source org/atalk/impl/fileaccess/FileAccessServiceImpl.getSystemProperty(Ljava/lang/String;)Ljava/lang/String; \nUnknown source java/lang/System.getProperty(Ljava/lang/String;)Ljava/lang/String; \nAt FileAccessServiceImpl.java:[line 209] \nAt FileAccessServiceImpl.java:[line 210] \nAt FileAccessServiceImpl.java:[line 266]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        return new File(getSystemProperty(\"user.home\"), \"Downloads\");\n"}, "startLine": 266}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/fileaccess/FileAccessServiceImpl.java"}, "contextRegion": {"snippet": {"text": "        // For all other operating systems we return the Downloads folder.\n        return new File(getSystemProperty(\"user.home\"), \"Downloads\");\n"}, "endLine": 266, "startLine": 265}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileAccessServiceImpl.java:[lines 46-331] \nIn class org.atalk.impl.fileaccess.FileAccessServiceImpl \nIn method org.atalk.impl.fileaccess.FileAccessServiceImpl.getFullPath(FileCategory) \nAt FileAccessServiceImpl.java:[line 194] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/fileaccess/FileAccessServiceImpl.scHomeDirName \nAt FileAccessServiceImpl.java:[line 194]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        return new File(directory, this.scHomeDirName);\n"}, "startLine": 194}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/fileaccess/FileAccessServiceImpl.java"}, "contextRegion": {"snippet": {"text": "\n        return new File(directory, this.scHomeDirName);\n"}, "endLine": 194, "startLine": 193}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileAccessServiceImpl.java:[lines 46-331] \nIn class org.atalk.impl.fileaccess.FileAccessServiceImpl \nIn method org.atalk.impl.fileaccess.FileAccessServiceImpl.getPrivatePersistentDirectory(String, FileCategory) \nAt FileAccessServiceImpl.java:[line 156] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/fileaccess/FileAccessServiceImpl.getPrivatePersistentDirectory(Ljava/lang/String;Lorg/atalk/service/fileaccess/FileCategory;)Ljava/io/File; parameter 1 \nMethod usage not detected \nAt FileAccessServiceImpl.java:[line 134]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        File dir = new File(getFullPath(category), dirName);\n"}, "startLine": 156}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/fileaccess/FileAccessServiceImpl.java"}, "contextRegion": {"snippet": {"text": "    {\n        File dir = new File(getFullPath(category), dirName);\n"}, "endLine": 156, "startLine": 155}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileAccessServiceImpl.java:[lines 46-331] \nIn class org.atalk.impl.fileaccess.FileAccessServiceImpl \nIn method org.atalk.impl.fileaccess.FileAccessServiceImpl.getPrivatePersistentFile(String, FileCategory) \nAt FileAccessServiceImpl.java:[line 121] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/fileaccess/FileAccessServiceImpl.getPrivatePersistentFile(Ljava/lang/String;Lorg/atalk/service/fileaccess/FileCategory;)Ljava/io/File; parameter 1 \nMethod usage not detected \nAt FileAccessServiceImpl.java:[line 97]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                    + new File(getFullPath(category), fileName).getPath());\n"}, "startLine": 121}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/fileaccess/FileAccessServiceImpl.java"}, "contextRegion": {"snippet": {"text": "            throw new SecurityException(\"Insufficient rights to access this file in current user's home directory: \"\n                    + new File(getFullPath(category), fileName).getPath());\n"}, "endLine": 121, "startLine": 120}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt TempFileManager.java:[lines 28-180] \nIn class org.atalk.impl.fileaccess.TempFileManager \nIn method org.atalk.impl.fileaccess.TempFileManager.<static initializer for TempFileManager>() \nAt TempFileManager.java:[line 157] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getName()Ljava/lang/String; \nAt TempFileManager.java:[line 157]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            File lockFile = new File(tmpFile.getParent(), tmpFile.getName() + \".lck\");\n"}, "startLine": 157}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/fileaccess/TempFileManager.java"}, "contextRegion": {"snippet": {"text": "            // Create a file to represent the lock and test.\n            File lockFile = new File(tmpFile.getParent(), tmpFile.getName() + \".lck\");\n"}, "endLine": 157, "startLine": 156}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input \nAt TempFileManager.java:[lines 28-180] \nIn class org.atalk.impl.fileaccess.TempFileManager \nIn method org.atalk.impl.fileaccess.TempFileManager.createTempFile(String, String) \nAt TempFileManager.java:[line 55] \nSink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; \nSink parameter 0 \nUnknown source java/io/File.<init>(Ljava/lang/String;)V \nAt TempFileManager.java:[line 55]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "\t\t\tFile tmpDir = File.createTempFile(TEMP_DIR_PREFIX, \".tmp\", new File(tmpDirName));\n"}, "startLine": 55}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/fileaccess/TempFileManager.java"}, "contextRegion": {"snippet": {"text": "\t\t\tString tmpDirName = System.getProperty(\"java.io.tmpdir\");\n\t\t\tFile tmpDir = File.createTempFile(TEMP_DIR_PREFIX, \".tmp\", new File(tmpDirName));\n"}, "endLine": 55, "startLine": 54}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt TempFileManager.java:[lines 28-180] \nIn class org.atalk.impl.fileaccess.TempFileManager \nIn method org.atalk.impl.fileaccess.TempFileManager.createTempFile(String, String) \nAt TempFileManager.java:[line 65] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getName()Ljava/lang/String; \nAt TempFileManager.java:[line 65]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "\t\t\tFile lockFile = new File(tmpDirName, tmpDir.getName() + \".lck\");\n"}, "startLine": 65}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/fileaccess/TempFileManager.java"}, "contextRegion": {"snippet": {"text": "\t\t\t// to clean your temp dir.\n\t\t\tFile lockFile = new File(tmpDirName, tmpDir.getName() + \".lck\");\n"}, "endLine": 65, "startLine": 64}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input \nAt TempFileManager.java:[lines 28-180] \nIn class org.atalk.impl.fileaccess.TempFileManager \nIn method org.atalk.impl.fileaccess.TempFileManager.createTempFile(String, String) \nAt TempFileManager.java:[line 83] \nSink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; \nSink parameter 0 \nUnknown source org/atalk/impl/fileaccess/TempFileManager.sTmpDir \nUnknown source java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File; \nUnknown source java/io/File.<init>(Ljava/lang/String;)V \nAt TempFileManager.java:[line 51] \nAt TempFileManager.java:[line 55] \nAt TempFileManager.java:[line 83]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "\t\treturn File.createTempFile(prefix, suffix, sTmpDir);\n"}, "startLine": 83}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/fileaccess/TempFileManager.java"}, "contextRegion": {"snippet": {"text": "\t\t// and return it.\n\t\treturn File.createTempFile(prefix, suffix, sTmpDir);\n"}, "endLine": 83, "startLine": 82}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This random generator (java.util.Random) is predictable \nAt MediaStreamImpl.java:[lines 65-3448] \nIn class org.atalk.impl.neomedia.MediaStreamImpl \nIn method new org.atalk.impl.neomedia.MediaStreamImpl(StreamConnector, MediaDevice, SrtpControl) \nAt MediaStreamImpl.java:[line 147] \nValue java.util.Random."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "    private long localSourceID = (new Random().nextInt()) & 0x00000000FFFFFFFFL;\n"}, "startLine": 147}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/neomedia/MediaStreamImpl.java"}, "contextRegion": {"snippet": {"text": "     */\n    private long localSourceID = (new Random().nextInt()) & 0x00000000FFFFFFFFL;\n"}, "endLine": 147, "startLine": 146}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PREDICTABLE_RANDOM", "ruleIndex": 2}, {"message": {"markdown": "", "text": "This random generator (java.util.Random) is predictable \nAt SSRCFactoryImpl.java:[lines 23-56] \nIn class org.atalk.impl.neomedia.SSRCFactoryImpl \nIn method new org.atalk.impl.neomedia.SSRCFactoryImpl(long) \nAt SSRCFactoryImpl.java:[line 30] \nValue java.util.Random."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "\tprivate final Random random = new Random();\n"}, "startLine": 30}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/neomedia/SSRCFactoryImpl.java"}, "contextRegion": {"snippet": {"text": "\t */\n\tprivate final Random random = new Random();\n"}, "endLine": 30, "startLine": 29}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PREDICTABLE_RANDOM", "ruleIndex": 2}, {"message": {"markdown": "", "text": "This API (java/io/FileInputStream.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt Coder.java:[lines 44-187] \nIn class org.atalk.impl.neomedia.codec.audio.g729.Coder \nIn method org.atalk.impl.neomedia.codec.audio.g729.Coder.main(String[]) \nAt Coder.java:[line 117] \nSink method java/io/FileInputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nTainted source org/atalk/impl/neomedia/codec/audio/g729/Coder.main([Ljava/lang/String;)V parameter 0."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "\t\t\tf_speech = new FileInputStream(args[0]);\n"}, "startLine": 117}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/neomedia/codec/audio/g729/Coder.java"}, "contextRegion": {"snippet": {"text": "\t\ttry {\n\t\t\tf_speech = new FileInputStream(args[0]);\n"}, "endLine": 117, "startLine": 116}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "CRITICAL"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/FileOutputStream.<init>(Ljava/lang/String;)V) writes to a file whose location might be specified by user input \nAt Coder.java:[lines 44-187] \nIn class org.atalk.impl.neomedia.codec.audio.g729.Coder \nIn method org.atalk.impl.neomedia.codec.audio.g729.Coder.main(String[]) \nAt Coder.java:[line 127] \nSink method java/io/FileOutputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nTainted source org/atalk/impl/neomedia/codec/audio/g729/Coder.main([Ljava/lang/String;)V parameter 0."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "\t\t\tf_serial = new FileOutputStream(args[1]);\n"}, "startLine": 127}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/neomedia/codec/audio/g729/Coder.java"}, "contextRegion": {"snippet": {"text": "\t\ttry {\n\t\t\tf_serial = new FileOutputStream(args[1]);\n"}, "endLine": 127, "startLine": 126}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "CRITICAL"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_OUT", "ruleIndex": 17}, {"message": {"markdown": "", "text": "This API (java/io/FileInputStream.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt Decoder.java:[lines 44-270] \nIn class org.atalk.impl.neomedia.codec.audio.g729.Decoder \nIn method org.atalk.impl.neomedia.codec.audio.g729.Decoder.main(String[]) \nAt Decoder.java:[line 179] \nSink method java/io/FileInputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nTainted source org/atalk/impl/neomedia/codec/audio/g729/Decoder.main([Ljava/lang/String;)V parameter 0."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "\t\t\tf_serial = new FileInputStream(args[0]);\n"}, "startLine": 179}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/neomedia/codec/audio/g729/Decoder.java"}, "contextRegion": {"snippet": {"text": "\t\ttry {\n\t\t\tf_serial = new FileInputStream(args[0]);\n"}, "endLine": 179, "startLine": 178}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "CRITICAL"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/FileOutputStream.<init>(Ljava/lang/String;)V) writes to a file whose location might be specified by user input \nAt Decoder.java:[lines 44-270] \nIn class org.atalk.impl.neomedia.codec.audio.g729.Decoder \nIn method org.atalk.impl.neomedia.codec.audio.g729.Decoder.main(String[]) \nAt Decoder.java:[line 188] \nSink method java/io/FileOutputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nTainted source org/atalk/impl/neomedia/codec/audio/g729/Decoder.main([Ljava/lang/String;)V parameter 0."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "\t\t\tf_syn = new FileOutputStream(args[1]);\n"}, "startLine": 188}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/neomedia/codec/audio/g729/Decoder.java"}, "contextRegion": {"snippet": {"text": "\t\ttry {\n\t\t\tf_syn = new FileOutputStream(args[1]);\n"}, "endLine": 188, "startLine": 187}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "CRITICAL"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_OUT", "ruleIndex": 17}, {"message": {"markdown": "", "text": "This API (java/io/FileInputStream.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt WaveHeader.java:[lines 49-256] \nIn class org.atalk.impl.neomedia.device.WaveHeader \nIn method new org.atalk.impl.neomedia.device.WaveHeader(String) \nAt WaveHeader.java:[line 51] \nSink method java/io/FileInputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/neomedia/device/WaveHeader.<init>(Ljava/lang/String;)V parameter 0 \nMethod usage not detected."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "\t\t\tInputStream inputStream = new FileInputStream(filename);\n"}, "startLine": 51}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/neomedia/device/WaveHeader.java"}, "contextRegion": {"snippet": {"text": "\t\ttry {\n\t\t\tInputStream inputStream = new FileInputStream(filename);\n"}, "endLine": 51, "startLine": 50}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt DataSource.java:[lines 43-1214] \nIn class org.atalk.impl.neomedia.jmfext.media.protocol.mediarecorder.DataSource \nIn method org.atalk.impl.neomedia.jmfext.media.protocol.mediarecorder.DataSource.obtainParameters(Camera, MediaRecorder) \nAt DataSource.java:[line 520] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getPath()Ljava/lang/String; \nAt DataSource.java:[line 472]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        File file = new File(sampleFile);\n"}, "startLine": 520}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/neomedia/jmfext/media/protocol/mediarecorder/DataSource.java"}, "contextRegion": {"snippet": {"text": "        // Remove sample video\n        File file = new File(sampleFile);\n"}, "endLine": 520, "startLine": 519}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/FileOutputStream.<init>(Ljava/lang/String;)V) writes to a file whose location might be specified by user input \nAt DataSource.java:[lines 43-1214] \nIn class org.atalk.impl.neomedia.jmfext.media.protocol.mediarecorder.DataSource \nIn method org.atalk.impl.neomedia.jmfext.media.protocol.mediarecorder.DataSource.localSocketAccepted(LocalSocket, InputStream) \nAt DataSource.java:[line 704] \nSink method java/io/FileOutputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/neomedia/jmfext/media/protocol/mediarecorder/DataSource.readLine(Ljava/io/InputStream;I)Ljava/lang/String; \nAt DataSource.java:[line 685] \nAt DataSource.java:[line 704] \nAt DataSource.java:[line 865]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                dump = new FileOutputStream(DUMP_FILE + \".\" + localSocketKey);\n"}, "startLine": 704}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/neomedia/jmfext/media/protocol/mediarecorder/DataSource.java"}, "contextRegion": {"snippet": {"text": "            if (DUMP_FILE != null)\n                dump = new FileOutputStream(DUMP_FILE + \".\" + localSocketKey);\n"}, "endLine": 704, "startLine": 703}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_OUT", "ruleIndex": 17}, {"message": {"markdown": "", "text": "This API (java/io/RandomAccessFile.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt H264Parameters.java:[lines 47-330] \nIn class org.atalk.impl.neomedia.jmfext.media.protocol.mediarecorder.H264Parameters \nIn method new org.atalk.impl.neomedia.jmfext.media.protocol.mediarecorder.H264Parameters(String) \nAt H264Parameters.java:[line 49] \nSink method java/io/RandomAccessFile.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 1 \nUnknown source org/atalk/impl/neomedia/jmfext/media/protocol/mediarecorder/H264Parameters.<init>(Ljava/lang/String;)V parameter 0 \nAt DataSource.java:[line 472] \nAt DataSource.java:[line 517]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        RandomAccessFile sampleFile = new RandomAccessFile(path, \"r\");\n"}, "startLine": 49}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/neomedia/jmfext/media/protocol/mediarecorder/H264Parameters.java"}, "contextRegion": {"snippet": {"text": "\n        RandomAccessFile sampleFile = new RandomAccessFile(path, \"r\");\n"}, "endLine": 49, "startLine": 48}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/RandomAccessFile.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt RtpdumpFileReader.java:[lines 64-121] \nIn class org.atalk.impl.neomedia.jmfext.media.protocol.rtpdumpfile.RtpdumpFileReader \nIn method new org.atalk.impl.neomedia.jmfext.media.protocol.rtpdumpfile.RtpdumpFileReader(String) \nAt RtpdumpFileReader.java:[line 66] \nSink method java/io/RandomAccessFile.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 1 \nUnknown source org/atalk/impl/neomedia/jmfext/media/protocol/rtpdumpfile/RtpdumpFileReader.<init>(Ljava/lang/String;)V parameter 0 \nAt RtpdumpStream.java:[line 90]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "\t\t\tstream = new RandomAccessFile(filePath, \"r\");\n"}, "startLine": 66}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/neomedia/jmfext/media/protocol/rtpdumpfile/RtpdumpFileReader.java"}, "contextRegion": {"snippet": {"text": "\t\ttry {\n\t\t\tstream = new RandomAccessFile(filePath, \"r\");\n"}, "endLine": 66, "startLine": 65}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt JavaSoundClipImpl.java:[lines 20-126] \nIn class org.atalk.impl.neomedia.notify.JavaSoundClipImpl \nIn method new org.atalk.impl.neomedia.notify.JavaSoundClipImpl(String, AudioNotifierService) \nAt JavaSoundClipImpl.java:[line 95] \nSink method java/net/URL.openStream()Ljava/io/InputStream; \nSink parameter 0 \nUnknown source org/atalk/impl/neomedia/notify/JavaSoundClipImpl.<init>(Ljava/lang/String;Lorg/atalk/service/audionotifier/AudioNotifierService;)V parameter 1 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nMethod usage not detected \nAt AudioNotifierServiceImpl.java:[line 91] \nAt AudioNotifierServiceImpl.java:[line 117] \nAt JavaSoundClipImpl.java:[line 95]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "\t\taudioClip = createAppletAudioClip(new URL(uri).openStream());\n"}, "startLine": 95}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/neomedia/notify/JavaSoundClipImpl.java"}, "contextRegion": {"snippet": {"text": "\t\tsuper(uri, audioNotifier);\n\t\taudioClip = createAppletAudioClip(new URL(uri).openStream());\n"}, "endLine": 95, "startLine": 94}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "URLCONNECTION_SSRF_FD", "ruleIndex": 9}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt RecorderEventHandlerJSONImpl.java:[lines 31-219] \nIn class org.atalk.impl.neomedia.recording.RecorderEventHandlerJSONImpl \nIn method new org.atalk.impl.neomedia.recording.RecorderEventHandlerJSONImpl(String) \nAt RecorderEventHandlerJSONImpl.java:[line 53] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/neomedia/recording/RecorderEventHandlerJSONImpl.<init>(Ljava/lang/String;)V parameter 0 \nMethod usage not detected \nAt MediaServiceImpl.java:[line 1469]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        file = new File(filename);\n"}, "startLine": 53}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/neomedia/recording/RecorderEventHandlerJSONImpl.java"}, "contextRegion": {"snippet": {"text": "    {\n        file = new File(filename);\n"}, "endLine": 53, "startLine": 52}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt RecorderRtpImpl.java:[lines 54-1012] \nIn class org.atalk.impl.neomedia.recording.RecorderRtpImpl \nIn method org.atalk.impl.neomedia.recording.RecorderRtpImpl.getNextFilename(String, String) \nAt RecorderRtpImpl.java:[line 836] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/neomedia/recording/RecorderRtpImpl.getNextFilename(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1 \nUnknown source org/atalk/impl/neomedia/recording/RecorderRtpImpl.getNextFilename(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0 \nAt RecorderRtpImpl.java:[line 677] \nAt RecorderRtpImpl.java:[line 680] \nAt RecorderRtpImpl.java:[line 751] \nAt RecorderRtpImpl.java:[line 836]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        if (!new File(prefix + suffix).exists())\n"}, "startLine": 836}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/neomedia/recording/RecorderRtpImpl.java"}, "contextRegion": {"snippet": {"text": "    {\n        if (!new File(prefix + suffix).exists())\n"}, "endLine": 836, "startLine": 835}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt RecorderRtpImpl.java:[lines 54-1012] \nIn class org.atalk.impl.neomedia.recording.RecorderRtpImpl \nIn method org.atalk.impl.neomedia.recording.RecorderRtpImpl.getNextFilename(String, String) \nAt RecorderRtpImpl.java:[line 843] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/impl/neomedia/recording/RecorderRtpImpl.getNextFilename(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1 \nUnknown source org/atalk/impl/neomedia/recording/RecorderRtpImpl.getNextFilename(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0 \nAt RecorderRtpImpl.java:[line 677] \nAt RecorderRtpImpl.java:[line 680] \nAt RecorderRtpImpl.java:[line 751] \nAt RecorderRtpImpl.java:[line 836] \nAt RecorderRtpImpl.java:[line 842]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            if (!new File(s).exists())\n"}, "startLine": 843}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/neomedia/recording/RecorderRtpImpl.java"}, "contextRegion": {"snippet": {"text": "            s = prefix + \"-\" + i + suffix;\n            if (!new File(s).exists())\n"}, "endLine": 843, "startLine": 842}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This random generator (java.util.Random) is predictable \nAt SendSideBandwidthEstimation.java:[lines 40-605] \nIn class org.atalk.impl.neomedia.rtp.sendsidebandwidthestimation.SendSideBandwidthEstimation \nIn method org.atalk.impl.neomedia.rtp.sendsidebandwidthestimation.SendSideBandwidthEstimation.<static initializer for SendSideBandwidthEstimation>() \nAt SendSideBandwidthEstimation.java:[line 164] \nValue java.util.Random."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "    private static final Random kRandom = new Random();\n"}, "startLine": 164}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/neomedia/rtp/sendsidebandwidthestimation/SendSideBandwidthEstimation.java"}, "contextRegion": {"snippet": {"text": "     */\n    private static final Random kRandom = new Random();\n"}, "endLine": 164, "startLine": 163}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PREDICTABLE_RANDOM", "ruleIndex": 2}, {"message": {"markdown": "", "text": "This random generator (java.util.Random) is predictable \nAt RtxTransformer.java:[lines 46-517] \nIn class org.atalk.impl.neomedia.transform.RtxTransformer \nIn method org.atalk.impl.neomedia.transform.RtxTransformer.getNextRtxSequenceNumber(long) \nAt RtxTransformer.java:[line 158] \nValue java.util.Random."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                seq = new Random().nextInt(0xffff);\n"}, "startLine": 158}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/neomedia/transform/RtxTransformer.java"}, "contextRegion": {"snippet": {"text": "            if (seq == null)\n                seq = new Random().nextInt(0xffff);\n"}, "endLine": 158, "startLine": 157}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PREDICTABLE_RANDOM", "ruleIndex": 2}, {"message": {"markdown": "", "text": "Hard coded cryptographic key found \nAt DtlsControlImpl.java:[lines 52-845] \nIn class org.atalk.impl.neomedia.transform.dtls.DtlsControlImpl \nValue is hard coded in field org.atalk.impl.neomedia.transform.dtls.DtlsControlImpl.RSA_KEY_PUBLIC_EXPONENTLjava/math/BigInteger; with suspicious name \nAt DtlsControlImpl.java:[lines 52-845]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "public class DtlsControlImpl extends AbstractSrtpControl<DtlsTransformEngine> implements DtlsControl\n"}, "startLine": 52}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/neomedia/transform/dtls/DtlsControlImpl.java"}, "contextRegion": {"snippet": {"text": " */\npublic class DtlsControlImpl extends AbstractSrtpControl<DtlsTransformEngine> implements DtlsControl\n"}, "endLine": 52, "startLine": 51}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "HARD_CODE_KEY", "ruleIndex": 18}, {"message": {"markdown": "", "text": "This random generator (java.util.Random) is predictable \nAt Aes.java:[lines 27-470] \nIn class org.atalk.impl.neomedia.transform.srtp.crypto.Aes \nIn method org.atalk.impl.neomedia.transform.srtp.crypto.Aes.<static initializer for Aes>() \nAt Aes.java:[line 107] \nValue java.util.Random."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "    private static final Random random = new Random();\n"}, "startLine": 107}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/neomedia/transform/srtp/crypto/Aes.java"}, "contextRegion": {"snippet": {"text": "     */\n    private static final Random random = new Random();\n"}, "endLine": 107, "startLine": 106}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PREDICTABLE_RANDOM", "ruleIndex": 2}, {"message": {"markdown": "", "text": "Unsafe comparison of hash that are susceptible to timing attack \nAt ZRTPTransformEngine.java:[lines 137-1433] \nIn class org.atalk.impl.neomedia.transform.zrtp.ZRTPTransformEngine \nIn method org.atalk.impl.neomedia.transform.zrtp.ZRTPTransformEngine.sendInfo(ZrtpCodes$MessageSeverity, EnumSet) \nAt ZRTPTransformEngine.java:[line 941] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source org/atalk/impl/neomedia/transform/zrtp/ZRTPTransformEngine.receivedSignaledZRTPVersion \nAt ZRTPTransformEngine.java:[line 941]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            if (!peerHelloVersion.equals(receivedSignaledZRTPVersion)\n"}, "startLine": 941}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/neomedia/transform/zrtp/ZRTPTransformEngine.java"}, "contextRegion": {"snippet": {"text": "\n            if (!peerHelloVersion.equals(receivedSignaledZRTPVersion)\n"}, "endLine": 941, "startLine": 940}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "UNSAFE_HASH_EQUALS", "ruleIndex": 3}, {"message": {"markdown": "", "text": "Unsafe comparison of hash that are susceptible to timing attack \nAt ZRTPTransformEngine.java:[lines 137-1433] \nIn class org.atalk.impl.neomedia.transform.zrtp.ZRTPTransformEngine \nIn method org.atalk.impl.neomedia.transform.zrtp.ZRTPTransformEngine.sendInfo(ZrtpCodes$MessageSeverity, EnumSet) \nAt ZRTPTransformEngine.java:[line 942] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source org/atalk/impl/neomedia/transform/zrtp/ZRTPTransformEngine.receivedSignaledZRTPHashValue \nAt ZRTPTransformEngine.java:[line 941]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                    || !peerHelloHash.equals(receivedSignaledZRTPHashValue)) {\n"}, "startLine": 942}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/impl/neomedia/transform/zrtp/ZRTPTransformEngine.java"}, "contextRegion": {"snippet": {"text": "            if (!peerHelloVersion.equals(receivedSignaledZRTPVersion)\n                    || !peerHelloHash.equals(receivedSignaledZRTPHashValue)) {\n"}, "endLine": 942, "startLine": 941}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "UNSAFE_HASH_EQUALS", "ruleIndex": 3}, {"message": {"markdown": "", "text": "Files could be saved to external storage \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.getaTalkStore(String, boolean) \nAt FileBackend.java:[line 236]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        File atalkDLDir = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS) + filePath);\n"}, "startLine": 236}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/persistance/FileBackend.java"}, "contextRegion": {"snippet": {"text": "        // File atalkDLDir = new File(Environment.getExternalStorageDirectory(), filePath);\n        File atalkDLDir = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS) + filePath);\n"}, "endLine": 236, "startLine": 235}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "ANDROID_EXTERNAL_FILE_ACCESS", "ruleIndex": 19}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.copyRecursive(File, File, String) \nAt FileBackend.java:[line 118] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/FileBackend.copyRecursive(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)V parameter 0 \nMethod usage not detected."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            dstPath = new File(targetPath, subFolder);\n"}, "startLine": 118}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/persistance/FileBackend.java"}, "contextRegion": {"snippet": {"text": "        if (subFolder != null)\n            dstPath = new File(targetPath, subFolder);\n"}, "endLine": 118, "startLine": 117}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.copyRecursive(File, File, String) \nAt FileBackend.java:[line 139] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getName()Ljava/lang/String;."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                copyRecursive(new File(srcPath, fileName), dstPath, fileName);\n"}, "startLine": 139}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/persistance/FileBackend.java"}, "contextRegion": {"snippet": {"text": "                String fileName = file.getName();\n                copyRecursive(new File(srcPath, fileName), dstPath, fileName);\n"}, "endLine": 139, "startLine": 138}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.getOutputMediaFile(int) \nAt FileBackend.java:[line 255] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/text/SimpleDateFormat.format(Ljava/util/Date;)Ljava/lang/String; \nAt FileBackend.java:[line 255]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            mediaFile = new File(aTalkMediaDir, \"IMG_\" + timeStamp + \".jpg\");\n"}, "startLine": 255}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/persistance/FileBackend.java"}, "contextRegion": {"snippet": {"text": "        if (type == MEDIA_TYPE_IMAGE) {\n            mediaFile = new File(aTalkMediaDir, \"IMG_\" + timeStamp + \".jpg\");\n"}, "endLine": 255, "startLine": 254}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.getOutputMediaFile(int) \nAt FileBackend.java:[line 258] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/text/SimpleDateFormat.format(Ljava/util/Date;)Ljava/lang/String; \nAt FileBackend.java:[line 258]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            mediaFile = new File(aTalkMediaDir, \"VID_\" + timeStamp + \".mp4\");\n"}, "startLine": 258}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/persistance/FileBackend.java"}, "contextRegion": {"snippet": {"text": "        else if (type == MEDIA_TYPE_VIDEO) {\n            mediaFile = new File(aTalkMediaDir, \"VID_\" + timeStamp + \".mp4\");\n"}, "endLine": 258, "startLine": 257}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileBackend.java:[lines 43-552] \nIn class org.atalk.persistance.FileBackend \nIn method org.atalk.persistance.FileBackend.getaTalkStore(String, boolean) \nAt FileBackend.java:[line 236] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/os/Environment.getExternalStoragePublicDirectory(Ljava/lang/String;)Ljava/io/File; \nUnknown source org/atalk/persistance/FileBackend.getaTalkStore(Ljava/lang/String;Z)Ljava/io/File; parameter 1 \nUnknown source org/atalk/persistance/FileBackend.FP_aTALK \nAt LogUploadServiceImpl.java:[line 49] \nAt FileHttpDownloadConversation.java:[line 279] \nAt FileHttpDownloadConversation.java:[line 280] \nAt FileHttpDownloadConversation.java:[line 362] \nAt FileHttpDownloadConversation.java:[line 546] \nAt FileReceiveConversation.java:[line 222] \nAt FileTransferConversation.java:[line 946] \nAt FileTransferConversation.java:[line 948] \nAt FileTransferConversation.java:[line 949] \nAt FileTransferConversation.java:[line 950] \nAt FileTransferConversation.java:[line 953] \nAt AudioBgService.java:[line 613] \nAt TTSActivity.java:[line 380] \nAt FileBackend.java:[line 229] \nAt FileBackend.java:[line 230] \nAt FileBackend.java:[line 231] \nAt FileBackend.java:[line 236] \nAt FileBackend.java:[line 249] \nAt FilePathHelper.java:[line 135] \nAt ServerPersistentStoresRefreshDialog.java:[line 297]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        File atalkDLDir = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS) + filePath);\n"}, "startLine": 236}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/persistance/FileBackend.java"}, "contextRegion": {"snippet": {"text": "        // File atalkDLDir = new File(Environment.getExternalStorageDirectory(), filePath);\n        File atalkDLDir = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS) + filePath);\n"}, "endLine": 236, "startLine": 235}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "Files could be saved to external storage \nAt FilePathHelper.java:[lines 44-386] \nIn class org.atalk.persistance.FilePathHelper \nIn method org.atalk.persistance.FilePathHelper.getUriRealPathAboveKitkat(Context, Uri) \nAt FilePathHelper.java:[line 270]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                            filePath = ctx.getExternalFilesDir(realDocId).getAbsolutePath();\n"}, "startLine": 270}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/persistance/FilePathHelper.java"}, "contextRegion": {"snippet": {"text": "                        if (\"primary\".equalsIgnoreCase(type)) {\n                            filePath = ctx.getExternalFilesDir(realDocId).getAbsolutePath();\n"}, "endLine": 270, "startLine": 269}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "ANDROID_EXTERNAL_FILE_ACCESS", "ruleIndex": 19}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FilePathHelper.java:[lines 44-386] \nIn class org.atalk.persistance.FilePathHelper \nIn method org.atalk.persistance.FilePathHelper.getFilePathWithCreate(Context, Uri, String) \nAt FilePathHelper.java:[line 135] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/FilePathHelper.getFileName(Landroid/net/Uri;)Ljava/lang/String; \nUnknown source android/net/Uri.getQueryParameter(Ljava/lang/String;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FilePathHelper.getFilePathWithCreate(Landroid/content/Context;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; parameter 0 \nUnknown source org/atalk/persistance/FileBackend.getMimeType(Landroid/content/Context;Landroid/net/Uri;)Ljava/lang/String; \nUnknown source org/atalk/persistance/FileBackend.getMimeType(Landroid/content/Context;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; parameter 0 \nUnknown source android/content/ContentResolver.getType(Landroid/net/Uri;)Ljava/lang/String; \nUnknown source android/webkit/MimeTypeMap.getMimeTypeFromExtension(Ljava/lang/String;)Ljava/lang/String; \nUnknown source android/net/Uri.getPath()Ljava/lang/String; \nUnknown source org/atalk/persistance/FileBackend.getMimeType(Landroid/content/Context;Landroid/net/Uri;Ljava/lang/String;)Ljava/lang/String; \nAt Attachment.java:[line 87] \nAt FileBackend.java:[line 324] \nAt FileBackend.java:[line 332] \nAt FilePathHelper.java:[line 58] \nAt FilePathHelper.java:[line 73] \nAt FilePathHelper.java:[line 113] \nAt FilePathHelper.java:[line 114] \nAt FilePathHelper.java:[line 124] \nAt FilePathHelper.java:[line 125] \nAt FilePathHelper.java:[line 126] \nAt FilePathHelper.java:[line 128] \nAt FilePathHelper.java:[line 131] \nAt FilePathHelper.java:[line 164] \nAt FilePathHelper.java:[line 165] \nAt FilePathHelper.java:[line 166] \nAt FilePathHelper.java:[line 167] \nAt FilePathHelper.java:[line 168] \nAt FilePathHelper.java:[line 171] \nAt FilePathHelper.java:[line 173]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            File destFile = new File(FileBackend.getaTalkStore(FileBackend.TMP, true), fileName);\n"}, "startLine": 135}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/persistance/FilePathHelper.java"}, "contextRegion": {"snippet": {"text": "            }\n            File destFile = new File(FileBackend.getaTalkStore(FileBackend.TMP, true), fileName);\n"}, "endLine": 135, "startLine": 134}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt MigrateDir.java:[lines 32-49] \nIn class org.atalk.persistance.migrations.MigrateDir \nIn method org.atalk.persistance.migrations.MigrateDir.purgeAvatarCache() \nAt MigrateDir.java:[line 41] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/content/Context.getFilesDir()Ljava/io/File; \nAt MigrateDir.java:[line 41]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": ""}, "startLine": 41}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/org/atalk/persistance/migrations/MigrateDir.java"}, "contextRegion": {"snippet": {"text": ""}, "endLine": 4, "startLine": 1}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This use of android/database/sqlite/SQLiteDatabase.execSQL(Ljava/lang/String;)V can be vulnerable to SQL injection (with Android SQL) \nAt MigrationTo2.java:[lines 9-27] \nIn class org.atalk.persistance.migrations.MigrationTo2 \nIn method org.atalk.persistance.migrations.MigrationTo2.createOmemoTables(SQLiteDatabase) \nAt MigrationTo2.java:[line 14] \nSink method android/database/sqlite/SQLiteDatabase.execSQL(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/DatabaseBackend.CREATE_OMEMO_DEVICES_STATEMENT \nAt MigrationTo2.java:[line 14]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": ""}, "startLine": 14}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/org/atalk/persistance/migrations/MigrationTo2.java"}, "contextRegion": {"snippet": {"text": ""}, "endLine": 4, "startLine": 1}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "SQL_INJECTION_ANDROID", "ruleIndex": 7}, {"message": {"markdown": "", "text": "This use of android/database/sqlite/SQLiteDatabase.execSQL(Ljava/lang/String;)V can be vulnerable to SQL injection (with Android SQL) \nAt MigrationTo2.java:[lines 9-27] \nIn class org.atalk.persistance.migrations.MigrationTo2 \nIn method org.atalk.persistance.migrations.MigrationTo2.createOmemoTables(SQLiteDatabase) \nAt MigrationTo2.java:[line 17] \nSink method android/database/sqlite/SQLiteDatabase.execSQL(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/DatabaseBackend.CREATE_PREKEYS_STATEMENT \nAt MigrationTo2.java:[line 17]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": ""}, "startLine": 17}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/org/atalk/persistance/migrations/MigrationTo2.java"}, "contextRegion": {"snippet": {"text": ""}, "endLine": 4, "startLine": 1}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "SQL_INJECTION_ANDROID", "ruleIndex": 7}, {"message": {"markdown": "", "text": "This use of android/database/sqlite/SQLiteDatabase.execSQL(Ljava/lang/String;)V can be vulnerable to SQL injection (with Android SQL) \nAt MigrationTo2.java:[lines 9-27] \nIn class org.atalk.persistance.migrations.MigrationTo2 \nIn method org.atalk.persistance.migrations.MigrationTo2.createOmemoTables(SQLiteDatabase) \nAt MigrationTo2.java:[line 20] \nSink method android/database/sqlite/SQLiteDatabase.execSQL(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/DatabaseBackend.CREATE_SIGNED_PREKEYS_STATEMENT \nAt MigrationTo2.java:[line 20]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": ""}, "startLine": 20}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/org/atalk/persistance/migrations/MigrationTo2.java"}, "contextRegion": {"snippet": {"text": ""}, "endLine": 4, "startLine": 1}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "SQL_INJECTION_ANDROID", "ruleIndex": 7}, {"message": {"markdown": "", "text": "This use of android/database/sqlite/SQLiteDatabase.execSQL(Ljava/lang/String;)V can be vulnerable to SQL injection (with Android SQL) \nAt MigrationTo2.java:[lines 9-27] \nIn class org.atalk.persistance.migrations.MigrationTo2 \nIn method org.atalk.persistance.migrations.MigrationTo2.createOmemoTables(SQLiteDatabase) \nAt MigrationTo2.java:[line 23] \nSink method android/database/sqlite/SQLiteDatabase.execSQL(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/DatabaseBackend.CREATE_IDENTITIES_STATEMENT \nAt MigrationTo2.java:[line 23]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": ""}, "startLine": 23}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/org/atalk/persistance/migrations/MigrationTo2.java"}, "contextRegion": {"snippet": {"text": ""}, "endLine": 4, "startLine": 1}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "SQL_INJECTION_ANDROID", "ruleIndex": 7}, {"message": {"markdown": "", "text": "This use of android/database/sqlite/SQLiteDatabase.execSQL(Ljava/lang/String;)V can be vulnerable to SQL injection (with Android SQL) \nAt MigrationTo2.java:[lines 9-27] \nIn class org.atalk.persistance.migrations.MigrationTo2 \nIn method org.atalk.persistance.migrations.MigrationTo2.createOmemoTables(SQLiteDatabase) \nAt MigrationTo2.java:[line 26] \nSink method android/database/sqlite/SQLiteDatabase.execSQL(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/persistance/DatabaseBackend.CREATE_SESSIONS_STATEMENT \nAt MigrationTo2.java:[line 26]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": ""}, "startLine": 26}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/org/atalk/persistance/migrations/MigrationTo2.java"}, "contextRegion": {"snippet": {"text": ""}, "endLine": 4, "startLine": 1}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "SQL_INJECTION_ANDROID", "ruleIndex": 7}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt MigrationTo3.java:[lines 15-67] \nIn class org.atalk.persistance.migrations.MigrationTo3 \nIn method org.atalk.persistance.migrations.MigrationTo3.deleteOldDatabase() \nAt MigrationTo3.java:[line 41] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getPath()Ljava/lang/String;."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": ""}, "startLine": 41}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/org/atalk/persistance/migrations/MigrationTo3.java"}, "contextRegion": {"snippet": {"text": ""}, "endLine": 4, "startLine": 1}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt MigrationTo3.java:[lines 15-67] \nIn class org.atalk.persistance.migrations.MigrationTo3 \nIn method org.atalk.persistance.migrations.MigrationTo3.deleteOldDatabase() \nAt MigrationTo3.java:[line 48] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nAt MigrationTo3.java:[line 48]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": ""}, "startLine": 48}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/org/atalk/persistance/migrations/MigrationTo3.java"}, "contextRegion": {"snippet": {"text": ""}, "endLine": 4, "startLine": 1}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt MigrationTo3.java:[lines 15-67] \nIn class org.atalk.persistance.migrations.MigrationTo3 \nIn method org.atalk.persistance.migrations.MigrationTo3.deleteOldDatabase() \nAt MigrationTo3.java:[line 49] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nAt MigrationTo3.java:[line 48] \nAt MigrationTo3.java:[line 49]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": ""}, "startLine": 49}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/org/atalk/persistance/migrations/MigrationTo3.java"}, "contextRegion": {"snippet": {"text": ""}, "endLine": 4, "startLine": 1}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt MigrationTo3.java:[lines 15-67] \nIn class org.atalk.persistance.migrations.MigrationTo3 \nIn method org.atalk.persistance.migrations.MigrationTo3.deleteOldDatabase() \nAt MigrationTo3.java:[line 50] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nAt MigrationTo3.java:[line 48] \nAt MigrationTo3.java:[line 49] \nAt MigrationTo3.java:[line 50]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": ""}, "startLine": 50}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/org/atalk/persistance/migrations/MigrationTo3.java"}, "contextRegion": {"snippet": {"text": ""}, "endLine": 4, "startLine": 1}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ConfigUtils.java:[lines 25-216] \nIn class org.atalk.util.ConfigUtils \nIn method org.atalk.util.ConfigUtils.getAbsoluteFile(String, ConfigurationService) \nAt ConfigUtils.java:[line 42] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/util/ConfigUtils.getAbsoluteFile(Ljava/lang/String;Lorg/atalk/service/configuration/ConfigurationService;)Ljava/io/File; parameter 1 \nMethod usage not detected."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        File file = new File(path);\n"}, "startLine": 42}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/util/ConfigUtils.java"}, "contextRegion": {"snippet": {"text": "    {\n        File file = new File(path);\n"}, "endLine": 42, "startLine": 41}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ConfigUtils.java:[lines 25-216] \nIn class org.atalk.util.ConfigUtils \nIn method org.atalk.util.ConfigUtils.getAbsoluteFile(String, ConfigurationService) \nAt ConfigUtils.java:[line 61] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/util/ConfigUtils.getAbsoluteFile(Ljava/lang/String;Lorg/atalk/service/configuration/ConfigurationService;)Ljava/io/File; parameter 1 \nMethod usage not detected."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            file = new File(new File(scHomeDirLocation, scHomeDirName), path).getAbsoluteFile();\n"}, "startLine": 61}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/util/ConfigUtils.java"}, "contextRegion": {"snippet": {"text": "                scHomeDirName = \".\";\n            file = new File(new File(scHomeDirLocation, scHomeDirName), path).getAbsoluteFile();\n"}, "endLine": 61, "startLine": 60}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ConfigUtils.java:[lines 25-216] \nIn class org.atalk.util.ConfigUtils \nIn method org.atalk.util.ConfigUtils.getAbsoluteFile(String, ConfigurationService) \nAt ConfigUtils.java:[line 61] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/service/configuration/ConfigurationService.getScHomeDirName()Ljava/lang/String;."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            file = new File(new File(scHomeDirLocation, scHomeDirName), path).getAbsoluteFile();\n"}, "startLine": 61}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/util/ConfigUtils.java"}, "contextRegion": {"snippet": {"text": "                scHomeDirName = \".\";\n            file = new File(new File(scHomeDirLocation, scHomeDirName), path).getAbsoluteFile();\n"}, "endLine": 61, "startLine": 60}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileHandler.java:[lines 36-189] \nIn class org.atalk.util.logging.FileHandler \nIn method org.atalk.util.logging.FileHandler.createDestinationDirectory(String) \nAt FileHandler.java:[line 185] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/atalk/util/logging/FileHandler.createDestinationDirectory(Ljava/lang/String;)V parameter 0 \nAt FileHandler.java:[line 133] \nAt FileHandler.java:[line 136] \nAt FileHandler.java:[line 142] \nAt FileHandler.java:[line 145] \nAt FileHandler.java:[line 147] \nAt FileHandler.java:[line 181] \nAt FileHandler.java:[line 182] \nAt FileHandler.java:[line 183]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                new File(dirName).mkdirs();\n"}, "startLine": 185}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/util/logging/FileHandler.java"}, "contextRegion": {"snippet": {"text": "\n                new File(dirName).mkdirs();\n"}, "endLine": 185, "startLine": 184}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks \nAt XMLUtils.java:[lines 37-725] \nIn class org.atalk.util.xml.XMLUtils \nIn method org.atalk.util.xml.XMLUtils.createDocument(String, boolean) \nAt XMLUtils.java:[line 610] \nValue DocumentBuilder.parse(...)."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            return documentBuilder.parse(input);\n"}, "startLine": 610}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/util/xml/XMLUtils.java"}, "contextRegion": {"snippet": {"text": "            InputStream input = StringUtils.fromString(xml);\n            return documentBuilder.parse(input);\n"}, "endLine": 610, "startLine": 609}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "XXE_DOCUMENT", "ruleIndex": 6}, {"message": {"markdown": "", "text": "The use of TransformerFactory.newInstance(...) (TransformerFactory) is vulnerable to XML External Entity attacks \nAt XMLUtils.java:[lines 37-725] \nIn class org.atalk.util.xml.XMLUtils \nIn method org.atalk.util.xml.XMLUtils.createXml(Document) \nAt XMLUtils.java:[line 640] \nValue TransformerFactory.newInstance(...)."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        TransformerFactory transformerFactory = TransformerFactory.newInstance();\n"}, "startLine": 640}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/util/xml/XMLUtils.java"}, "contextRegion": {"snippet": {"text": "    {\n        TransformerFactory transformerFactory = TransformerFactory.newInstance();\n"}, "endLine": 640, "startLine": 639}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "XXE_DTD_TRANSFORM_FACTORY", "ruleIndex": 11}, {"message": {"markdown": "", "text": "The use of TransformerFactory.newInstance(...) (TransformerFactory) is vulnerable to XML External Entity attacks \nAt XMLUtils.java:[lines 37-725] \nIn class org.atalk.util.xml.XMLUtils \nIn method org.atalk.util.xml.XMLUtils.writeXML(Document, StreamResult, String, String) \nAt XMLUtils.java:[line 248] \nValue TransformerFactory.newInstance(...)."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            TransformerFactory tf = TransformerFactory.newInstance();\n"}, "startLine": 248}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/util/xml/XMLUtils.java"}, "contextRegion": {"snippet": {"text": "            DOMSource domSource = new DOMSource(document);\n            TransformerFactory tf = TransformerFactory.newInstance();\n"}, "endLine": 248, "startLine": 247}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "XXE_DTD_TRANSFORM_FACTORY", "ruleIndex": 11}, {"message": {"markdown": "", "text": "The use of TransformerFactory.newInstance(...) is vulnerable to XSLT External Entity attacks \nAt XMLUtils.java:[lines 37-725] \nIn class org.atalk.util.xml.XMLUtils \nIn method org.atalk.util.xml.XMLUtils.createXml(Document) \nAt XMLUtils.java:[line 640] \nValue TransformerFactory.newInstance(...)."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        TransformerFactory transformerFactory = TransformerFactory.newInstance();\n"}, "startLine": 640}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/util/xml/XMLUtils.java"}, "contextRegion": {"snippet": {"text": "    {\n        TransformerFactory transformerFactory = TransformerFactory.newInstance();\n"}, "endLine": 640, "startLine": 639}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "XXE_XSLT_TRANSFORM_FACTORY", "ruleIndex": 12}, {"message": {"markdown": "", "text": "The use of TransformerFactory.newInstance(...) is vulnerable to XSLT External Entity attacks \nAt XMLUtils.java:[lines 37-725] \nIn class org.atalk.util.xml.XMLUtils \nIn method org.atalk.util.xml.XMLUtils.writeXML(Document, StreamResult, String, String) \nAt XMLUtils.java:[line 248] \nValue TransformerFactory.newInstance(...)."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            TransformerFactory tf = TransformerFactory.newInstance();\n"}, "startLine": 248}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/atalk/util/xml/XMLUtils.java"}, "contextRegion": {"snippet": {"text": "            DOMSource domSource = new DOMSource(document);\n            TransformerFactory tf = TransformerFactory.newInstance();\n"}, "endLine": 248, "startLine": 247}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "XXE_XSLT_TRANSFORM_FACTORY", "ruleIndex": 12}, {"message": {"markdown": "", "text": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt AvatarManager.java:[lines 54-548] \nIn class org.jivesoftware.smackx.avatar.AvatarManager \nIn method org.jivesoftware.smackx.avatar.AvatarManager.getAvatarImageByJid(BareJid) \nAt AvatarManager.java:[line 258] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarImageByJid(Lorg/jxmpp/jid/BareJid;)[B parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nTainted source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        LOGGER.log(Level.FINE, \"Fetching avatar from local storage for: (\" + jid + \") => \" + avatarId);\n"}, "startLine": 258}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/jivesoftware/smackx/avatar/AvatarManager.java"}, "contextRegion": {"snippet": {"text": "        String avatarId = getAvatarHashByJid(jid);\n        LOGGER.log(Level.FINE, \"Fetching avatar from local storage for: (\" + jid + \") => \" + avatarId);\n"}, "endLine": 258, "startLine": 257}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "CRLF_INJECTION_LOGS", "ruleIndex": 20}, {"message": {"markdown": "", "text": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt AvatarManager.java:[lines 54-548] \nIn class org.jivesoftware.smackx.avatar.AvatarManager \nIn method org.jivesoftware.smackx.avatar.AvatarManager.purgeAvatarImageByJid(BareJid) \nAt AvatarManager.java:[line 333] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nTainted source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.purgeAvatarImageByJid(Lorg/jxmpp/jid/BareJid;)V parameter 0 \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 332] \nAt AvatarManager.java:[line 333] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        LOGGER.log(Level.INFO, \"Purge avatar from store for: (\" + jid + \") => \" + avatarId);\n"}, "startLine": 333}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/jivesoftware/smackx/avatar/AvatarManager.java"}, "contextRegion": {"snippet": {"text": "        String avatarId = getAvatarHashByJid(jid);\n        LOGGER.log(Level.INFO, \"Purge avatar from store for: (\" + jid + \") => \" + avatarId);\n"}, "endLine": 333, "startLine": 332}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "CRLF_INJECTION_LOGS", "ruleIndex": 20}, {"message": {"markdown": "", "text": "Unsafe comparison of hash that are susceptible to timing attack \nAt AvatarManager.java:[lines 54-548] \nIn class org.jivesoftware.smackx.avatar.AvatarManager \nIn method org.jivesoftware.smackx.avatar.AvatarManager.isHashMultipleOwner(BareJid, String) \nAt AvatarManager.java:[line 386] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.isHashMultipleOwner(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)Z parameter 0 \nMethod usage with tainted arguments detected \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt UserAvatarManager.java:[line 317] \nAt UserAvatarManager.java:[line 334] \nAt UserAvatarManager.java:[line 335] \nAt VCardAvatarManager.java:[line 185] \nAt VCardAvatarManager.java:[line 213] \nAt VCardAvatarManager.java:[line 214]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                if (!TextUtils.isEmpty(imageHash) && imageHash.equals(avatarHash)) {\n"}, "startLine": 386}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/jivesoftware/smackx/avatar/AvatarManager.java"}, "contextRegion": {"snippet": {"text": "                String imageHash = getAvatarHashByJid(contactJid);\n                if (!TextUtils.isEmpty(imageHash) && imageHash.equals(avatarHash)) {\n"}, "endLine": 386, "startLine": 385}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "CRITICAL"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "UNSAFE_HASH_EQUALS", "ruleIndex": 3}, {"message": {"markdown": "", "text": "This API SHA1 (SHA-1) is not a recommended cryptographic hash function \nAt AvatarManager.java:[lines 54-548] \nIn class org.jivesoftware.smackx.avatar.AvatarManager \nIn method org.jivesoftware.smackx.avatar.AvatarManager.getAvatarHash(byte[]) \nAt AvatarManager.java:[line 501] \nValue SHA1."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                MessageDigest messageDigest = MessageDigest.getInstance(\"SHA1\");\n"}, "startLine": 501}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/jivesoftware/smackx/avatar/AvatarManager.java"}, "contextRegion": {"snippet": {"text": "            if (imageData != null) {\n                MessageDigest messageDigest = MessageDigest.getInstance(\"SHA1\");\n"}, "endLine": 501, "startLine": 500}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "WEAK_MESSAGE_DIGEST_SHA1", "ruleIndex": 1}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AvatarCacheFile.java:[lines 33-170] \nIn class org.jivesoftware.smackx.avatar.cache.AvatarCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.AvatarCacheFile.getAvatarForHash(String) \nAt AvatarCacheFile.java:[line 119] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.getAvatarForHash(Ljava/lang/String;)[B parameter 0 \nMethod usage with tainted arguments detected \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1649] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1702] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1706] \nAt AvatarManager.java:[line 238] \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 260] \nAt AvatarManager.java:[line 278] \nAt AvatarManager.java:[line 279] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 316] \nAt AvatarManager.java:[line 317] \nAt JidToHashCacheFile.java:[line 96]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "\t\tFile file = new File(mStoreDir, id);\n"}, "startLine": 119}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.java"}, "contextRegion": {"snippet": {"text": "\t\tbyte[] avatarImage = null;\n\t\tFile file = new File(mStoreDir, id);\n"}, "endLine": 119, "startLine": 118}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "CRITICAL"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AvatarCacheFile.java:[lines 33-170] \nIn class org.jivesoftware.smackx.avatar.cache.AvatarCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.AvatarCacheFile.purgeItemFor(String) \nAt AvatarCacheFile.java:[line 158] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.purgeItemFor(Ljava/lang/String;)Z parameter 0 \nMethod usage with tainted arguments detected \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 332] \nAt AvatarManager.java:[line 335] \nAt AvatarManager.java:[line 337] \nAt AvatarManager.java:[line 445] \nAt AvatarManager.java:[line 448] \nAt AvatarManager.java:[line 451] \nAt AvatarManager.java:[line 462] \nAt AvatarManager.java:[line 463] \nAt AvatarManager.java:[line 464] \nAt JidToHashCacheFile.java:[line 96] \nAt UserAvatarManager.java:[line 317] \nAt UserAvatarManager.java:[line 334] \nAt UserAvatarManager.java:[line 336] \nAt VCardAvatarManager.java:[line 185] \nAt VCardAvatarManager.java:[line 213] \nAt VCardAvatarManager.java:[line 215]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "\t\tFile file = new File(mStoreDir, photoHash);\n"}, "startLine": 158}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.java"}, "contextRegion": {"snippet": {"text": "\t{\n\t\tFile file = new File(mStoreDir, photoHash);\n"}, "endLine": 158, "startLine": 157}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "CRITICAL"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AvatarCacheFile.java:[lines 33-170] \nIn class org.jivesoftware.smackx.avatar.cache.AvatarCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.AvatarCacheFile.addAvatarByHash(String, InputStream) \nAt AvatarCacheFile.java:[line 88] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.addAvatarByHash(Ljava/lang/String;Ljava/io/InputStream;)V parameter 1 \nMethod usage not detected."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "\t\tFile file = new File(mStoreDir, id);\n"}, "startLine": 88}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.java"}, "contextRegion": {"snippet": {"text": "\t{\n\t\tFile file = new File(mStoreDir, id);\n"}, "endLine": 88, "startLine": 87}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AvatarCacheFile.java:[lines 33-170] \nIn class org.jivesoftware.smackx.avatar.cache.AvatarCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.AvatarCacheFile.addAvatarByHash(String, byte[]) \nAt AvatarCacheFile.java:[line 61] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.addAvatarByHash(Ljava/lang/String;[B)V parameter 1 \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1705] \nAt AvatarManager.java:[line 196] \nAt AvatarManager.java:[line 199] \nAt AvatarManager.java:[line 216] \nAt AvatarManager.java:[line 217] \nAt AvatarManager.java:[line 218] \nAt AvatarManager.java:[line 278] \nAt AvatarManager.java:[line 280] \nAt AvatarManager.java:[line 281] \nAt AvatarManager.java:[line 531] \nAt AvatarManager.java:[line 539] \nAt UserAvatarManager.java:[line 160] \nAt UserAvatarManager.java:[line 164] \nAt UserAvatarManager.java:[line 324]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "\t\tFile file = new File(mStoreDir, id);\n"}, "startLine": 61}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.java"}, "contextRegion": {"snippet": {"text": "\t{\n\t\tFile file = new File(mStoreDir, id);\n"}, "endLine": 61, "startLine": 60}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AvatarCacheFile.java:[lines 33-170] \nIn class org.jivesoftware.smackx.avatar.cache.AvatarCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.AvatarCacheFile.contains(String) \nAt AvatarCacheFile.java:[line 151] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.contains(Ljava/lang/String;)Z parameter 0 \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1705] \nAt AvatarManager.java:[line 196] \nAt AvatarManager.java:[line 216] \nAt AvatarManager.java:[line 217] \nAt AvatarManager.java:[line 218] \nAt AvatarManager.java:[line 278] \nAt AvatarManager.java:[line 280] \nAt AvatarManager.java:[line 281] \nAt AvatarManager.java:[line 363] \nAt AvatarManager.java:[line 531] \nAt AvatarManager.java:[line 537] \nAt AvatarManager.java:[line 539] \nAt UserAvatarManager.java:[line 160] \nAt UserAvatarManager.java:[line 164] \nAt UserAvatarManager.java:[line 315] \nAt UserAvatarManager.java:[line 324] \nAt VCardAvatarManager.java:[line 281] \nAt VCardAvatarManager.java:[line 284] \nAt VCardTempXUpdate.java:[line 109]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "\t\tFile file = new File(mStoreDir, photoHash);\n"}, "startLine": 151}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.java"}, "contextRegion": {"snippet": {"text": "\t{\n\t\tFile file = new File(mStoreDir, photoHash);\n"}, "endLine": 151, "startLine": 150}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages \nAt JidToHashCacheFile.java:[lines 35-143] \nIn class org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile.getHashForJid(BareJid) \nAt JidToHashCacheFile.java:[line 99] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V \nSink parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nMethod usage with tainted arguments detected \nAt MetaContactImpl.java:[line 634] \nAt GlobalDisplayDetailsImpl.java:[line 135] \nAt GlobalDisplayDetailsImpl.java:[line 136] \nAt GlobalDisplayDetailsImpl.java:[line 305] \nAt GlobalDisplayDetailsImpl.java:[line 306] \nAt InfoRetriever.java:[line 62] \nAt InfoRetriever.java:[line 83] \nAt InfoRetriever.java:[line 119] \nAt InfoRetriever.java:[line 147] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1651] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1687] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1705] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 110] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 129] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 140] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 269] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 307] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 393] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 59] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 87] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 111] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 152] \nAt ServerStoredContactListJabberImpl.java:[line 1544] \nAt ServerStoredContactListJabberImpl.java:[line 1550] \nAt AccountID.java:[line 245] \nAt AccountInfoPresenceActivity.java:[line 759] \nAt AccountsListActivity.java:[line 242] \nAt AccountsListActivity.java:[line 244] \nAt AndroidCallListener.java:[line 225] \nAt CallEnded.java:[line 40] \nAt CallManager.java:[line 581] \nAt JingleMessageCallActivity.java:[line 153] \nAt JingleMessageHelper.java:[line 279] \nAt JingleMessageHelper.java:[line 385] \nAt ChatSessionFragment.java:[line 297] \nAt ChatSessionFragment.java:[line 298] \nAt ChatSessionRecord.java:[line 108] \nAt AvatarManager.java:[line 196] \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 332] \nAt AvatarManager.java:[line 359] \nAt AvatarManager.java:[line 385] \nAt AvatarManager.java:[line 437] \nAt AvatarManager.java:[line 438] \nAt AvatarManager.java:[line 445] \nAt AvatarManager.java:[line 462] \nAt AvatarManager.java:[line 537] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 99] \nAt JidToHashCacheFile.java:[line 131] \nAt UserAvatarManager.java:[line 198] \nAt UserAvatarManager.java:[line 315] \nAt UserAvatarManager.java:[line 317] \nAt VCardAvatarManager.java:[line 175] \nAt VCardAvatarManager.java:[line 181] \nAt VCardAvatarManager.java:[line 185] \nAt VCardAvatarManager.java:[line 270] \nAt VCardAvatarManager.java:[line 284] \nAt VCardAvatarManager.java:[line 290] \nAt VCardAvatarManager.java:[line 142]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "\t\t\tLOGGER.log(Level.WARNING, \"Could not restore photoHash from file: \" + id, e);\n"}, "startLine": 99}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.java"}, "contextRegion": {"snippet": {"text": "\t\tcatch (IOException e) {\n\t\t\tLOGGER.log(Level.WARNING, \"Could not restore photoHash from file: \" + id, e);\n"}, "endLine": 99, "startLine": 98}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "CRLF_INJECTION_LOGS", "ruleIndex": 20}, {"message": {"markdown": "", "text": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages \nAt JidToHashCacheFile.java:[lines 35-143] \nIn class org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile.getHashForJid(BareJid) \nAt JidToHashCacheFile.java:[line 106] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V \nSink parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nMethod usage with tainted arguments detected \nAt MetaContactImpl.java:[line 634] \nAt GlobalDisplayDetailsImpl.java:[line 135] \nAt GlobalDisplayDetailsImpl.java:[line 136] \nAt GlobalDisplayDetailsImpl.java:[line 305] \nAt GlobalDisplayDetailsImpl.java:[line 306] \nAt InfoRetriever.java:[line 62] \nAt InfoRetriever.java:[line 83] \nAt InfoRetriever.java:[line 119] \nAt InfoRetriever.java:[line 147] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1651] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1687] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1705] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 110] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 129] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 140] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 269] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 307] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 393] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 59] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 87] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 111] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 152] \nAt ServerStoredContactListJabberImpl.java:[line 1544] \nAt ServerStoredContactListJabberImpl.java:[line 1550] \nAt AccountID.java:[line 245] \nAt AccountInfoPresenceActivity.java:[line 759] \nAt AccountsListActivity.java:[line 242] \nAt AccountsListActivity.java:[line 244] \nAt AndroidCallListener.java:[line 225] \nAt CallEnded.java:[line 40] \nAt CallManager.java:[line 581] \nAt JingleMessageCallActivity.java:[line 153] \nAt JingleMessageHelper.java:[line 279] \nAt JingleMessageHelper.java:[line 385] \nAt ChatSessionFragment.java:[line 297] \nAt ChatSessionFragment.java:[line 298] \nAt ChatSessionRecord.java:[line 108] \nAt AvatarManager.java:[line 196] \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 332] \nAt AvatarManager.java:[line 359] \nAt AvatarManager.java:[line 385] \nAt AvatarManager.java:[line 437] \nAt AvatarManager.java:[line 438] \nAt AvatarManager.java:[line 445] \nAt AvatarManager.java:[line 462] \nAt AvatarManager.java:[line 537] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 106] \nAt JidToHashCacheFile.java:[line 131] \nAt UserAvatarManager.java:[line 198] \nAt UserAvatarManager.java:[line 315] \nAt UserAvatarManager.java:[line 317] \nAt VCardAvatarManager.java:[line 175] \nAt VCardAvatarManager.java:[line 181] \nAt VCardAvatarManager.java:[line 185] \nAt VCardAvatarManager.java:[line 270] \nAt VCardAvatarManager.java:[line 284] \nAt VCardAvatarManager.java:[line 290] \nAt VCardAvatarManager.java:[line 142]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "\t\t\t\tLOGGER.log(Level.WARNING, \"Error while closing stream: \" + id, e);\n"}, "startLine": 106}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.java"}, "contextRegion": {"snippet": {"text": "\t\t\tcatch (IOException e) {\n\t\t\t\tLOGGER.log(Level.WARNING, \"Error while closing stream: \" + id, e);\n"}, "endLine": 106, "startLine": 105}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "CRLF_INJECTION_LOGS", "ruleIndex": 20}, {"message": {"markdown": "", "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt JidToHashCacheFile.java:[lines 35-143] \nIn class org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile \nIn method org.jivesoftware.smackx.avatar.cache.JidToHashCacheFile.getFileFor(BareJid) \nAt JidToHashCacheFile.java:[line 132] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smack/util/stringencoder/StringEncoder.encode(Ljava/lang/Object;)Ljava/lang/String;."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "\t\treturn new File(mStoreDir, filename);\n"}, "startLine": 132}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.java"}, "contextRegion": {"snippet": {"text": "\t\tString filename = filenameEncoder.encode(id.toString());\n\t\treturn new File(mStoreDir, filename);\n"}, "endLine": 132, "startLine": 131}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PATH_TRAVERSAL_IN", "ruleIndex": 0}, {"message": {"markdown": "", "text": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt HttpAvatarRetriever.java:[lines 38-71] \nIn class org.jivesoftware.smackx.avatar.useravatar.HttpAvatarRetriever \nIn method org.jivesoftware.smackx.avatar.useravatar.HttpAvatarRetriever.getAvatar() \nAt HttpAvatarRetriever.java:[line 58] \nSink method java/net/URL.openStream()Ljava/io/InputStream; \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/useravatar/HttpAvatarRetriever.mUrl \nAt HttpAvatarRetriever.java:[line 58]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        InputStream in = mUrl.openStream();\n"}, "startLine": 58}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/jivesoftware/smackx/avatar/useravatar/HttpAvatarRetriever.java"}, "contextRegion": {"snippet": {"text": "            mUrl = new URL(mUrlString);\n        InputStream in = mUrl.openStream();\n"}, "endLine": 58, "startLine": 57}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "URLCONNECTION_SSRF_FD", "ruleIndex": 9}, {"message": {"markdown": "", "text": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt UserAvatarManager.java:[lines 57-429] \nIn class org.jivesoftware.smackx.avatar.useravatar.UserAvatarManager \nIn method org.jivesoftware.smackx.avatar.useravatar.UserAvatarManager.downloadAvatar(EntityBareJid, String, AvatarMetadata$Info) \nAt UserAvatarManager.java:[line 338] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.isAvatarNew(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)Z parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.addJidToAvatarHashIndex(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 1 \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.addJidToAvatarHashIndex(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.isHashMultipleOwner(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)Z parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/useravatar/AvatarRetrieverFactory.getRetriever(Lorg/jivesoftware/smack/XMPPConnection;Lorg/jxmpp/jid/EntityBareJid;Lorg/jivesoftware/smackx/avatar/useravatar/packet/AvatarMetadata$Info;)Lorg/jivesoftware/smackx/avatar/useravatar/AvatarRetriever; parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/useravatar/XmppAvatarRetriever.<init>(Lorg/jivesoftware/smack/XMPPConnection;Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.addHashByJid(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 1 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nTainted source org/jivesoftware/smackx/avatar/useravatar/UserAvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/cache/AvatarCacheFile.purgeItemFor(Ljava/lang/String;)Z parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/useravatar/UserAvatarManager.downloadAvatar(Lorg/jxmpp/jid/EntityBareJid;Ljava/lang/String;Lorg/jivesoftware/smackx/avatar/useravatar/packet/AvatarMetadata$Info;)Z parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/useravatar/UserAvatarManager.downloadAvatar(Lorg/jxmpp/jid/EntityBareJid;Ljava/lang/String;Lorg/jivesoftware/smackx/avatar/useravatar/packet/AvatarMetadata$Info;)Z parameter 2 \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 316] \nAt AvatarManager.java:[line 317] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131] \nAt UserAvatarManager.java:[line 317] \nAt UserAvatarManager.java:[line 334] \nAt UserAvatarManager.java:[line 338] \nAt XmppAvatarRetriever.java:[line 51]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                LOGGER.log(Level.INFO, \"Avatar with new avatarHash received (old => new) \"\n"}, "startLine": 338}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/jivesoftware/smackx/avatar/useravatar/UserAvatarManager.java"}, "contextRegion": {"snippet": {"text": "\n                LOGGER.log(Level.INFO, \"Avatar with new avatarHash received (old => new) \"\n"}, "endLine": 338, "startLine": 337}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "CRLF_INJECTION_LOGS", "ruleIndex": 20}, {"message": {"markdown": "", "text": "Unsafe comparison of hash that are susceptible to timing attack \nAt UserAvatarManager.java:[lines 57-429] \nIn class org.jivesoftware.smackx.avatar.useravatar.UserAvatarManager \nIn method org.jivesoftware.smackx.avatar.useravatar.UserAvatarManager.downloadAvatar(EntityBareJid, String, AvatarMetadata$Info) \nAt UserAvatarManager.java:[line 334] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/useravatar/UserAvatarManager.downloadAvatar(Lorg/jxmpp/jid/EntityBareJid;Ljava/lang/String;Lorg/jivesoftware/smackx/avatar/useravatar/packet/AvatarMetadata$Info;)Z parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.addJidToAvatarHashIndex(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 0 \nMethod usage not detected \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1705] \nAt AvatarManager.java:[line 316] \nAt AvatarManager.java:[line 317]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                if (!TextUtils.isEmpty(currentAvatarHash) && !currentAvatarHash.equals(avatarId)\n"}, "startLine": 334}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/jivesoftware/smackx/avatar/useravatar/UserAvatarManager.java"}, "contextRegion": {"snippet": {"text": "                 */\n                if (!TextUtils.isEmpty(currentAvatarHash) && !currentAvatarHash.equals(avatarId)\n"}, "endLine": 334, "startLine": 333}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "UNSAFE_HASH_EQUALS", "ruleIndex": 3}, {"message": {"markdown": "", "text": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt VCardAvatarManager.java:[lines 49-363] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager \nIn method org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager.downloadVCard(BareJid) \nAt VCardAvatarManager.java:[line 181] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/lang/Exception.getMessage()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.mAccount \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.downloadVCard(Lorg/jxmpp/jid/BareJid;)Lorg/jivesoftware/smackx/vcardtemp/packet/VCard; parameter 0 \nMethod usage with tainted arguments detected \nAt InfoRetriever.java:[line 62] \nAt InfoRetriever.java:[line 83] \nAt InfoRetriever.java:[line 119] \nAt InfoRetriever.java:[line 147] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1651] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 110] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 129] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 140] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 269] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 307] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 393] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 59] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 87] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 111] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 152] \nAt ServerStoredContactListJabberImpl.java:[line 1550] \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131] \nAt VCardAvatarManager.java:[line 175] \nAt VCardAvatarManager.java:[line 181] \nAt VCardAvatarManager.java:[line 290]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            LOGGER.log(Level.WARNING, \"Error while downloading VCard for: '\" + userId + \"'. \" + e.getMessage());\n"}, "startLine": 181}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.java"}, "contextRegion": {"snippet": {"text": "                | SmackException.NotConnectedException | InterruptedException e) {\n            LOGGER.log(Level.WARNING, \"Error while downloading VCard for: '\" + userId + \"'. \" + e.getMessage());\n"}, "endLine": 181, "startLine": 180}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "CRLF_INJECTION_LOGS", "ruleIndex": 20}, {"message": {"markdown": "", "text": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt VCardAvatarManager.java:[lines 49-363] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager \nIn method org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager.downloadVCard(BareJid) \nAt VCardAvatarManager.java:[line 218] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.addJidToAvatarHashIndex(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 1 \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.addJidToAvatarHashIndex(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source java/lang/Exception.getMessage()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.addHashByJid(Lorg/jxmpp/jid/BareJid;Ljava/lang/String;)V parameter 1 \nUnknown source java/lang/Object.toString()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.setAvatarHash(Ljava/lang/String;)Z parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.addAvatarImage([B)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.downloadVCard(Lorg/jxmpp/jid/BareJid;)Lorg/jivesoftware/smackx/vcardtemp/packet/VCard; parameter 0 \nUnknown source org/jivesoftware/smack/util/StringUtils.encodeHex([B)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.mAccount \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHash([B)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/AvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getFileFor(Lorg/jxmpp/jid/BareJid;)Ljava/io/File; parameter 0 \nMethod usage with tainted arguments detected \nAt InfoRetriever.java:[line 62] \nAt InfoRetriever.java:[line 83] \nAt InfoRetriever.java:[line 119] \nAt InfoRetriever.java:[line 147] \nAt OperationSetPersistentPresenceJabberImpl.java:[line 1651] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 110] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 129] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 140] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 269] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 307] \nAt OperationSetServerStoredAccountInfoJabberImpl.java:[line 393] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 59] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 87] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 111] \nAt OperationSetServerStoredContactInfoJabberImpl.java:[line 152] \nAt ServerStoredContactListJabberImpl.java:[line 1550] \nAt AvatarManager.java:[line 216] \nAt AvatarManager.java:[line 217] \nAt AvatarManager.java:[line 257] \nAt AvatarManager.java:[line 258] \nAt AvatarManager.java:[line 297] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 316] \nAt AvatarManager.java:[line 317] \nAt JidToHashCacheFile.java:[line 96] \nAt JidToHashCacheFile.java:[line 131] \nAt VCardAvatarManager.java:[line 175] \nAt VCardAvatarManager.java:[line 181] \nAt VCardAvatarManager.java:[line 192] \nAt VCardAvatarManager.java:[line 199] \nAt VCardAvatarManager.java:[line 218] \nAt VCardAvatarManager.java:[line 290]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            LOGGER.log(Level.INFO, \"Downloaded vcard info for: \" + userId + \"; Hash = \" + avatarHash);\n"}, "startLine": 218}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.java"}, "contextRegion": {"snippet": {"text": "            }\n            LOGGER.log(Level.INFO, \"Downloaded vcard info for: \" + userId + \"; Hash = \" + avatarHash);\n"}, "endLine": 218, "startLine": 217}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "CRLF_INJECTION_LOGS", "ruleIndex": 20}, {"message": {"markdown": "", "text": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt VCardAvatarManager.java:[lines 49-363] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager \nIn method org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager.processContactPhotoPresence(Stanza) \nAt VCardAvatarManager.java:[line 293] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.getAvatarHash()Ljava/lang/String; \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nTainted source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nUnknown source org/jivesoftware/smack/packet/Stanza.getFrom()Lorg/jxmpp/jid/Jid; \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.mAvatarHash \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt VCardAvatarManager.java:[line 270] \nAt VCardAvatarManager.java:[line 281] \nAt VCardAvatarManager.java:[line 293] \nAt VCardTempXUpdate.java:[line 109]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                        LOGGER.log(Level.INFO, \"Presence with new avatarHash received (old => new) from: \"\n"}, "startLine": 293}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.java"}, "contextRegion": {"snippet": {"text": "                    if ((mVCard != null) && (mVCard.getAvatar() != null)) {\n                        LOGGER.log(Level.INFO, \"Presence with new avatarHash received (old => new) from: \"\n"}, "endLine": 293, "startLine": 292}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "CRLF_INJECTION_LOGS", "ruleIndex": 20}, {"message": {"markdown": "", "text": "Unsafe comparison of hash that are susceptible to timing attack \nAt VCardAvatarManager.java:[lines 49-363] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager \nIn method org.jivesoftware.smackx.avatar.vcardavatar.VCardAvatarManager.downloadVCard(BareJid) \nAt VCardAvatarManager.java:[line 193] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nTainted source org/jivesoftware/smackx/avatar/cache/JidToHashCacheFile.getHashForJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nUnknown source android/util/LruCache.get(Ljava/lang/Object;)Ljava/lang/Object; \nTainted source org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.getAvatarHashByJid(Lorg/jxmpp/jid/BareJid;)Ljava/lang/String; \nTainted source java/io/DataInputStream.readUTF()Ljava/lang/String; \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt JidToHashCacheFile.java:[line 96] \nAt VCardAvatarManager.java:[line 185]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                if (!avatarHash.equals(currentAvatarHash)) {\n"}, "startLine": 193}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/jivesoftware/smackx/avatar/vcardavatar/VCardAvatarManager.java"}, "contextRegion": {"snippet": {"text": "                avatarHash = addAvatarImage(avatarImage);\n                if (!avatarHash.equals(currentAvatarHash)) {\n"}, "endLine": 193, "startLine": 192}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "UNSAFE_HASH_EQUALS", "ruleIndex": 3}, {"message": {"markdown": "", "text": "This use of java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt VCardTempXUpdate.java:[lines 42-158] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.packet.VCardTempXUpdate \nIn method org.jivesoftware.smackx.avatar.vcardavatar.packet.VCardTempXUpdate.setAvatarHash(String) \nAt VCardTempXUpdate.java:[line 94] \nSink method java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.setAvatarHash(Ljava/lang/String;)Z parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.mAvatarHash \nMethod usage with tainted arguments detected \nAt AvatarManager.java:[line 216] \nAt AvatarManager.java:[line 217] \nAt AvatarManager.java:[line 299] \nAt AvatarManager.java:[line 301] \nAt AvatarManager.java:[line 531] \nAt AvatarManager.java:[line 535] \nAt JidToHashCacheFile.java:[line 96] \nAt VCardAvatarManager.java:[line 192] \nAt VCardAvatarManager.java:[line 200] \nAt VCardAvatarManager.java:[line 142] \nAt VCardAvatarManager.java:[line 144] \nAt VCardTempXUpdate.java:[line 94]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "            LOGGER.log(Level.INFO, \"Account avatar hash updated with (old => new): \" + \"\\n\"\n"}, "startLine": 94}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.java"}, "contextRegion": {"snippet": {"text": "        if ((avatarHash != null) && !avatarHash.equals(mAvatarHash)) {\n            LOGGER.log(Level.INFO, \"Account avatar hash updated with (old => new): \" + \"\\n\"\n"}, "endLine": 94, "startLine": 93}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "CRLF_INJECTION_LOGS", "ruleIndex": 20}, {"message": {"markdown": "", "text": "Unsafe comparison of hash that are susceptible to timing attack \nAt VCardTempXUpdate.java:[lines 42-158] \nIn class org.jivesoftware.smackx.avatar.vcardavatar.packet.VCardTempXUpdate \nIn method org.jivesoftware.smackx.avatar.vcardavatar.packet.VCardTempXUpdate.setAvatarHash(String) \nAt VCardTempXUpdate.java:[line 93] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.mAvatarHash \nAt VCardTempXUpdate.java:[line 93]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        if ((avatarHash != null) && !avatarHash.equals(mAvatarHash)) {\n"}, "startLine": 93}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/jivesoftware/smackx/avatar/vcardavatar/packet/VCardTempXUpdate.java"}, "contextRegion": {"snippet": {"text": "        boolean isNewHash = false;\n        if ((avatarHash != null) && !avatarHash.equals(mAvatarHash)) {\n"}, "endLine": 93, "startLine": 92}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "UNSAFE_HASH_EQUALS", "ruleIndex": 3}, {"message": {"markdown": "", "text": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt HttpFileUploadManager.java:[lines 77-602] \nIn class org.jivesoftware.smackx.httpfileupload.HttpFileUploadManager \nIn method org.jivesoftware.smackx.httpfileupload.HttpFileUploadManager.upload(InputStream, long, Slot, UploadProgressListener) \nAt HttpFileUploadManager.java:[line 511] \nSink method java/net/URL.openConnection()Ljava/net/URLConnection; \nSink parameter 0 \nUnknown source org/jivesoftware/smackx/httpfileupload/element/Slot.getPutUrl()Ljava/net/URL;."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        final HttpURLConnection urlConnection = (HttpURLConnection) putUrl.openConnection();\n"}, "startLine": 511}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/jivesoftware/smackx/httpfileupload/HttpFileUploadManager.java"}, "contextRegion": {"snippet": {"text": "\n        final HttpURLConnection urlConnection = (HttpURLConnection) putUrl.openConnection();\n"}, "endLine": 511, "startLine": 510}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "URLCONNECTION_SSRF_FD", "ruleIndex": 9}, {"message": {"markdown": "", "text": "The initialization vector (IV) is not properly generated \nAt OmemoMediaSharingUtils.java:[lines 38-122] \nIn class org.jivesoftware.smackx.omemo_media_sharing.OmemoMediaSharingUtils \nIn method org.jivesoftware.smackx.omemo_media_sharing.OmemoMediaSharingUtils.decryptionCipherFrom(byte[], byte[]) \nAt OmemoMediaSharingUtils.java:[line 119]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        IvParameterSpec ivSpec = new IvParameterSpec(iv);\n"}, "startLine": 119}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/jivesoftware/smackx/omemo_media_sharing/OmemoMediaSharingUtils.java"}, "contextRegion": {"snippet": {"text": "        SecretKey secretKey = new SecretKeySpec(key, KEYTYPE);\n        IvParameterSpec ivSpec = new IvParameterSpec(iv);\n"}, "endLine": 119, "startLine": 118}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "STATIC_IV", "ruleIndex": 21}, {"message": {"markdown": "", "text": "The initialization vector (IV) is not properly generated \nAt OmemoMediaSharingUtils.java:[lines 38-122] \nIn class org.jivesoftware.smackx.omemo_media_sharing.OmemoMediaSharingUtils \nIn method org.jivesoftware.smackx.omemo_media_sharing.OmemoMediaSharingUtils.encryptionCipherFrom(byte[], byte[]) \nAt OmemoMediaSharingUtils.java:[line 90]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "        IvParameterSpec ivSpec = new IvParameterSpec(iv);\n"}, "startLine": 90}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/jivesoftware/smackx/omemo_media_sharing/OmemoMediaSharingUtils.java"}, "contextRegion": {"snippet": {"text": "        SecretKey secretKey = new SecretKeySpec(key, KEYTYPE);\n        IvParameterSpec ivSpec = new IvParameterSpec(iv);\n"}, "endLine": 90, "startLine": 89}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "STATIC_IV", "ruleIndex": 21}, {"message": {"markdown": "", "text": "The initialization vector (IV) is not properly generated \nAt OmemoMediaSharingUtils.java:[lines 38-122] \nIn class org.jivesoftware.smackx.omemo_media_sharing.OmemoMediaSharingUtils \nIn method org.jivesoftware.smackx.omemo_media_sharing.OmemoMediaSharingUtils.encryptionCipherFrom(byte[], byte[]) \nAt OmemoMediaSharingUtils.java:[line 95]."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "IvParameterSpec cipherIVSpec = new IvParameterSpec(cipherVAL.getBytes());\n"}, "startLine": 95}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/jivesoftware/smackx/omemo_media_sharing/OmemoMediaSharingUtils.java"}, "contextRegion": {"snippet": {"text": "}\nIvParameterSpec cipherIVSpec = new IvParameterSpec(cipherVAL.getBytes());\n"}, "endLine": 95, "startLine": 94}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "STATIC_IV", "ruleIndex": 21}, {"message": {"markdown": "", "text": "This random generator (java.lang.Math.random()) is predictable \nAt RelayChannel.java:[lines 11-234] \nIn class org.xmpp.jnodes.RelayChannel \nIn method org.xmpp.jnodes.RelayChannel.createLocalRelayChannel(String, int, int) \nAt RelayChannel.java:[line 38] \nValue java.lang.Math.random()."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "                int a = Math.round((int) (Math.random() * range)) + minPort;\n"}, "startLine": 38}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/xmpp/jnodes/RelayChannel.java"}, "contextRegion": {"snippet": {"text": "            try {\n                int a = Math.round((int) (Math.random() * range)) + minPort;\n"}, "endLine": 38, "startLine": 37}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PREDICTABLE_RANDOM", "ruleIndex": 2}, {"message": {"markdown": "", "text": "This random generator (java.util.Random) is predictable \nAt PublicIPResolver.java:[lines 8-172] \nIn class org.xmpp.jnodes.nio.PublicIPResolver \nIn method org.xmpp.jnodes.nio.PublicIPResolver.<static initializer for PublicIPResolver>() \nAt PublicIPResolver.java:[line 13] \nValue java.util.Random."}, "level": "error", "locations": [{"physicalLocation": {"region": {"snippet": {"text": "    private final static Random r = new Random(System.nanoTime());\n"}, "startLine": 13}, "artifactLocation": {"uri": "file:///media/data/muse2/muse2repo_new_atalk/src_code/atalk-android-mutant8/aTalk/src/main/java/org/xmpp/jnodes/nio/PublicIPResolver.java"}, "contextRegion": {"snippet": {"text": "    private final static byte[] CHANGE_REQUEST_NO_CHANGE = {0, 3, 0, 4, 0, 0, 0, 0};\n    private final static Random r = new Random(System.nanoTime());\n"}, "endLine": 13, "startLine": 12}}}], "properties": {"issue_confidence": "MEDIUM", "issue_severity": "HIGH"}, "baselineState": "new", "partialFingerprints": {}, "ruleId": "PREDICTABLE_RANDOM", "ruleIndex": 2}], "automationDetails": {"description": {"text": "Static Analysis Security Test results using @ShiftLeft/sast-scan"}, "guid": "f6d90101-d549-43fd-8f32-c7dcb93dc161"}, "versionControlProvenance": [{"branch": "", "repositoryUri": "", "revisionId": ""}]}

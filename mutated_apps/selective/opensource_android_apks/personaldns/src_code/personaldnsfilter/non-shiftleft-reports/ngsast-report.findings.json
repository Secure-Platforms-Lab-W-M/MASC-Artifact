{"findings": [{"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt BlockedHosts.java:[lines 66-442] \nIn class dnsfilter.BlockedHosts \nIn method dnsfilter.BlockedHosts.loadPersistedIndex(String, boolean, int, int, Hashtable) \nAt BlockedHosts.java:[line 159] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source dnsfilter/BlockedHosts.loadPersistedIndex(Ljava/lang/String;ZIILjava/util/Hashtable;)Ldnsfilter/BlockedHosts; parameter 4 \nMethod usage not detected \nAt BlockedHosts.java:[line 159].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/8414c19140f6906c18dd43c705552c5f", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt BlockedHosts.java:[lines 66-442] \nIn class dnsfilter.BlockedHosts \nIn method dnsfilter.BlockedHosts.loadPersistedIndex(String, boolean, int, int, Hashtable) \nAt BlockedHosts.java:[line 159] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source dnsfilter/BlockedHosts.loadPersistedIndex(Ljava/lang/String;ZIILjava/util/Hashtable;)Ldnsfilter/BlockedHosts; parameter 4 \nMethod usage not detected \nAt BlockedHosts.java:[line 159].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/dnsfilter/BlockedHosts.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 159, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\tFile patternFile = new File(path+\"/blockedpatterns\");\n", "snippetText": "\t\tVector<String[]> blockedPatterns = null;\n\t\tFile patternFile = new File(path+\"/blockedpatterns\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "This API (java/io/FileOutputStream.<init>(Ljava/lang/String;)V) writes to a file whose location might be specified by user input \nAt BlockedHosts.java:[lines 66-442] \nIn class dnsfilter.BlockedHosts \nIn method dnsfilter.BlockedHosts.persist(String) \nAt BlockedHosts.java:[line 177] \nSink method java/io/FileOutputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source dnsfilter/BlockedHosts.persist(Ljava/lang/String;)V parameter 0 \nMethod usage not detected \nAt BlockedHosts.java:[line 177].", "description": "This API (java/io/FileOutputStream.<init>(Ljava/lang/String;)V) writes to a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_OUT/897309cb3545e40f05d79f0754a8d084", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL OUT", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/FileOutputStream.<init>(Ljava/lang/String;)V) writes to a file whose location might be specified by user input \nAt BlockedHosts.java:[lines 66-442] \nIn class dnsfilter.BlockedHosts \nIn method dnsfilter.BlockedHosts.persist(String) \nAt BlockedHosts.java:[line 177] \nSink method java/io/FileOutputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source dnsfilter/BlockedHosts.persist(Ljava/lang/String;)V parameter 0 \nMethod usage not detected \nAt BlockedHosts.java:[line 177].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/dnsfilter/BlockedHosts.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 177, "ruleId": "PATH_TRAVERSAL_OUT", "ruleName": "PATH TRAVERSAL OUT", "contextText": "\t\t\t\tOutputStream patterns = new BufferedOutputStream(new FileOutputStream(path + \"/blockedpatterns\"));\n", "snippetText": "\t\t\tif (blockedPatterns != null) {\n\t\t\t\tOutputStream patterns = new BufferedOutputStream(new FileOutputStream(path + \"/blockedpatterns\"));\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt DNSFilterManager.java:[lines 59-1395] \nIn class dnsfilter.DNSFilterManager \nIn method dnsfilter.DNSFilterManager.copyLocalFile(String, String) \nAt DNSFilterManager.java:[line 436] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source dnsfilter/DNSFilterManager.copyLocalFile(Ljava/lang/String;Ljava/lang/String;)V parameter 0 \nMethod usage not detected \nAt DNSFilterManager.java:[line 436] \nAt DNSFilterManager.java:[line 462] \nAt DNSFilterManager.java:[line 463] \nAt DNSFilterManager.java:[line 464].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/e8beb2de723864fad08035736ffd100d", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt DNSFilterManager.java:[lines 59-1395] \nIn class dnsfilter.DNSFilterManager \nIn method dnsfilter.DNSFilterManager.copyLocalFile(String, String) \nAt DNSFilterManager.java:[line 436] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source dnsfilter/DNSFilterManager.copyLocalFile(Ljava/lang/String;Ljava/lang/String;)V parameter 0 \nMethod usage not detected \nAt DNSFilterManager.java:[line 436] \nAt DNSFilterManager.java:[line 462] \nAt DNSFilterManager.java:[line 463] \nAt DNSFilterManager.java:[line 464].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/dnsfilter/DNSFilterManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 436, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\tFile toFile = new File(WORKDIR  + to);\n", "snippetText": "\t\tFile fromFile = new File(WORKDIR  + from);\n\t\tFile toFile = new File(WORKDIR  + to);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt DNSFilterManager.java:[lines 59-1395] \nIn class dnsfilter.DNSFilterManager \nIn method dnsfilter.DNSFilterManager.getAvailableBackups() \nAt DNSFilterManager.java:[line 451] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.list()[Ljava/lang/String; \nAt DNSFilterManager.java:[line 451].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/de71def3b9ad0ce296421f272cc5f929", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt DNSFilterManager.java:[lines 59-1395] \nIn class dnsfilter.DNSFilterManager \nIn method dnsfilter.DNSFilterManager.getAvailableBackups() \nAt DNSFilterManager.java:[line 451] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.list()[Ljava/lang/String; \nAt DNSFilterManager.java:[line 451].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/dnsfilter/DNSFilterManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 451, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\t\tif (new File(WORKDIR+\"backup/\" + name).isDirectory())\n", "snippetText": "\t\t{\n\t\t\tif (new File(WORKDIR+\"backup/\" + name).isDirectory())\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "Files could be saved to external storage \nAt BootUpReceiver.java:[lines 36-67] \nIn class dnsfilter.android.BootUpReceiver \nIn method dnsfilter.android.BootUpReceiver.getConfig() \nAt BootUpReceiver.java:[line 58].", "description": "Files could be saved to external storage .", "internal_id": "ANDROID_EXTERNAL_FILE_ACCESS/a0570157fd8c251b6bb9025443dd01f9", "severity": "moderate", "owasp_category": "", "category": "ANDROID EXTERNAL FILE ACCESS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Files could be saved to external storage \nAt BootUpReceiver.java:[lines 36-67] \nIn class dnsfilter.android.BootUpReceiver \nIn method dnsfilter.android.BootUpReceiver.getConfig() \nAt BootUpReceiver.java:[line 58].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/dnsfilter/android/BootUpReceiver.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 58, "ruleId": "ANDROID_EXTERNAL_FILE_ACCESS", "ruleName": "ANDROID EXTERNAL FILE ACCESS", "contextText": "\t\tFile propsFile = new File(Environment.getExternalStorageDirectory().getAbsolutePath() + \"/PersonalDNSFilter/dnsfilter.conf\");\n", "snippetText": "\n\t\tFile propsFile = new File(Environment.getExternalStorageDirectory().getAbsolutePath() + \"/PersonalDNSFilter/dnsfilter.conf\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt BootUpReceiver.java:[lines 36-67] \nIn class dnsfilter.android.BootUpReceiver \nIn method dnsfilter.android.BootUpReceiver.getConfig() \nAt BootUpReceiver.java:[line 58] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nAt BootUpReceiver.java:[line 58].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/6b0fee63ad22638677db52fa7d1ca6ce", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt BootUpReceiver.java:[lines 36-67] \nIn class dnsfilter.android.BootUpReceiver \nIn method dnsfilter.android.BootUpReceiver.getConfig() \nAt BootUpReceiver.java:[line 58] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nAt BootUpReceiver.java:[line 58].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/dnsfilter/android/BootUpReceiver.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 58, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\tFile propsFile = new File(Environment.getExternalStorageDirectory().getAbsolutePath() + \"/PersonalDNSFilter/dnsfilter.conf\");\n", "snippetText": "\n\t\tFile propsFile = new File(Environment.getExternalStorageDirectory().getAbsolutePath() + \"/PersonalDNSFilter/dnsfilter.conf\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "Files could be saved to external storage \nAt DNSProxyActivity.java:[lines 88-1694] \nIn class dnsfilter.android.DNSProxyActivity \nIn method dnsfilter.android.DNSProxyActivity.<static initializer for DNSProxyActivity>() \nAt DNSProxyActivity.java:[line 148].", "description": "Files could be saved to external storage .", "internal_id": "ANDROID_EXTERNAL_FILE_ACCESS/97582d2074dea202e890b6dbc97852df", "severity": "moderate", "owasp_category": "", "category": "ANDROID EXTERNAL FILE ACCESS", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Files could be saved to external storage \nAt DNSProxyActivity.java:[lines 88-1694] \nIn class dnsfilter.android.DNSProxyActivity \nIn method dnsfilter.android.DNSProxyActivity.<static initializer for DNSProxyActivity>() \nAt DNSProxyActivity.java:[line 148].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/dnsfilter/android/DNSProxyActivity.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 148, "ruleId": "ANDROID_EXTERNAL_FILE_ACCESS", "ruleName": "ANDROID EXTERNAL FILE ACCESS", "contextText": "\tprotected static File WORKPATH = new File(Environment.getExternalStorageDirectory().getAbsolutePath() + \"/PersonalDNSFilter\");\n", "snippetText": "\n\tprotected static File WORKPATH = new File(Environment.getExternalStorageDirectory().getAbsolutePath() + \"/PersonalDNSFilter\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "Possible information exposure through an error message \nAt DNSProxyActivity.java:[lines 88-1694] \nIn class dnsfilter.android.DNSProxyActivity \nIn method dnsfilter.android.DNSProxyActivity.dump(Exception) \nAt DNSProxyActivity.java:[line 553].", "description": "Possible information exposure through an error message .", "internal_id": "INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE/bae2c70f5a0efe36b849c6b3bc91f88c", "severity": "moderate", "owasp_category": "", "category": "INFORMATION EXPOSURE THROUGH AN ERROR MESSAGE", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Possible information exposure through an error message \nAt DNSProxyActivity.java:[lines 88-1694] \nIn class dnsfilter.android.DNSProxyActivity \nIn method dnsfilter.android.DNSProxyActivity.dump(Exception) \nAt DNSProxyActivity.java:[line 553].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/dnsfilter/android/DNSProxyActivity.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 553, "ruleId": "INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE", "ruleName": "INFORMATION EXPOSURE THROUGH AN ERROR MESSAGE", "contextText": "\t\te.printStackTrace(new PrintWriter(str));\n", "snippetText": "\t\tStringWriter str = new StringWriter();\n\t\te.printStackTrace(new PrintWriter(str));\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "Possible information exposure through an error message \nAt DNSProxyActivity.java:[lines 88-1694] \nIn class dnsfilter.android.DNSProxyActivity \nIn method dnsfilter.android.DNSProxyActivity.logException(Exception) \nAt DNSProxyActivity.java:[line 1460].", "description": "Possible information exposure through an error message .", "internal_id": "INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE/5540caee075abbddeee8862df6ec7538", "severity": "moderate", "owasp_category": "", "category": "INFORMATION EXPOSURE THROUGH AN ERROR MESSAGE", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Possible information exposure through an error message \nAt DNSProxyActivity.java:[lines 88-1694] \nIn class dnsfilter.android.DNSProxyActivity \nIn method dnsfilter.android.DNSProxyActivity.logException(Exception) \nAt DNSProxyActivity.java:[line 1460].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/dnsfilter/android/DNSProxyActivity.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 1460, "ruleId": "INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE", "ruleName": "INFORMATION EXPOSURE THROUGH AN ERROR MESSAGE", "contextText": "\t\te.printStackTrace(new PrintWriter(str));\n", "snippetText": "\t\tStringWriter str = new StringWriter();\n\t\te.printStackTrace(new PrintWriter(str));\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt DNSProxyActivity.java:[lines 88-1694] \nIn class dnsfilter.android.DNSProxyActivity \nIn method dnsfilter.android.DNSProxyActivity.<static initializer for DNSProxyActivity>() \nAt DNSProxyActivity.java:[line 148] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nAt DNSProxyActivity.java:[line 148].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/88007a095575ee08e93903a49578b92c", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt DNSProxyActivity.java:[lines 88-1694] \nIn class dnsfilter.android.DNSProxyActivity \nIn method dnsfilter.android.DNSProxyActivity.<static initializer for DNSProxyActivity>() \nAt DNSProxyActivity.java:[line 148] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nAt DNSProxyActivity.java:[line 148].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/dnsfilter/android/DNSProxyActivity.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 148, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\tprotected static File WORKPATH = new File(Environment.getExternalStorageDirectory().getAbsolutePath() + \"/PersonalDNSFilter\");\n", "snippetText": "\n\tprotected static File WORKPATH = new File(Environment.getExternalStorageDirectory().getAbsolutePath() + \"/PersonalDNSFilter\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "This API (java/io/FileOutputStream.<init>(Ljava/lang/String;)V) writes to a file whose location might be specified by user input \nAt DNSProxyActivity.java:[lines 88-1694] \nIn class dnsfilter.android.DNSProxyActivity \nIn method dnsfilter.android.DNSProxyActivity.dump(Exception) \nAt DNSProxyActivity.java:[line 555] \nSink method java/io/FileOutputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source dnsfilter/android/DNSProxyActivity.WORKPATH \nUnknown source java/io/File.<init>(Ljava/lang/String;)V \nAt DNSProxyActivity.java:[line 148] \nAt DNSProxyActivity.java:[line 555].", "description": "This API (java/io/FileOutputStream.<init>(Ljava/lang/String;)V) writes to a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_OUT/8c9b62765584118fda2f1515f664f426", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL OUT", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/FileOutputStream.<init>(Ljava/lang/String;)V) writes to a file whose location might be specified by user input \nAt DNSProxyActivity.java:[lines 88-1694] \nIn class dnsfilter.android.DNSProxyActivity \nIn method dnsfilter.android.DNSProxyActivity.dump(Exception) \nAt DNSProxyActivity.java:[line 555] \nSink method java/io/FileOutputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source dnsfilter/android/DNSProxyActivity.WORKPATH \nUnknown source java/io/File.<init>(Ljava/lang/String;)V \nAt DNSProxyActivity.java:[line 148] \nAt DNSProxyActivity.java:[line 555].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/dnsfilter/android/DNSProxyActivity.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 555, "ruleId": "PATH_TRAVERSAL_OUT", "ruleName": "PATH TRAVERSAL OUT", "contextText": "\t\t\tFileOutputStream dump = new FileOutputStream(WORKPATH+\"/dump-\"+System.currentTimeMillis()+\".txt\");\n", "snippetText": "\t\ttry {\n\t\t\tFileOutputStream dump = new FileOutputStream(WORKPATH+\"/dump-\"+System.currentTimeMillis()+\".txt\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FilterConfig.java:[lines 28-366] \nIn class dnsfilter.android.FilterConfig \nIn method dnsfilter.android.FilterConfig.validateContent(View[]) \nAt FilterConfig.java:[line 352] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/lang/CharSequence.toString()Ljava/lang/String; \nUnknown source android/widget/TextView.getText()Ljava/lang/CharSequence; \nAt FilterConfig.java:[line 341] \nAt FilterConfig.java:[line 352].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/7450147d9954e5f80f08395d9f616be1", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FilterConfig.java:[lines 28-366] \nIn class dnsfilter.android.FilterConfig \nIn method dnsfilter.android.FilterConfig.validateContent(View[]) \nAt FilterConfig.java:[line 352] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/lang/CharSequence.toString()Ljava/lang/String; \nUnknown source android/widget/TextView.getText()Ljava/lang/CharSequence; \nAt FilterConfig.java:[line 341] \nAt FilterConfig.java:[line 352].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/dnsfilter/android/FilterConfig.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 352, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\t\t\tFile f = new File(urlStr.substring(7));\n", "snippetText": "\t\t\t} else {\n\t\t\t\tFile f = new File(urlStr.substring(7));\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "Object deserialization is used in dnsfilter.remote.RemoteAccessClient.getConfig() \nAt RemoteAccessClient.java:[lines 24-512] \nIn class dnsfilter.remote.RemoteAccessClient \nIn method dnsfilter.remote.RemoteAccessClient.getConfig() \nAt RemoteAccessClient.java:[line 230].", "description": "Object deserialization is used in dnsfilter.remote.RemoteAccessClient.getConfig() .", "internal_id": "OBJECT_DESERIALIZATION/b896021869bbb5a6f20aa13aa749f941", "severity": "critical", "owasp_category": "", "category": "Object Deserialization", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Object deserialization is used in dnsfilter.remote.RemoteAccessClient.getConfig() \nAt RemoteAccessClient.java:[lines 24-512] \nIn class dnsfilter.remote.RemoteAccessClient \nIn method dnsfilter.remote.RemoteAccessClient.getConfig() \nAt RemoteAccessClient.java:[line 230].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/dnsfilter/remote/RemoteAccessClient.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 230, "ruleId": "OBJECT_DESERIALIZATION", "ruleName": "Object Deserialization", "contextText": "                return (Properties) new ObjectInputStream(in).readObject();\n", "snippetText": "            try {\n                return (Properties) new ObjectInputStream(in).readObject();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "Unencrypted socket to dnsfilter.remote.RemoteAccessClient (instead of SSLSocket) \nAt RemoteAccessClient.java:[lines 24-512] \nIn class dnsfilter.remote.RemoteAccessClient \nIn method dnsfilter.remote.RemoteAccessClient.initConnection() \nAt RemoteAccessClient.java:[line 119] \nValue remote host.", "description": "Unencrypted socket to dnsfilter.remote.RemoteAccessClient (instead of SSLSocket) .", "internal_id": "UNENCRYPTED_SOCKET/9f83d255012238dab73c7acb850f6407", "severity": "moderate", "owasp_category": "", "category": "Unencrypted Socket", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Unencrypted socket to dnsfilter.remote.RemoteAccessClient (instead of SSLSocket) \nAt RemoteAccessClient.java:[lines 24-512] \nIn class dnsfilter.remote.RemoteAccessClient \nIn method dnsfilter.remote.RemoteAccessClient.initConnection() \nAt RemoteAccessClient.java:[line 119] \nValue remote host.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/dnsfilter/remote/RemoteAccessClient.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 119, "ruleId": "UNENCRYPTED_SOCKET", "ruleName": "Unencrypted Socket", "contextText": "            con = new Socket();\n", "snippetText": "            int id = -1;\n            con = new Socket();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "Unencrypted server socket (instead of SSLServerSocket) \nAt RemoteAccessServer.java:[lines 29-120] \nIn class dnsfilter.remote.RemoteAccessServer \nIn method new dnsfilter.remote.RemoteAccessServer(int, String) \nAt RemoteAccessServer.java:[line 40].", "description": "Unencrypted server socket (instead of SSLServerSocket) .", "internal_id": "UNENCRYPTED_SERVER_SOCKET/45066c8eed74d31ab580377b802dbae6", "severity": "moderate", "owasp_category": "", "category": "UNENCRYPTED SERVER SOCKET", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Unencrypted server socket (instead of SSLServerSocket) \nAt RemoteAccessServer.java:[lines 29-120] \nIn class dnsfilter.remote.RemoteAccessServer \nIn method new dnsfilter.remote.RemoteAccessServer(int, String) \nAt RemoteAccessServer.java:[line 40].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/dnsfilter/remote/RemoteAccessServer.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 40, "ruleId": "UNENCRYPTED_SERVER_SOCKET", "ruleName": "UNENCRYPTED SERVER SOCKET", "contextText": "        server = new ServerSocket(port);\n", "snippetText": "        Encryption.init_AES(keyphrase);\n        server = new ServerSocket(port);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "Possible information exposure through an error message \nAt RemoteAccessServer.java:[lines 319-378] \nIn class dnsfilter.remote.RemoteAccessServer$RemoteSession$1 \nIn method dnsfilter.remote.RemoteAccessServer$RemoteSession$1.logException(Exception) \nAt RemoteAccessServer.java:[line 359].", "description": "Possible information exposure through an error message .", "internal_id": "INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE/9f5e98a84468298fd8c61b27d4f1a527", "severity": "moderate", "owasp_category": "", "category": "INFORMATION EXPOSURE THROUGH AN ERROR MESSAGE", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Possible information exposure through an error message \nAt RemoteAccessServer.java:[lines 319-378] \nIn class dnsfilter.remote.RemoteAccessServer$RemoteSession$1 \nIn method dnsfilter.remote.RemoteAccessServer$RemoteSession$1.logException(Exception) \nAt RemoteAccessServer.java:[line 359].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/dnsfilter/remote/RemoteAccessServer.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 359, "ruleId": "INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE", "ruleName": "INFORMATION EXPOSURE THROUGH AN ERROR MESSAGE", "contextText": "                    e.printStackTrace(new PrintWriter(str));\n", "snippetText": "                    StringWriter str = new StringWriter();\n                    e.printStackTrace(new PrintWriter(str));\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "This random generator (java.lang.Math.random()) is predictable \nAt IPPacket.java:[lines 33-260] \nIn class ip.IPPacket \nIn method ip.IPPacket.<static initializer for IPPacket>() \nAt IPPacket.java:[line 33] \nValue java.lang.Math.random().", "description": "This random generator (java.lang.Math.random()) is predictable .", "internal_id": "PREDICTABLE_RANDOM/72e44f35e31614754632da8671a2fdd1", "severity": "moderate", "owasp_category": "", "category": "Predictable Random", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This random generator (java.lang.Math.random()) is predictable \nAt IPPacket.java:[lines 33-260] \nIn class ip.IPPacket \nIn method ip.IPPacket.<static initializer for IPPacket>() \nAt IPPacket.java:[line 33] \nValue java.lang.Math.random().", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/ip/IPPacket.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 33, "ruleId": "PREDICTABLE_RANDOM", "ruleName": "Predictable Random", "contextText": "\tstatic short curID = (short) (Math.random() * Short.MAX_VALUE);\n", "snippetText": "\n\tstatic short curID = (short) (Math.random() * Short.MAX_VALUE);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "Possible information exposure through an error message \nAt AsyncBulkLogger.java:[lines 32-147] \nIn class util.AsyncBulkLogger \nIn method util.AsyncBulkLogger.logException(Exception) \nAt AsyncBulkLogger.java:[line 89].", "description": "Possible information exposure through an error message .", "internal_id": "INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE/97556826d1a13212af0cd54efecd382c", "severity": "moderate", "owasp_category": "", "category": "INFORMATION EXPOSURE THROUGH AN ERROR MESSAGE", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Possible information exposure through an error message \nAt AsyncBulkLogger.java:[lines 32-147] \nIn class util.AsyncBulkLogger \nIn method util.AsyncBulkLogger.logException(Exception) \nAt AsyncBulkLogger.java:[line 89].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/util/AsyncBulkLogger.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 89, "ruleId": "INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE", "ruleName": "INFORMATION EXPOSURE THROUGH AN ERROR MESSAGE", "contextText": "\t\t\t\te.printStackTrace(psout);\n", "snippetText": "\t\t\t\t\tpsout.print(DateRetriever.getDateString() + \" \");\n\t\t\t\te.printStackTrace(psout);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "The cipher does not provide data integrity \nAt Encryption.java:[lines 14-114] \nIn class util.Encryption \nIn method util.Encryption.init_AES(String) \nAt Encryption.java:[line 55].", "description": "The cipher does not provide data integrity .", "internal_id": "CIPHER_INTEGRITY/2935cb9e5dfa14ac2639065aee24faf5", "severity": "critical", "owasp_category": "", "category": "Cipher Integrity", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The cipher does not provide data integrity \nAt Encryption.java:[lines 14-114] \nIn class util.Encryption \nIn method util.Encryption.init_AES(String) \nAt Encryption.java:[line 55].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/util/Encryption.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 55, "ruleId": "CIPHER_INTEGRITY", "ruleName": "Cipher Integrity", "contextText": "            ecipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\n", "snippetText": "            key = new SecretKeySpec(buffer.array(), \"AES\");\n            ecipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "The cipher does not provide data integrity \nAt Encryption.java:[lines 14-114] \nIn class util.Encryption \nIn method util.Encryption.init_AES(String) \nAt Encryption.java:[line 57].", "description": "The cipher does not provide data integrity .", "internal_id": "CIPHER_INTEGRITY/4480333988e1ae8de19c3aa51f394fe5", "severity": "critical", "owasp_category": "", "category": "Cipher Integrity", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The cipher does not provide data integrity \nAt Encryption.java:[lines 14-114] \nIn class util.Encryption \nIn method util.Encryption.init_AES(String) \nAt Encryption.java:[line 57].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/util/Encryption.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 57, "ruleId": "CIPHER_INTEGRITY", "ruleName": "Cipher Integrity", "contextText": "            dcipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\n", "snippetText": "            ecipher.init(Cipher.ENCRYPT_MODE, key, paramSpec);\n            dcipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "The cipher is susceptible to padding oracle attacks \nAt Encryption.java:[lines 14-114] \nIn class util.Encryption \nIn method util.Encryption.init_AES(String) \nAt Encryption.java:[line 55].", "description": "The cipher is susceptible to padding oracle attacks .", "internal_id": "PADDING_ORACLE/92af9bc42bdef351b9d31356af31bf07", "severity": "critical", "owasp_category": "", "category": "Padding Oracle", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The cipher is susceptible to padding oracle attacks \nAt Encryption.java:[lines 14-114] \nIn class util.Encryption \nIn method util.Encryption.init_AES(String) \nAt Encryption.java:[line 55].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/util/Encryption.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 55, "ruleId": "PADDING_ORACLE", "ruleName": "Padding Oracle", "contextText": "            ecipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\n", "snippetText": "            key = new SecretKeySpec(buffer.array(), \"AES\");\n            ecipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "The cipher is susceptible to padding oracle attacks \nAt Encryption.java:[lines 14-114] \nIn class util.Encryption \nIn method util.Encryption.init_AES(String) \nAt Encryption.java:[line 57].", "description": "The cipher is susceptible to padding oracle attacks .", "internal_id": "PADDING_ORACLE/aa15cdbc01eb0f13eee298dea5e2447e", "severity": "critical", "owasp_category": "", "category": "Padding Oracle", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The cipher is susceptible to padding oracle attacks \nAt Encryption.java:[lines 14-114] \nIn class util.Encryption \nIn method util.Encryption.init_AES(String) \nAt Encryption.java:[line 57].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/util/Encryption.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 57, "ruleId": "PADDING_ORACLE", "ruleName": "Padding Oracle", "contextText": "            dcipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\n", "snippetText": "            ecipher.init(Cipher.ENCRYPT_MODE, key, paramSpec);\n            dcipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "The initialization vector (IV) is not properly generated \nAt Encryption.java:[lines 14-114] \nIn class util.Encryption \nIn method util.Encryption.init_AES(String) \nAt Encryption.java:[line 53].", "description": "The initialization vector (IV) is not properly generated .", "internal_id": "STATIC_IV/79edf8f0c8a7eb79b0a9855a8822994f", "severity": "moderate", "owasp_category": "", "category": "Static Iv", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The initialization vector (IV) is not properly generated \nAt Encryption.java:[lines 14-114] \nIn class util.Encryption \nIn method util.Encryption.init_AES(String) \nAt Encryption.java:[line 53].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/util/Encryption.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 53, "ruleId": "STATIC_IV", "ruleName": "Static Iv", "contextText": "            paramSpec = new IvParameterSpec(iv);\n", "snippetText": "            buffer.putLong(Utils.getLongStringHash(invertStr(keyphrase)));\n            paramSpec = new IvParameterSpec(iv);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "Possible information exposure through an error message \nAt FileLogger.java:[lines 40-211] \nIn class util.FileLogger \nIn method util.FileLogger.logException(Exception) \nAt FileLogger.java:[line 130].", "description": "Possible information exposure through an error message .", "internal_id": "INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE/094ce7ace1d1b4e167fc1a6bbfa6cdd3", "severity": "moderate", "owasp_category": "", "category": "INFORMATION EXPOSURE THROUGH AN ERROR MESSAGE", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Possible information exposure through an error message \nAt FileLogger.java:[lines 40-211] \nIn class util.FileLogger \nIn method util.FileLogger.logException(Exception) \nAt FileLogger.java:[line 130].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/util/FileLogger.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 130, "ruleId": "INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE", "ruleName": "INFORMATION EXPOSURE THROUGH AN ERROR MESSAGE", "contextText": "\t\t\t\te.printStackTrace(psout);\n", "snippetText": "\t\t\t\t\tpsout.print(DateRetriever.getDateString() + \" \");\n\t\t\t\te.printStackTrace(psout);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileLogger.java:[lines 40-211] \nIn class util.FileLogger \nIn method util.FileLogger.getOutputStream() \nAt FileLogger.java:[line 161] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source util/FileLogger.logFolderPath \nUnknown source util/FileLogger.name \nAt FileLogger.java:[line 161].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/204cb472b53dd1b342034762bd20f9f4", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileLogger.java:[lines 40-211] \nIn class util.FileLogger \nIn method util.FileLogger.getOutputStream() \nAt FileLogger.java:[line 161] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source util/FileLogger.logFolderPath \nUnknown source util/FileLogger.name \nAt FileLogger.java:[line 161].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/util/FileLogger.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 161, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\t\tFile f = new File(logFolderPath + \"/\" + name + \"_\" + curSlot + \".log\");\n", "snippetText": "\t\t\tcurSlot = (curSlot + 1) % slotCount;\n\t\t\tFile f = new File(logFolderPath + \"/\" + name + \"_\" + curSlot + \".log\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileLogger.java:[lines 40-211] \nIn class util.FileLogger \nIn method util.FileLogger.logOpen() \nAt FileLogger.java:[line 63] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source util/FileLogger.logFolderPath \nAt FileLogger.java:[line 63].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/87c3d66bacd722494bc7e3cac2f1b289", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileLogger.java:[lines 40-211] \nIn class util.FileLogger \nIn method util.FileLogger.logOpen() \nAt FileLogger.java:[line 63] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source util/FileLogger.logFolderPath \nAt FileLogger.java:[line 63].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/util/FileLogger.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 63, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\tFile dir = new File(logFolderPath);\n", "snippetText": "\t\t\n\t\tFile dir = new File(logFolderPath);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileLogger.java:[lines 40-211] \nIn class util.FileLogger \nIn method util.FileLogger.logOpen() \nAt FileLogger.java:[line 70] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source util/FileLogger.logFolderPath \nUnknown source util/FileLogger.name \nAt FileLogger.java:[line 70].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/d7fca90b383f79c554e9e1a1e371101a", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileLogger.java:[lines 40-211] \nIn class util.FileLogger \nIn method util.FileLogger.logOpen() \nAt FileLogger.java:[line 70] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source util/FileLogger.logFolderPath \nUnknown source util/FileLogger.name \nAt FileLogger.java:[line 70].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/util/FileLogger.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 70, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\t\tf = new File(logFolderPath + \"/\" + name + \"_\" + i + \".log\");\n", "snippetText": "\t\tfor (int i = 0; i < slotCount; i++) {\n\t\t\tf = new File(logFolderPath + \"/\" + name + \"_\" + i + \".log\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileLogger.java:[lines 40-211] \nIn class util.FileLogger \nIn method util.FileLogger.logOpen() \nAt FileLogger.java:[line 78] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source util/FileLogger.logFolderPath \nUnknown source util/FileLogger.name \nAt FileLogger.java:[line 78].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/09fa75b00917c84b651d55af030b8eb2", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileLogger.java:[lines 40-211] \nIn class util.FileLogger \nIn method util.FileLogger.logOpen() \nAt FileLogger.java:[line 78] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source util/FileLogger.logFolderPath \nUnknown source util/FileLogger.name \nAt FileLogger.java:[line 78].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/util/FileLogger.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 78, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\tfout = new FileOutputStream(new File(logFolderPath + \"/\" + name + \"_\" + curSlot + \".log\"), true);\n", "snippetText": "\n\t\tfout = new FileOutputStream(new File(logFolderPath + \"/\" + name + \"_\" + curSlot + \".log\"), true);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HugePackedSet.java:[lines 40-232] \nIn class util.HugePackedSet \nIn method util.HugePackedSet.checkIndexVersion(String) \nAt HugePackedSet.java:[line 204] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source util/HugePackedSet.checkIndexVersion(Ljava/lang/String;)Z parameter 0 \nMethod usage not detected \nAt BlockedHosts.java:[line 154] \nAt BlockedHosts.java:[line 159] \nAt BlockedHosts.java:[line 169] \nAt HugePackedSet.java:[line 204] \nAt HugePackedSet.java:[line 217].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/ed51d479b6531474a7adda9fd099dae9", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HugePackedSet.java:[lines 40-232] \nIn class util.HugePackedSet \nIn method util.HugePackedSet.checkIndexVersion(String) \nAt HugePackedSet.java:[line 204] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source util/HugePackedSet.checkIndexVersion(Ljava/lang/String;)Z parameter 0 \nMethod usage not detected \nAt BlockedHosts.java:[line 154] \nAt BlockedHosts.java:[line 159] \nAt BlockedHosts.java:[line 169] \nAt HugePackedSet.java:[line 204] \nAt HugePackedSet.java:[line 217].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/util/HugePackedSet.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 204, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\tFile idxVersionFile = new File(path+\"/IDX_VERSION\");\n", "snippetText": "\tpublic static boolean checkIndexVersion(String path)throws IOException {\n\t\tFile idxVersionFile = new File(path+\"/IDX_VERSION\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "This API (java/io/FileInputStream.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HugePackedSet.java:[lines 40-232] \nIn class util.HugePackedSet \nIn method util.HugePackedSet.checkIndexVersion(String) \nAt HugePackedSet.java:[line 206] \nSink method java/io/FileInputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source util/HugePackedSet.checkIndexVersion(Ljava/lang/String;)Z parameter 0 \nMethod usage not detected \nAt BlockedHosts.java:[line 154] \nAt BlockedHosts.java:[line 159] \nAt BlockedHosts.java:[line 169] \nAt HugePackedSet.java:[line 204] \nAt HugePackedSet.java:[line 206] \nAt HugePackedSet.java:[line 217].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/c510d8ca2693e325bef03aa3951a48d4", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/FileInputStream.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HugePackedSet.java:[lines 40-232] \nIn class util.HugePackedSet \nIn method util.HugePackedSet.checkIndexVersion(String) \nAt HugePackedSet.java:[line 206] \nSink method java/io/FileInputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source util/HugePackedSet.checkIndexVersion(Ljava/lang/String;)Z parameter 0 \nMethod usage not detected \nAt BlockedHosts.java:[line 154] \nAt BlockedHosts.java:[line 159] \nAt BlockedHosts.java:[line 169] \nAt HugePackedSet.java:[line 204] \nAt HugePackedSet.java:[line 206] \nAt HugePackedSet.java:[line 217].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/util/HugePackedSet.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 206, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\t\tFileInputStream in = new FileInputStream(path+\"/IDX_VERSION\");\n", "snippetText": "\t\tif (idxVersionFile.exists()) {\n\t\t\tFileInputStream in = new FileInputStream(path+\"/IDX_VERSION\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HugePackedSet.java:[lines 40-232] \nIn class util.HugePackedSet \nIn method util.HugePackedSet.load(String, boolean, ObjectPackagingManager) \nAt HugePackedSet.java:[line 223] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source util/HugePackedSet.load(Ljava/lang/String;ZLutil/ObjectPackagingManager;)Lutil/HugePackedSet; parameter 2 \nMethod usage not detected \nAt BlockedHosts.java:[line 159] \nAt BlockedHosts.java:[line 169] \nAt HugePackedSet.java:[line 223].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/3ffac2f1f74b839f3a477d32cf9ff57f", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HugePackedSet.java:[lines 40-232] \nIn class util.HugePackedSet \nIn method util.HugePackedSet.load(String, boolean, ObjectPackagingManager) \nAt HugePackedSet.java:[line 223] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source util/HugePackedSet.load(Ljava/lang/String;ZLutil/ObjectPackagingManager;)Lutil/HugePackedSet; parameter 2 \nMethod usage not detected \nAt BlockedHosts.java:[line 159] \nAt BlockedHosts.java:[line 169] \nAt HugePackedSet.java:[line 223].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/util/HugePackedSet.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 223, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\twhile (new File(path+\"/idx\"+slotCount).exists())\n", "snippetText": "\t\tint count = 0;\n\t\twhile (new File(path+\"/idx\"+slotCount).exists())\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HugePackedSet.java:[lines 40-232] \nIn class util.HugePackedSet \nIn method util.HugePackedSet.persist(String) \nAt HugePackedSet.java:[line 162] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source util/HugePackedSet.persist(Ljava/lang/String;)V parameter 0 \nMethod usage not detected \nAt BlockedHosts.java:[line 175] \nAt HugePackedSet.java:[line 162].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/de6227a252150d6d1169d43e2446e234", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HugePackedSet.java:[lines 40-232] \nIn class util.HugePackedSet \nIn method util.HugePackedSet.persist(String) \nAt HugePackedSet.java:[line 162] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source util/HugePackedSet.persist(Ljava/lang/String;)V parameter 0 \nMethod usage not detected \nAt BlockedHosts.java:[line 175] \nAt HugePackedSet.java:[line 162].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/util/HugePackedSet.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 162, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\tFile dir = new File(path+\".tmp\");\n", "snippetText": "\t\t//delete existing .tmp and index folders\n\t\tFile dir = new File(path+\".tmp\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HugePackedSet.java:[lines 40-232] \nIn class util.HugePackedSet \nIn method util.HugePackedSet.persist(String) \nAt HugePackedSet.java:[line 170] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source util/HugePackedSet.persist(Ljava/lang/String;)V parameter 0 \nMethod usage not detected \nAt BlockedHosts.java:[line 175] \nAt HugePackedSet.java:[line 162].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/ca6a9c9218895bd73a6bfe70654cb5b0", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HugePackedSet.java:[lines 40-232] \nIn class util.HugePackedSet \nIn method util.HugePackedSet.persist(String) \nAt HugePackedSet.java:[line 170] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source util/HugePackedSet.persist(Ljava/lang/String;)V parameter 0 \nMethod usage not detected \nAt BlockedHosts.java:[line 175] \nAt HugePackedSet.java:[line 162].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/util/HugePackedSet.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 170, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\t\tdir = new File(path);\n", "snippetText": "\t\t\t} \t\t\t\n\t\t\tdir = new File(path);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HugePackedSet.java:[lines 40-232] \nIn class util.HugePackedSet \nIn method util.HugePackedSet.persist(String) \nAt HugePackedSet.java:[line 173] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source util/HugePackedSet.persist(Ljava/lang/String;)V parameter 0 \nMethod usage not detected \nAt BlockedHosts.java:[line 175] \nAt HugePackedSet.java:[line 162] \nAt HugePackedSet.java:[line 173].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/729ac565bc82db9096ee8701597906e2", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HugePackedSet.java:[lines 40-232] \nIn class util.HugePackedSet \nIn method util.HugePackedSet.persist(String) \nAt HugePackedSet.java:[line 173] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source util/HugePackedSet.persist(Ljava/lang/String;)V parameter 0 \nMethod usage not detected \nAt BlockedHosts.java:[line 175] \nAt HugePackedSet.java:[line 162] \nAt HugePackedSet.java:[line 173].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/util/HugePackedSet.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 173, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\tdir = new File(path+\".tmp\");\n", "snippetText": "\t\t\n\t\tdir = new File(path+\".tmp\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HugePackedSet.java:[lines 40-232] \nIn class util.HugePackedSet \nIn method util.HugePackedSet.persist(String) \nAt HugePackedSet.java:[line 186] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source util/HugePackedSet.persist(Ljava/lang/String;)V parameter 0 \nMethod usage not detected \nAt BlockedHosts.java:[line 175] \nAt HugePackedSet.java:[line 162] \nAt HugePackedSet.java:[line 173].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/d7ba6132f4514e7b2f147f838675981a", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HugePackedSet.java:[lines 40-232] \nIn class util.HugePackedSet \nIn method util.HugePackedSet.persist(String) \nAt HugePackedSet.java:[line 186] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source util/HugePackedSet.persist(Ljava/lang/String;)V parameter 0 \nMethod usage not detected \nAt BlockedHosts.java:[line 175] \nAt HugePackedSet.java:[line 162] \nAt HugePackedSet.java:[line 173].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/util/HugePackedSet.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 186, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\tFile renameDir = new File(path);\t\t\n", "snippetText": "\t\t\n\t\tFile renameDir = new File(path);\t\t\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HugePackedSet.java:[lines 40-232] \nIn class util.HugePackedSet \nIn method util.HugePackedSet.updatePersist() \nAt HugePackedSet.java:[line 196] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source util/HugePackedSet.loadedFromPath \nAt HugePackedSet.java:[line 196].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/cbc1e169f0f6c294b5c2461cd5839e7c", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt HugePackedSet.java:[lines 40-232] \nIn class util.HugePackedSet \nIn method util.HugePackedSet.updatePersist() \nAt HugePackedSet.java:[line 196] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source util/HugePackedSet.loadedFromPath \nAt HugePackedSet.java:[line 196].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/util/HugePackedSet.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 196, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\tFile dir = new File(loadedFromPath);\n", "snippetText": "\n\t\tFile dir = new File(loadedFromPath);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "This API (java/io/FileOutputStream.<init>(Ljava/lang/String;)V) writes to a file whose location might be specified by user input \nAt HugePackedSet.java:[lines 40-232] \nIn class util.HugePackedSet \nIn method util.HugePackedSet.persist(String) \nAt HugePackedSet.java:[line 177] \nSink method java/io/FileOutputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nAt HugePackedSet.java:[line 177].", "description": "This API (java/io/FileOutputStream.<init>(Ljava/lang/String;)V) writes to a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_OUT/bb2af4cdf79e6242f6f2b6c9fcbe30de", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL OUT", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/FileOutputStream.<init>(Ljava/lang/String;)V) writes to a file whose location might be specified by user input \nAt HugePackedSet.java:[lines 40-232] \nIn class util.HugePackedSet \nIn method util.HugePackedSet.persist(String) \nAt HugePackedSet.java:[line 177] \nSink method java/io/FileOutputStream.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getAbsolutePath()Ljava/lang/String; \nAt HugePackedSet.java:[line 177].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/util/HugePackedSet.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 177, "ruleId": "PATH_TRAVERSAL_OUT", "ruleName": "PATH TRAVERSAL OUT", "contextText": "\t\tFileOutputStream out = new FileOutputStream(dir.getAbsolutePath()+\"/IDX_VERSION\");\n", "snippetText": "\t\t//write index version info\n\t\tFileOutputStream out = new FileOutputStream(dir.getAbsolutePath()+\"/IDX_VERSION\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt PackedSortedList.java:[lines 43-360] \nIn class util.PackedSortedList \nIn method util.PackedSortedList.load(String, boolean, ObjectPackagingManager) \nAt PackedSortedList.java:[line 349] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source util/PackedSortedList.load(Ljava/lang/String;ZLutil/ObjectPackagingManager;)Lutil/PackedSortedList; parameter 2 \nMethod usage not detected \nAt BlockedHosts.java:[line 159] \nAt BlockedHosts.java:[line 169] \nAt HugePackedSet.java:[line 223] \nAt HugePackedSet.java:[line 228].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/2d80c1e0c2400a26bd0d44147ec24971", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt PackedSortedList.java:[lines 43-360] \nIn class util.PackedSortedList \nIn method util.PackedSortedList.load(String, boolean, ObjectPackagingManager) \nAt PackedSortedList.java:[line 349] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source util/PackedSortedList.load(Ljava/lang/String;ZLutil/ObjectPackagingManager;)Lutil/PackedSortedList; parameter 2 \nMethod usage not detected \nAt BlockedHosts.java:[line 159] \nAt BlockedHosts.java:[line 169] \nAt HugePackedSet.java:[line 223] \nAt HugePackedSet.java:[line 228].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/util/PackedSortedList.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 349, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\tFile f = new File(path);\n", "snippetText": "\tpublic static PackedSortedList load(String path, boolean inMemory, ObjectPackagingManager objMgr) throws IOException  {\n\t\tFile f = new File(path);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt PackedSortedList.java:[lines 43-360] \nIn class util.PackedSortedList \nIn method util.PackedSortedList.persist(String) \nAt PackedSortedList.java:[line 310] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source util/PackedSortedList.persist(Ljava/lang/String;)V parameter 0 \nAt HugePackedSet.java:[line 184] \nAt HugePackedSet.java:[line 199].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/ae34fe0d952c7c94400749d60b55ee55", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt PackedSortedList.java:[lines 43-360] \nIn class util.PackedSortedList \nIn method util.PackedSortedList.persist(String) \nAt PackedSortedList.java:[line 310] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source util/PackedSortedList.persist(Ljava/lang/String;)V parameter 0 \nAt HugePackedSet.java:[line 184] \nAt HugePackedSet.java:[line 199].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/util/PackedSortedList.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 310, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\t\tpersistedPackFile = new File(path);\n", "snippetText": "\n\t\t\tpersistedPackFile = new File(path);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "Object deserialization is used in util.Utils.deserializeObject(byte[]) \nAt Utils.java:[lines 42-313] \nIn class util.Utils \nIn method util.Utils.deserializeObject(byte[]) \nAt Utils.java:[line 244].", "description": "Object deserialization is used in dnsfilter.remote.RemoteAccessClient.getConfig() .", "internal_id": "OBJECT_DESERIALIZATION/7883fdded89aba80ea4b229c21d1f6af", "severity": "critical", "owasp_category": "", "category": "Object Deserialization", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Object deserialization is used in util.Utils.deserializeObject(byte[]) \nAt Utils.java:[lines 42-313] \nIn class util.Utils \nIn method util.Utils.deserializeObject(byte[]) \nAt Utils.java:[line 244].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/util/Utils.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 244, "ruleId": "OBJECT_DESERIALIZATION", "ruleName": "Object Deserialization", "contextText": "\t\t\treturn objIn.readObject();\n", "snippetText": "\t\ttry {\n\t\t\treturn objIn.readObject();\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt Utils.java:[lines 42-313] \nIn class util.Utils \nIn method util.Utils.deleteFolder(String) \nAt Utils.java:[line 278] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source util/Utils.deleteFolder(Ljava/lang/String;)V parameter 0 \nAt Utils.java:[line 284].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/dead6f76ae683bb8e002db3e1fc7f89b", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt Utils.java:[lines 42-313] \nIn class util.Utils \nIn method util.Utils.deleteFolder(String) \nAt Utils.java:[line 278] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source util/Utils.deleteFolder(Ljava/lang/String;)V parameter 0 \nAt Utils.java:[line 284].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/util/Utils.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 278, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\tFile dir = new File(path);\n", "snippetText": "\tpublic static void deleteFolder(String path) {\n\t\tFile dir = new File(path);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt Connection.java:[lines 58-408] \nIn class util.conpool.Connection \nIn method util.conpool.Connection.getCustomHosts() \nAt Connection.java:[line 163] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source util/conpool/Connection.setCustomHostsFile(Ljava/lang/String;)V parameter 0 \nUnknown source util/ExecutionEnvironmentInterface.getWorkDir()Ljava/lang/String; \nUnknown source util/conpool/Connection.CUSTOM_HOSTS_FILE_NAME \nMethod usage not detected \nAt Connection.java:[line 160] \nAt Connection.java:[line 163].", "description": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input .", "internal_id": "PATH_TRAVERSAL_IN/19960d68f543864da8f624e7255dfe40", "severity": "moderate", "owasp_category": "a5-broken-access-control", "category": "PATH TRAVERSAL IN", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt Connection.java:[lines 58-408] \nIn class util.conpool.Connection \nIn method util.conpool.Connection.getCustomHosts() \nAt Connection.java:[line 163] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source util/conpool/Connection.setCustomHostsFile(Ljava/lang/String;)V parameter 0 \nUnknown source util/ExecutionEnvironmentInterface.getWorkDir()Ljava/lang/String; \nUnknown source util/conpool/Connection.CUSTOM_HOSTS_FILE_NAME \nMethod usage not detected \nAt Connection.java:[line 160] \nAt Connection.java:[line 163].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/util/conpool/Connection.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 163, "ruleId": "PATH_TRAVERSAL_IN", "ruleName": "PATH TRAVERSAL IN", "contextText": "\t\tFile hostsFile = new File(ExecutionEnvironment.getEnvironment().getWorkDir()+CUSTOM_HOSTS_FILE_NAME);\n", "snippetText": "\n\t\tFile hostsFile = new File(ExecutionEnvironment.getEnvironment().getWorkDir()+CUSTOM_HOSTS_FILE_NAME);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "Unencrypted socket to util.conpool.Connection (instead of SSLSocket) \nAt Connection.java:[lines 58-408] \nIn class util.conpool.Connection \nIn method util.conpool.Connection.initConnection(InetSocketAddress, int, boolean, SSLSocketFactory, Proxy) \nAt Connection.java:[line 204] \nValue remote host.", "description": "Unencrypted socket to dnsfilter.remote.RemoteAccessClient (instead of SSLSocket) .", "internal_id": "UNENCRYPTED_SOCKET/14fefb3eb4c62e6ecafae6867ea9d70c", "severity": "moderate", "owasp_category": "", "category": "Unencrypted Socket", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Unencrypted socket to util.conpool.Connection (instead of SSLSocket) \nAt Connection.java:[lines 58-408] \nIn class util.conpool.Connection \nIn method util.conpool.Connection.initConnection(InetSocketAddress, int, boolean, SSLSocketFactory, Proxy) \nAt Connection.java:[line 204] \nValue remote host.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/util/conpool/Connection.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 204, "ruleId": "UNENCRYPTED_SOCKET", "ruleName": "Unencrypted Socket", "contextText": "\t\t\tsocket = new Socket();\t\n", "snippetText": "\t\tif (proxy == Proxy.NO_PROXY) {\n\t\t\tsocket = new Socket();\t\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo_personaldns/src_code", "type": "extscan", "title": "Unencrypted socket to util.conpool.HttpProxy (instead of SSLSocket) \nAt HttpProxy.java:[lines 39-85] \nIn class util.conpool.HttpProxy \nIn method util.conpool.HttpProxy.openTunnel(InetSocketAddress, int) \nAt HttpProxy.java:[line 71] \nValue remote host.", "description": "Unencrypted socket to dnsfilter.remote.RemoteAccessClient (instead of SSLSocket) .", "internal_id": "UNENCRYPTED_SOCKET/9966ccaef22889c54da36d30d2cf7ee4", "severity": "moderate", "owasp_category": "", "category": "Unencrypted Socket", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "Unencrypted socket to util.conpool.HttpProxy (instead of SSLSocket) \nAt HttpProxy.java:[lines 39-85] \nIn class util.conpool.HttpProxy \nIn method util.conpool.HttpProxy.openTunnel(InetSocketAddress, int) \nAt HttpProxy.java:[line 71] \nValue remote host.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo_personaldns/src_code/personaldnsfilter/app/src/main/java/util/conpool/HttpProxy.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 71, "ruleId": "UNENCRYPTED_SOCKET", "ruleName": "Unencrypted Socket", "contextText": "\t\tSocket proxyCon = new Socket();\n", "snippetText": "\t\t\n\t\tSocket proxyCon = new Socket();\n"}, "tags": []}]}
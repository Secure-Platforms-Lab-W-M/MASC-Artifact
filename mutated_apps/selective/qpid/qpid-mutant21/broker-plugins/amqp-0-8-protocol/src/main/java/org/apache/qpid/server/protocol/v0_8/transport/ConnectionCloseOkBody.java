/*
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 */

/*
 * This file is auto-generated by Qpid Gentools v.0.1 - do not modify.
 * Supported AMQP version:
 *   0-91
 */

package org.apache.qpid.server.protocol.v0_8.transport;

import org.apache.qpid.server.QpidException;
import org.apache.qpid.server.bytebuffer.QpidByteBuffer;

public class ConnectionCloseOkBody extends AMQMethodBodyImpl implements EncodableAMQDataBlock, AMQMethodBody
{
    private final int _ownMethodId;

    public static final int CLASS_ID =  10;

    public static final ConnectionCloseOkBody CONNECTION_CLOSE_OK_0_8 = new ConnectionCloseOkBody(61);
    public static final ConnectionCloseOkBody CONNECTION_CLOSE_OK_0_9 = new ConnectionCloseOkBody(51);

    // Constructor
    private ConnectionCloseOkBody(int methodId)
    {
        _ownMethodId = methodId;
    }


    @Override
    public int getClazz()
    {
        return CLASS_ID;
    }

    @Override
    public int getMethod()
    {
        return _ownMethodId;
    }


    @Override
    protected int getBodySize()
    {
        return 0;
    }

    @Override
    public void writeMethodPayload(QpidByteBuffer buffer)
    {
    }

    @Override
    public boolean execute(MethodDispatcher dispatcher, int channelId) throws QpidException
	{
        return dispatcher.dispatchConnectionCloseOk(this, channelId);
	}

    @Override
    public String toString()
    {
        return "[ConnectionCloseOkBody]";
    }

}

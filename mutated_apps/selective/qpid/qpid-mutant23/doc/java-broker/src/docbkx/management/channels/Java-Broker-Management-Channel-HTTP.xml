<?xml version="1.0"?>
<!--

 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 "License"); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.

-->

<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="Java-Broker-Management-Channel-HTTP">
    <title>HTTP Management</title>

    <section xml:id="Java-Broker-Management-Channel-HTTP-Introduction">
        <title>Introduction</title>
        <para>The HTTP Management plugin provides a HTTP based API for monitoring and control of the
            Broker. The plugin actually provides two interfaces:</para>

        <para><itemizedlist>
                <listitem>
                    <para><link linkend="Java-Broker-Management-Channel-Web-Console">Web Management
                            Console</link> - rich web based interface for the management of the
                        Broker.</para>
                </listitem>
                <listitem>
                    <para><link linkend="Java-Broker-Management-Channel-REST-API">REST API</link> -
                        REST API providing complete programmatic management of the Broker.</para>
                </listitem>
            </itemizedlist></para>

        <para>The Web Management Console itself uses the REST API, so every function you can perform
            through the Web Management Console can be also be scripted and integrated into other
            systems. This provides a simple integration point allowing the Broker to monitored and
            controlled from systems such as Naoios or BMC Control-M.</para>
    </section>

    <section xml:id="Java-Broker-Management-Channel-HTTP-DefaultConfiguration">
        <title>Default Configuration</title>
        <para>By default, the Broker is shipped with HTTP enabled running port 8080. The HTTP plugin
            is configured to require SASL authentication. The port is not SSL protected.</para>
        <!-- TODO describe what to do if the port conflicts -->
        <para>The settings can be changed by configuring the HTTP plugin and/or the port configured
            to serve HTTP.</para>
    </section>

</section>

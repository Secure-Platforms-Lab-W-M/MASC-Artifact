{
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Class File Analyzer",
          "rules": [
            {
              "id": "ANDROID_EXTERNAL_FILE_ACCESS",
              "help": {
                "text": "Files could be saved to external storage \nAt ContextCompat.java:[lines 47-545] \nIn class android.support.v4.content.ContextCompat \nIn method android.support.v4.content.ContextCompat.getExternalCacheDirs(Context) \nAt ContextCompat.java:[line 322].",
                "markdown": "Files could be saved to external storage \nAt ContextCompat.java:[lines 47-545] \nIn class android.support.v4.content.ContextCompat \nIn method android.support.v4.content.ContextCompat.getExternalCacheDirs(Context) \nAt ContextCompat.java:[line 322]."
              },
              "name": "ANDROID EXTERNAL FILE ACCESS",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Files could be saved to external storage ."
              },
              "helpUri": "https://slscan.io?q=ANDROID_EXTERNAL_FILE_ACCESS",
              "shortDescription": {
                "text": "Files could be saved to external storage \nAt ContextCompat.java:[lines 47-545] \nIn class android.support.v4.content.ContextCompat \nIn method android.support.v4.content.ContextCompat.getExternalCacheDirs(Context) \nAt ContextCompat.java:[line 322]."
              }
            },
            {
              "id": "PATH_TRAVERSAL_IN",
              "help": {
                "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ContextCompat.java:[lines 47-545] \nIn class android.support.v4.content.ContextCompat \nIn method android.support.v4.content.ContextCompat.buildPath(File, String[]) \nAt ContextCompat.java:[line 332] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/support/v4/content/ContextCompat.buildPath(Ljava/io/File;[Ljava/lang/String;)Ljava/io/File; parameter 0 \nMethod usage not detected.",
                "markdown": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ContextCompat.java:[lines 47-545] \nIn class android.support.v4.content.ContextCompat \nIn method android.support.v4.content.ContextCompat.buildPath(File, String[]) \nAt ContextCompat.java:[line 332] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/support/v4/content/ContextCompat.buildPath(Ljava/io/File;[Ljava/lang/String;)Ljava/io/File; parameter 0 \nMethod usage not detected."
              },
              "name": "PATH TRAVERSAL IN",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input ."
              },
              "helpUri": "https://slscan.io?q=PATH_TRAVERSAL_IN",
              "shortDescription": {
                "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ContextCompat.java:[lines 47-545] \nIn class android.support.v4.content.ContextCompat \nIn method android.support.v4.content.ContextCompat.buildPath(File, String[]) \nAt ContextCompat.java:[line 332] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/support/v4/content/ContextCompat.buildPath(Ljava/io/File;[Ljava/lang/String;)Ljava/io/File; parameter 0 \nMethod usage not detected."
              }
            },
            {
              "id": "ANDROID_BROADCAST",
              "help": {
                "text": "Broadcast intents could be received by a malicious application \nAt ShortcutManagerCompat.java:[lines 37-135] \nIn class android.support.v4.content.pm.ShortcutManagerCompat \nIn method android.support.v4.content.pm.ShortcutManagerCompat.requestPinShortcut(Context, ShortcutInfoCompat, IntentSender) \nAt ShortcutManagerCompat.java:[line 97].",
                "markdown": "Broadcast intents could be received by a malicious application \nAt ShortcutManagerCompat.java:[lines 37-135] \nIn class android.support.v4.content.pm.ShortcutManagerCompat \nIn method android.support.v4.content.pm.ShortcutManagerCompat.requestPinShortcut(Context, ShortcutInfoCompat, IntentSender) \nAt ShortcutManagerCompat.java:[line 97]."
              },
              "name": "Android Broadcast",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Broadcast intents could be received by a malicious application ."
              },
              "helpUri": "https://slscan.io?q=ANDROID_BROADCAST",
              "shortDescription": {
                "text": "Broadcast intents could be received by a malicious application \nAt ShortcutManagerCompat.java:[lines 37-135] \nIn class android.support.v4.content.pm.ShortcutManagerCompat \nIn method android.support.v4.content.pm.ShortcutManagerCompat.requestPinShortcut(Context, ShortcutInfoCompat, IntentSender) \nAt ShortcutManagerCompat.java:[line 97]."
              }
            },
            {
              "id": "UNENCRYPTED_SOCKET",
              "help": {
                "text": "Unencrypted socket to android.support.v4.net.DatagramSocketWrapper (instead of SSLSocket) \nAt DatagramSocketWrapper.java:[lines 32-33] \nIn class android.support.v4.net.DatagramSocketWrapper \nIn method new android.support.v4.net.DatagramSocketWrapper(DatagramSocket, FileDescriptor) \nAt DatagramSocketWrapper.java:[line 32] \nValue remote host.",
                "markdown": "Unencrypted socket to android.support.v4.net.DatagramSocketWrapper (instead of SSLSocket) \nAt DatagramSocketWrapper.java:[lines 32-33] \nIn class android.support.v4.net.DatagramSocketWrapper \nIn method new android.support.v4.net.DatagramSocketWrapper(DatagramSocket, FileDescriptor) \nAt DatagramSocketWrapper.java:[line 32] \nValue remote host."
              },
              "name": "Unencrypted Socket",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Unencrypted socket to android.support.v4.net.DatagramSocketWrapper (instead of SSLSocket) ."
              },
              "helpUri": "https://slscan.io?q=UNENCRYPTED_SOCKET",
              "shortDescription": {
                "text": "Unencrypted socket to android.support.v4.net.DatagramSocketWrapper (instead of SSLSocket) \nAt DatagramSocketWrapper.java:[lines 32-33] \nIn class android.support.v4.net.DatagramSocketWrapper \nIn method new android.support.v4.net.DatagramSocketWrapper(DatagramSocket, FileDescriptor) \nAt DatagramSocketWrapper.java:[line 32] \nValue remote host."
              }
            },
            {
              "id": "CIPHER_INTEGRITY",
              "help": {
                "text": "The cipher does not provide data integrity \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method new de.szalkowski.activitylauncher.AllTasksListAdapter(Context, AsyncProvider$Updater) \nAt AllTasksListAdapter.java:[line 25].",
                "markdown": "The cipher does not provide data integrity \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method new de.szalkowski.activitylauncher.AllTasksListAdapter(Context, AsyncProvider$Updater) \nAt AllTasksListAdapter.java:[line 25]."
              },
              "name": "Cipher Integrity",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "The cipher does not provide data integrity ."
              },
              "helpUri": "https://slscan.io?q=CIPHER_INTEGRITY",
              "shortDescription": {
                "text": "The cipher does not provide data integrity \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method new de.szalkowski.activitylauncher.AllTasksListAdapter(Context, AsyncProvider$Updater) \nAt AllTasksListAdapter.java:[line 25]."
              }
            },
            {
              "id": "DES_USAGE",
              "help": {
                "text": "DES should be replaced with AES \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method new de.szalkowski.activitylauncher.AllTasksListAdapter(Context, AsyncProvider$Updater) \nAt AllTasksListAdapter.java:[line 25] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0.",
                "markdown": "DES should be replaced with AES \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method new de.szalkowski.activitylauncher.AllTasksListAdapter(Context, AsyncProvider$Updater) \nAt AllTasksListAdapter.java:[line 25] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
              },
              "name": "Des Usage",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "DES should be replaced with AES ."
              },
              "helpUri": "https://slscan.io?q=DES_USAGE",
              "shortDescription": {
                "text": "DES should be replaced with AES \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method new de.szalkowski.activitylauncher.AllTasksListAdapter(Context, AsyncProvider$Updater) \nAt AllTasksListAdapter.java:[line 25] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
              }
            },
            {
              "id": "ECB_MODE",
              "help": {
                "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method new de.szalkowski.activitylauncher.AllTasksListAdapter(Context, AsyncProvider$Updater) \nAt AllTasksListAdapter.java:[line 25].",
                "markdown": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method new de.szalkowski.activitylauncher.AllTasksListAdapter(Context, AsyncProvider$Updater) \nAt AllTasksListAdapter.java:[line 25]."
              },
              "name": "Ecb Mode",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data ."
              },
              "helpUri": "https://slscan.io?q=ECB_MODE",
              "shortDescription": {
                "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method new de.szalkowski.activitylauncher.AllTasksListAdapter(Context, AsyncProvider$Updater) \nAt AllTasksListAdapter.java:[line 25]."
              }
            }
          ],
          "version": "1.0.0-scan",
          "fullName": "Class File Analyzer"
        }
      },
      "conversion": {
        "tool": {
          "driver": {
            "name": "@ShiftLeft/sast-scan"
          }
        },
        "invocation": {
          "arguments": [
            "-jar",
            "/tmp/.mount_scanmgE9n2/opt/spotbugs/lib/spotbugs.jar",
            "-textui",
            "-include",
            "/tmp/.mount_scanmgE9n2/usr/src/tools_config/spotbugs/include.xml",
            "-exclude",
            "/tmp/.mount_scanmgE9n2/usr/src/tools_config/spotbugs/exclude.xml",
            "-noClassOk",
            "-auxclasspathFromFile",
            "/tmp/tmpo_lkyypv",
            "-sourcepath",
            "/media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher",
            "-quiet",
            "-medium",
            "-xml:withMessages",
            "-effort:max",
            "-nested:false",
            "-output",
            "/media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/reports/class-report.xml",
            "/media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher"
          ],
          "executionSuccessful": true,
          "commandLine": "-jar /tmp/.mount_scanmgE9n2/opt/spotbugs/lib/spotbugs.jar -textui -include /tmp/.mount_scanmgE9n2/usr/src/tools_config/spotbugs/include.xml -exclude /tmp/.mount_scanmgE9n2/usr/src/tools_config/spotbugs/exclude.xml -noClassOk -auxclasspathFromFile /tmp/tmpo_lkyypv -sourcepath /media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher -quiet -medium -xml:withMessages -effort:max -nested:false -output /media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/reports/class-report.xml /media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher",
          "endTimeUtc": "2020-11-23T16:03:21Z",
          "workingDirectory": {
            "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher"
          }
        }
      },
      "invocations": [
        {
          "executionSuccessful": true,
          "endTimeUtc": "2020-11-23T16:03:21Z",
          "workingDirectory": {
            "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher"
          }
        }
      ],
      "properties": {
        "metrics": {
          "total": 545,
          "critical": 348,
          "high": 197,
          "medium": 0,
          "low": 0
        }
      },
      "results": [
        {
          "message": {
            "markdown": "",
            "text": "Files could be saved to external storage \nAt ContextCompat.java:[lines 47-545] \nIn class android.support.v4.content.ContextCompat \nIn method android.support.v4.content.ContextCompat.getExternalCacheDirs(Context) \nAt ContextCompat.java:[line 322]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 322
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/android/support/v4/content/ContextCompat.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ANDROID_EXTERNAL_FILE_ACCESS",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Files could be saved to external storage \nAt ContextCompat.java:[lines 47-545] \nIn class android.support.v4.content.ContextCompat \nIn method android.support.v4.content.ContextCompat.getExternalCacheDirs(Context) \nAt ContextCompat.java:[line 324]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 324
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/android/support/v4/content/ContextCompat.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ANDROID_EXTERNAL_FILE_ACCESS",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Files could be saved to external storage \nAt ContextCompat.java:[lines 47-545] \nIn class android.support.v4.content.ContextCompat \nIn method android.support.v4.content.ContextCompat.getExternalFilesDirs(Context, String) \nAt ContextCompat.java:[line 270]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 270
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/android/support/v4/content/ContextCompat.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ANDROID_EXTERNAL_FILE_ACCESS",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Files could be saved to external storage \nAt ContextCompat.java:[lines 47-545] \nIn class android.support.v4.content.ContextCompat \nIn method android.support.v4.content.ContextCompat.getExternalFilesDirs(Context, String) \nAt ContextCompat.java:[line 272]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 272
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/android/support/v4/content/ContextCompat.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ANDROID_EXTERNAL_FILE_ACCESS",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ContextCompat.java:[lines 47-545] \nIn class android.support.v4.content.ContextCompat \nIn method android.support.v4.content.ContextCompat.buildPath(File, String[]) \nAt ContextCompat.java:[line 332] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/support/v4/content/ContextCompat.buildPath(Ljava/io/File;[Ljava/lang/String;)Ljava/io/File; parameter 0 \nMethod usage not detected."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 332
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/android/support/v4/content/ContextCompat.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "PATH_TRAVERSAL_IN",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "",
            "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ContextCompat.java:[lines 47-545] \nIn class android.support.v4.content.ContextCompat \nIn method android.support.v4.content.ContextCompat.buildPath(File, String[]) \nAt ContextCompat.java:[line 334] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/support/v4/content/ContextCompat.buildPath(Ljava/io/File;[Ljava/lang/String;)Ljava/io/File; parameter 0 \nMethod usage not detected."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 334
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/android/support/v4/content/ContextCompat.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "PATH_TRAVERSAL_IN",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "",
            "text": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ContextCompat.java:[lines 47-545] \nIn class android.support.v4.content.ContextCompat \nIn method android.support.v4.content.ContextCompat.getCodeCacheDir(Context) \nAt ContextCompat.java:[line 478] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 1 \nUnknown source android/content/pm/ApplicationInfo.dataDir \nAt ContextCompat.java:[line 478]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 478
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/android/support/v4/content/ContextCompat.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "PATH_TRAVERSAL_IN",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "",
            "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ContextCompat.java:[lines 47-545] \nIn class android.support.v4.content.ContextCompat \nIn method android.support.v4.content.ContextCompat.getDataDir(Context) \nAt ContextCompat.java:[line 169] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/content/pm/ApplicationInfo.dataDir \nAt ContextCompat.java:[line 168]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 169
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/android/support/v4/content/ContextCompat.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "PATH_TRAVERSAL_IN",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "",
            "text": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ContextCompat.java:[lines 47-545] \nIn class android.support.v4.content.ContextCompat \nIn method android.support.v4.content.ContextCompat.getNoBackupFilesDir(Context) \nAt ContextCompat.java:[line 454] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 1 \nUnknown source android/content/pm/ApplicationInfo.dataDir \nAt ContextCompat.java:[line 454]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 454
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/android/support/v4/content/ContextCompat.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "PATH_TRAVERSAL_IN",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "",
            "text": "Files could be saved to external storage \nAt FileProvider.java:[lines 323-804] \nIn class android.support.v4.content.FileProvider \nIn method android.support.v4.content.FileProvider.parsePathStrategy(Context, String) \nAt FileProvider.java:[line 606]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 606
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/android/support/v4/content/FileProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ANDROID_EXTERNAL_FILE_ACCESS",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileProvider.java:[lines 323-804] \nIn class android.support.v4.content.FileProvider \nIn method android.support.v4.content.FileProvider.buildPath(File, String[]) \nAt FileProvider.java:[line 789] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/support/v4/content/FileProvider.buildPath(Ljava/io/File;[Ljava/lang/String;)Ljava/io/File; parameter 0 \nAt FileProvider.java:[line 620]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 789
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/android/support/v4/content/FileProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "PATH_TRAVERSAL_IN",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "",
            "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileProvider.java:[lines 665-753] \nIn class android.support.v4.content.FileProvider$SimplePathStrategy \nIn method android.support.v4.content.FileProvider$SimplePathStrategy.getFileForUri(Uri) \nAt FileProvider.java:[line 742] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/net/Uri.decode(Ljava/lang/String;)Ljava/lang/String;."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 742
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/android/support/v4/content/FileProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "PATH_TRAVERSAL_IN",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "",
            "text": "Broadcast intents could be received by a malicious application \nAt ShortcutManagerCompat.java:[lines 37-135] \nIn class android.support.v4.content.pm.ShortcutManagerCompat \nIn method android.support.v4.content.pm.ShortcutManagerCompat.requestPinShortcut(Context, ShortcutInfoCompat, IntentSender) \nAt ShortcutManagerCompat.java:[line 97]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 97
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/android/support/v4/content/pm/ShortcutManagerCompat.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ANDROID_BROADCAST",
          "ruleIndex": 2
        },
        {
          "message": {
            "markdown": "",
            "text": "Broadcast intents could be received by a malicious application \nAt ShortcutManagerCompat.java:[lines 37-135] \nIn class android.support.v4.content.pm.ShortcutManagerCompat \nIn method android.support.v4.content.pm.ShortcutManagerCompat.requestPinShortcut(Context, ShortcutInfoCompat, IntentSender) \nAt ShortcutManagerCompat.java:[line 102]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 102
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/android/support/v4/content/pm/ShortcutManagerCompat.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ANDROID_BROADCAST",
          "ruleIndex": 2
        },
        {
          "message": {
            "markdown": "",
            "text": "Unencrypted socket to android.support.v4.net.DatagramSocketWrapper (instead of SSLSocket) \nAt DatagramSocketWrapper.java:[lines 32-33] \nIn class android.support.v4.net.DatagramSocketWrapper \nIn method new android.support.v4.net.DatagramSocketWrapper(DatagramSocket, FileDescriptor) \nAt DatagramSocketWrapper.java:[line 32] \nValue remote host."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 32
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/android/support/v4/net/DatagramSocketWrapper.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "UNENCRYPTED_SOCKET",
          "ruleIndex": 3
        },
        {
          "message": {
            "markdown": "",
            "text": "Files could be saved to external storage \nAt EnvironmentCompat.java:[lines 56-76] \nIn class android.support.v4.os.EnvironmentCompat \nIn method android.support.v4.os.EnvironmentCompat.getStorageState(File) \nAt EnvironmentCompat.java:[line 63]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 63
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/android/support/v4/os/EnvironmentCompat.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ANDROID_EXTERNAL_FILE_ACCESS",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt RawDocumentFile.java:[lines 31-177] \nIn class android.support.v4.provider.RawDocumentFile \nIn method android.support.v4.provider.RawDocumentFile.createDirectory(String) \nAt RawDocumentFile.java:[line 54] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/support/v4/provider/RawDocumentFile.createDirectory(Ljava/lang/String;)Landroid/support/v4/provider/DocumentFile; parameter 0 \nMethod usage not detected."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 54
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/android/support/v4/provider/RawDocumentFile.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "PATH_TRAVERSAL_IN",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "",
            "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt RawDocumentFile.java:[lines 31-177] \nIn class android.support.v4.provider.RawDocumentFile \nIn method android.support.v4.provider.RawDocumentFile.createFile(String, String) \nAt RawDocumentFile.java:[line 42] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/webkit/MimeTypeMap.getExtensionFromMimeType(Ljava/lang/String;)Ljava/lang/String; \nUnknown source android/support/v4/provider/RawDocumentFile.createFile(Ljava/lang/String;Ljava/lang/String;)Landroid/support/v4/provider/DocumentFile; parameter 0 \nMethod usage not detected \nAt RawDocumentFile.java:[line 40]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 42
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/android/support/v4/provider/RawDocumentFile.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "PATH_TRAVERSAL_IN",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "",
            "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt RawDocumentFile.java:[lines 31-177] \nIn class android.support.v4.provider.RawDocumentFile \nIn method android.support.v4.provider.RawDocumentFile.renameTo(String) \nAt RawDocumentFile.java:[line 141] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source android/support/v4/provider/RawDocumentFile.renameTo(Ljava/lang/String;)Z parameter 0 \nMethod usage not detected."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 141
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/android/support/v4/provider/RawDocumentFile.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "PATH_TRAVERSAL_IN",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "",
            "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt AtomicFile.java:[lines 51-211] \nIn class android.support.v4.util.AtomicFile \nIn method new android.support.v4.util.AtomicFile(File) \nAt AtomicFile.java:[line 53] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/io/File.getPath()Ljava/lang/String; \nAt AtomicFile.java:[line 53]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 53
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/android/support/v4/util/AtomicFile.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "PATH_TRAVERSAL_IN",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method new de.szalkowski.activitylauncher.AllTasksListAdapter(Context, AsyncProvider$Updater) \nAt AllTasksListAdapter.java:[line 25]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-147\", javax.crypto.Cipher.getInstance(cipherName147).getAlgorithm());\n"
                  },
                  "startLine": 25
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-147\", javax.crypto.Cipher.getInstance(cipherName147).getAlgorithm());\n"
                  },
                  "endLine": 25,
                  "startLine": 24
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method new de.szalkowski.activitylauncher.AllTasksListAdapter(Context, AsyncProvider$Updater) \nAt AllTasksListAdapter.java:[line 39]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-148\", javax.crypto.Cipher.getInstance(cipherName148).getAlgorithm());\n"
                  },
                  "startLine": 39
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-148\", javax.crypto.Cipher.getInstance(cipherName148).getAlgorithm());\n"
                  },
                  "endLine": 39,
                  "startLine": 38
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method new de.szalkowski.activitylauncher.AllTasksListAdapter(Context, AsyncProvider$Updater) \nAt AllTasksListAdapter.java:[line 48]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-149\", javax.crypto.Cipher.getInstance(cipherName149).getAlgorithm());\n"
                  },
                  "startLine": 48
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-149\", javax.crypto.Cipher.getInstance(cipherName149).getAlgorithm());\n"
                  },
                  "endLine": 48,
                  "startLine": 47
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method new de.szalkowski.activitylauncher.AllTasksListAdapter(Context, AsyncProvider$Updater) \nAt AllTasksListAdapter.java:[line 55]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-150\", javax.crypto.Cipher.getInstance(cipherName150).getAlgorithm());\n"
                  },
                  "startLine": 55
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\ttry{\n\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-150\", javax.crypto.Cipher.getInstance(cipherName150).getAlgorithm());\n"
                  },
                  "endLine": 55,
                  "startLine": 54
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method new de.szalkowski.activitylauncher.AllTasksListAdapter(Context, AsyncProvider$Updater) \nAt AllTasksListAdapter.java:[line 63]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-151\", javax.crypto.Cipher.getInstance(cipherName151).getAlgorithm());\n"
                  },
                  "startLine": 63
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-151\", javax.crypto.Cipher.getInstance(cipherName151).getAlgorithm());\n"
                  },
                  "endLine": 63,
                  "startLine": 62
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method de.szalkowski.activitylauncher.AllTasksListAdapter.getChild(int, int) \nAt AllTasksListAdapter.java:[line 75]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-152\", javax.crypto.Cipher.getInstance(cipherName152).getAlgorithm());\n"
                  },
                  "startLine": 75
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-152\", javax.crypto.Cipher.getInstance(cipherName152).getAlgorithm());\n"
                  },
                  "endLine": 75,
                  "startLine": 74
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method de.szalkowski.activitylauncher.AllTasksListAdapter.getChildId(int, int) \nAt AllTasksListAdapter.java:[line 85]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-153\", javax.crypto.Cipher.getInstance(cipherName153).getAlgorithm());\n"
                  },
                  "startLine": 85
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-153\", javax.crypto.Cipher.getInstance(cipherName153).getAlgorithm());\n"
                  },
                  "endLine": 85,
                  "startLine": 84
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method de.szalkowski.activitylauncher.AllTasksListAdapter.getChildView(int, int, boolean, View, ViewGroup) \nAt AllTasksListAdapter.java:[line 95]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-154\", javax.crypto.Cipher.getInstance(cipherName154).getAlgorithm());\n"
                  },
                  "startLine": 95
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-154\", javax.crypto.Cipher.getInstance(cipherName154).getAlgorithm());\n"
                  },
                  "endLine": 95,
                  "startLine": 94
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method de.szalkowski.activitylauncher.AllTasksListAdapter.getChildrenCount(int) \nAt AllTasksListAdapter.java:[line 118]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-155\", javax.crypto.Cipher.getInstance(cipherName155).getAlgorithm());\n"
                  },
                  "startLine": 118
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-155\", javax.crypto.Cipher.getInstance(cipherName155).getAlgorithm());\n"
                  },
                  "endLine": 118,
                  "startLine": 117
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method de.szalkowski.activitylauncher.AllTasksListAdapter.getGroup(int) \nAt AllTasksListAdapter.java:[line 128]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-156\", javax.crypto.Cipher.getInstance(cipherName156).getAlgorithm());\n"
                  },
                  "startLine": 128
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-156\", javax.crypto.Cipher.getInstance(cipherName156).getAlgorithm());\n"
                  },
                  "endLine": 128,
                  "startLine": 127
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method de.szalkowski.activitylauncher.AllTasksListAdapter.getGroupCount() \nAt AllTasksListAdapter.java:[line 138]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-157\", javax.crypto.Cipher.getInstance(cipherName157).getAlgorithm());\n"
                  },
                  "startLine": 138
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-157\", javax.crypto.Cipher.getInstance(cipherName157).getAlgorithm());\n"
                  },
                  "endLine": 138,
                  "startLine": 137
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method de.szalkowski.activitylauncher.AllTasksListAdapter.getGroupId(int) \nAt AllTasksListAdapter.java:[line 148]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-158\", javax.crypto.Cipher.getInstance(cipherName158).getAlgorithm());\n"
                  },
                  "startLine": 148
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-158\", javax.crypto.Cipher.getInstance(cipherName158).getAlgorithm());\n"
                  },
                  "endLine": 148,
                  "startLine": 147
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method de.szalkowski.activitylauncher.AllTasksListAdapter.getGroupView(int, boolean, View, ViewGroup) \nAt AllTasksListAdapter.java:[line 158]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-159\", javax.crypto.Cipher.getInstance(cipherName159).getAlgorithm());\n"
                  },
                  "startLine": 158
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-159\", javax.crypto.Cipher.getInstance(cipherName159).getAlgorithm());\n"
                  },
                  "endLine": 158,
                  "startLine": 157
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method de.szalkowski.activitylauncher.AllTasksListAdapter.hasStableIds() \nAt AllTasksListAdapter.java:[line 178]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-160\", javax.crypto.Cipher.getInstance(cipherName160).getAlgorithm());\n"
                  },
                  "startLine": 178
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-160\", javax.crypto.Cipher.getInstance(cipherName160).getAlgorithm());\n"
                  },
                  "endLine": 178,
                  "startLine": 177
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method de.szalkowski.activitylauncher.AllTasksListAdapter.isChildSelectable(int, int) \nAt AllTasksListAdapter.java:[line 188]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-161\", javax.crypto.Cipher.getInstance(cipherName161).getAlgorithm());\n"
                  },
                  "startLine": 188
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-161\", javax.crypto.Cipher.getInstance(cipherName161).getAlgorithm());\n"
                  },
                  "endLine": 188,
                  "startLine": 187
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method new de.szalkowski.activitylauncher.AllTasksListAdapter(Context, AsyncProvider$Updater) \nAt AllTasksListAdapter.java:[line 25] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-147\", javax.crypto.Cipher.getInstance(cipherName147).getAlgorithm());\n"
                  },
                  "startLine": 25
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-147\", javax.crypto.Cipher.getInstance(cipherName147).getAlgorithm());\n"
                  },
                  "endLine": 25,
                  "startLine": 24
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method new de.szalkowski.activitylauncher.AllTasksListAdapter(Context, AsyncProvider$Updater) \nAt AllTasksListAdapter.java:[line 39] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-148\", javax.crypto.Cipher.getInstance(cipherName148).getAlgorithm());\n"
                  },
                  "startLine": 39
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-148\", javax.crypto.Cipher.getInstance(cipherName148).getAlgorithm());\n"
                  },
                  "endLine": 39,
                  "startLine": 38
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method new de.szalkowski.activitylauncher.AllTasksListAdapter(Context, AsyncProvider$Updater) \nAt AllTasksListAdapter.java:[line 48] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-149\", javax.crypto.Cipher.getInstance(cipherName149).getAlgorithm());\n"
                  },
                  "startLine": 48
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-149\", javax.crypto.Cipher.getInstance(cipherName149).getAlgorithm());\n"
                  },
                  "endLine": 48,
                  "startLine": 47
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method new de.szalkowski.activitylauncher.AllTasksListAdapter(Context, AsyncProvider$Updater) \nAt AllTasksListAdapter.java:[line 55] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-150\", javax.crypto.Cipher.getInstance(cipherName150).getAlgorithm());\n"
                  },
                  "startLine": 55
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\ttry{\n\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-150\", javax.crypto.Cipher.getInstance(cipherName150).getAlgorithm());\n"
                  },
                  "endLine": 55,
                  "startLine": 54
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method new de.szalkowski.activitylauncher.AllTasksListAdapter(Context, AsyncProvider$Updater) \nAt AllTasksListAdapter.java:[line 63] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-151\", javax.crypto.Cipher.getInstance(cipherName151).getAlgorithm());\n"
                  },
                  "startLine": 63
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-151\", javax.crypto.Cipher.getInstance(cipherName151).getAlgorithm());\n"
                  },
                  "endLine": 63,
                  "startLine": 62
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method de.szalkowski.activitylauncher.AllTasksListAdapter.getChild(int, int) \nAt AllTasksListAdapter.java:[line 75] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-152\", javax.crypto.Cipher.getInstance(cipherName152).getAlgorithm());\n"
                  },
                  "startLine": 75
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-152\", javax.crypto.Cipher.getInstance(cipherName152).getAlgorithm());\n"
                  },
                  "endLine": 75,
                  "startLine": 74
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method de.szalkowski.activitylauncher.AllTasksListAdapter.getChildId(int, int) \nAt AllTasksListAdapter.java:[line 85] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-153\", javax.crypto.Cipher.getInstance(cipherName153).getAlgorithm());\n"
                  },
                  "startLine": 85
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-153\", javax.crypto.Cipher.getInstance(cipherName153).getAlgorithm());\n"
                  },
                  "endLine": 85,
                  "startLine": 84
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method de.szalkowski.activitylauncher.AllTasksListAdapter.getChildView(int, int, boolean, View, ViewGroup) \nAt AllTasksListAdapter.java:[line 95] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-154\", javax.crypto.Cipher.getInstance(cipherName154).getAlgorithm());\n"
                  },
                  "startLine": 95
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-154\", javax.crypto.Cipher.getInstance(cipherName154).getAlgorithm());\n"
                  },
                  "endLine": 95,
                  "startLine": 94
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method de.szalkowski.activitylauncher.AllTasksListAdapter.getChildrenCount(int) \nAt AllTasksListAdapter.java:[line 118] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-155\", javax.crypto.Cipher.getInstance(cipherName155).getAlgorithm());\n"
                  },
                  "startLine": 118
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-155\", javax.crypto.Cipher.getInstance(cipherName155).getAlgorithm());\n"
                  },
                  "endLine": 118,
                  "startLine": 117
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method de.szalkowski.activitylauncher.AllTasksListAdapter.getGroup(int) \nAt AllTasksListAdapter.java:[line 128] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-156\", javax.crypto.Cipher.getInstance(cipherName156).getAlgorithm());\n"
                  },
                  "startLine": 128
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-156\", javax.crypto.Cipher.getInstance(cipherName156).getAlgorithm());\n"
                  },
                  "endLine": 128,
                  "startLine": 127
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method de.szalkowski.activitylauncher.AllTasksListAdapter.getGroupCount() \nAt AllTasksListAdapter.java:[line 138] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-157\", javax.crypto.Cipher.getInstance(cipherName157).getAlgorithm());\n"
                  },
                  "startLine": 138
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-157\", javax.crypto.Cipher.getInstance(cipherName157).getAlgorithm());\n"
                  },
                  "endLine": 138,
                  "startLine": 137
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method de.szalkowski.activitylauncher.AllTasksListAdapter.getGroupId(int) \nAt AllTasksListAdapter.java:[line 148] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-158\", javax.crypto.Cipher.getInstance(cipherName158).getAlgorithm());\n"
                  },
                  "startLine": 148
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-158\", javax.crypto.Cipher.getInstance(cipherName158).getAlgorithm());\n"
                  },
                  "endLine": 148,
                  "startLine": 147
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method de.szalkowski.activitylauncher.AllTasksListAdapter.getGroupView(int, boolean, View, ViewGroup) \nAt AllTasksListAdapter.java:[line 158] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-159\", javax.crypto.Cipher.getInstance(cipherName159).getAlgorithm());\n"
                  },
                  "startLine": 158
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-159\", javax.crypto.Cipher.getInstance(cipherName159).getAlgorithm());\n"
                  },
                  "endLine": 158,
                  "startLine": 157
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method de.szalkowski.activitylauncher.AllTasksListAdapter.hasStableIds() \nAt AllTasksListAdapter.java:[line 178] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-160\", javax.crypto.Cipher.getInstance(cipherName160).getAlgorithm());\n"
                  },
                  "startLine": 178
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-160\", javax.crypto.Cipher.getInstance(cipherName160).getAlgorithm());\n"
                  },
                  "endLine": 178,
                  "startLine": 177
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method de.szalkowski.activitylauncher.AllTasksListAdapter.isChildSelectable(int, int) \nAt AllTasksListAdapter.java:[line 188] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-161\", javax.crypto.Cipher.getInstance(cipherName161).getAlgorithm());\n"
                  },
                  "startLine": 188
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-161\", javax.crypto.Cipher.getInstance(cipherName161).getAlgorithm());\n"
                  },
                  "endLine": 188,
                  "startLine": 187
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method new de.szalkowski.activitylauncher.AllTasksListAdapter(Context, AsyncProvider$Updater) \nAt AllTasksListAdapter.java:[line 25]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-147\", javax.crypto.Cipher.getInstance(cipherName147).getAlgorithm());\n"
                  },
                  "startLine": 25
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-147\", javax.crypto.Cipher.getInstance(cipherName147).getAlgorithm());\n"
                  },
                  "endLine": 25,
                  "startLine": 24
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method new de.szalkowski.activitylauncher.AllTasksListAdapter(Context, AsyncProvider$Updater) \nAt AllTasksListAdapter.java:[line 39]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-148\", javax.crypto.Cipher.getInstance(cipherName148).getAlgorithm());\n"
                  },
                  "startLine": 39
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-148\", javax.crypto.Cipher.getInstance(cipherName148).getAlgorithm());\n"
                  },
                  "endLine": 39,
                  "startLine": 38
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method new de.szalkowski.activitylauncher.AllTasksListAdapter(Context, AsyncProvider$Updater) \nAt AllTasksListAdapter.java:[line 48]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-149\", javax.crypto.Cipher.getInstance(cipherName149).getAlgorithm());\n"
                  },
                  "startLine": 48
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-149\", javax.crypto.Cipher.getInstance(cipherName149).getAlgorithm());\n"
                  },
                  "endLine": 48,
                  "startLine": 47
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method new de.szalkowski.activitylauncher.AllTasksListAdapter(Context, AsyncProvider$Updater) \nAt AllTasksListAdapter.java:[line 55]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-150\", javax.crypto.Cipher.getInstance(cipherName150).getAlgorithm());\n"
                  },
                  "startLine": 55
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\ttry{\n\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-150\", javax.crypto.Cipher.getInstance(cipherName150).getAlgorithm());\n"
                  },
                  "endLine": 55,
                  "startLine": 54
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method new de.szalkowski.activitylauncher.AllTasksListAdapter(Context, AsyncProvider$Updater) \nAt AllTasksListAdapter.java:[line 63]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-151\", javax.crypto.Cipher.getInstance(cipherName151).getAlgorithm());\n"
                  },
                  "startLine": 63
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-151\", javax.crypto.Cipher.getInstance(cipherName151).getAlgorithm());\n"
                  },
                  "endLine": 63,
                  "startLine": 62
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method de.szalkowski.activitylauncher.AllTasksListAdapter.getChild(int, int) \nAt AllTasksListAdapter.java:[line 75]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-152\", javax.crypto.Cipher.getInstance(cipherName152).getAlgorithm());\n"
                  },
                  "startLine": 75
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-152\", javax.crypto.Cipher.getInstance(cipherName152).getAlgorithm());\n"
                  },
                  "endLine": 75,
                  "startLine": 74
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method de.szalkowski.activitylauncher.AllTasksListAdapter.getChildId(int, int) \nAt AllTasksListAdapter.java:[line 85]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-153\", javax.crypto.Cipher.getInstance(cipherName153).getAlgorithm());\n"
                  },
                  "startLine": 85
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-153\", javax.crypto.Cipher.getInstance(cipherName153).getAlgorithm());\n"
                  },
                  "endLine": 85,
                  "startLine": 84
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method de.szalkowski.activitylauncher.AllTasksListAdapter.getChildView(int, int, boolean, View, ViewGroup) \nAt AllTasksListAdapter.java:[line 95]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-154\", javax.crypto.Cipher.getInstance(cipherName154).getAlgorithm());\n"
                  },
                  "startLine": 95
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-154\", javax.crypto.Cipher.getInstance(cipherName154).getAlgorithm());\n"
                  },
                  "endLine": 95,
                  "startLine": 94
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method de.szalkowski.activitylauncher.AllTasksListAdapter.getChildrenCount(int) \nAt AllTasksListAdapter.java:[line 118]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-155\", javax.crypto.Cipher.getInstance(cipherName155).getAlgorithm());\n"
                  },
                  "startLine": 118
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-155\", javax.crypto.Cipher.getInstance(cipherName155).getAlgorithm());\n"
                  },
                  "endLine": 118,
                  "startLine": 117
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method de.szalkowski.activitylauncher.AllTasksListAdapter.getGroup(int) \nAt AllTasksListAdapter.java:[line 128]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-156\", javax.crypto.Cipher.getInstance(cipherName156).getAlgorithm());\n"
                  },
                  "startLine": 128
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-156\", javax.crypto.Cipher.getInstance(cipherName156).getAlgorithm());\n"
                  },
                  "endLine": 128,
                  "startLine": 127
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method de.szalkowski.activitylauncher.AllTasksListAdapter.getGroupCount() \nAt AllTasksListAdapter.java:[line 138]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-157\", javax.crypto.Cipher.getInstance(cipherName157).getAlgorithm());\n"
                  },
                  "startLine": 138
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-157\", javax.crypto.Cipher.getInstance(cipherName157).getAlgorithm());\n"
                  },
                  "endLine": 138,
                  "startLine": 137
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method de.szalkowski.activitylauncher.AllTasksListAdapter.getGroupId(int) \nAt AllTasksListAdapter.java:[line 148]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-158\", javax.crypto.Cipher.getInstance(cipherName158).getAlgorithm());\n"
                  },
                  "startLine": 148
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-158\", javax.crypto.Cipher.getInstance(cipherName158).getAlgorithm());\n"
                  },
                  "endLine": 148,
                  "startLine": 147
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method de.szalkowski.activitylauncher.AllTasksListAdapter.getGroupView(int, boolean, View, ViewGroup) \nAt AllTasksListAdapter.java:[line 158]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-159\", javax.crypto.Cipher.getInstance(cipherName159).getAlgorithm());\n"
                  },
                  "startLine": 158
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-159\", javax.crypto.Cipher.getInstance(cipherName159).getAlgorithm());\n"
                  },
                  "endLine": 158,
                  "startLine": 157
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method de.szalkowski.activitylauncher.AllTasksListAdapter.hasStableIds() \nAt AllTasksListAdapter.java:[line 178]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-160\", javax.crypto.Cipher.getInstance(cipherName160).getAlgorithm());\n"
                  },
                  "startLine": 178
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-160\", javax.crypto.Cipher.getInstance(cipherName160).getAlgorithm());\n"
                  },
                  "endLine": 178,
                  "startLine": 177
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AllTasksListAdapter.java:[lines 19-191] \nIn class de.szalkowski.activitylauncher.AllTasksListAdapter \nIn method de.szalkowski.activitylauncher.AllTasksListAdapter.isChildSelectable(int, int) \nAt AllTasksListAdapter.java:[line 188]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-161\", javax.crypto.Cipher.getInstance(cipherName161).getAlgorithm());\n"
                  },
                  "startLine": 188
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-161\", javax.crypto.Cipher.getInstance(cipherName161).getAlgorithm());\n"
                  },
                  "endLine": 188,
                  "startLine": 187
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AllTasksListAsyncProvider.java:[lines 5-25] \nIn class de.szalkowski.activitylauncher.AllTasksListAsyncProvider \nIn method new de.szalkowski.activitylauncher.AllTasksListAsyncProvider(Context, AsyncProvider$Listener) \nAt AllTasksListAsyncProvider.java:[line 12]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-102\", javax.crypto.Cipher.getInstance(cipherName102).getAlgorithm());\n"
                  },
                  "startLine": 12
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-102\", javax.crypto.Cipher.getInstance(cipherName102).getAlgorithm());\n"
                  },
                  "endLine": 12,
                  "startLine": 11
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AllTasksListAsyncProvider.java:[lines 5-25] \nIn class de.szalkowski.activitylauncher.AllTasksListAsyncProvider \nIn method de.szalkowski.activitylauncher.AllTasksListAsyncProvider.run(AsyncProvider$Updater) \nAt AllTasksListAsyncProvider.java:[line 21]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-103\", javax.crypto.Cipher.getInstance(cipherName103).getAlgorithm());\n"
                  },
                  "startLine": 21
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-103\", javax.crypto.Cipher.getInstance(cipherName103).getAlgorithm());\n"
                  },
                  "endLine": 21,
                  "startLine": 20
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AllTasksListAsyncProvider.java:[lines 5-25] \nIn class de.szalkowski.activitylauncher.AllTasksListAsyncProvider \nIn method new de.szalkowski.activitylauncher.AllTasksListAsyncProvider(Context, AsyncProvider$Listener) \nAt AllTasksListAsyncProvider.java:[line 12] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-102\", javax.crypto.Cipher.getInstance(cipherName102).getAlgorithm());\n"
                  },
                  "startLine": 12
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-102\", javax.crypto.Cipher.getInstance(cipherName102).getAlgorithm());\n"
                  },
                  "endLine": 12,
                  "startLine": 11
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AllTasksListAsyncProvider.java:[lines 5-25] \nIn class de.szalkowski.activitylauncher.AllTasksListAsyncProvider \nIn method de.szalkowski.activitylauncher.AllTasksListAsyncProvider.run(AsyncProvider$Updater) \nAt AllTasksListAsyncProvider.java:[line 21] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-103\", javax.crypto.Cipher.getInstance(cipherName103).getAlgorithm());\n"
                  },
                  "startLine": 21
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-103\", javax.crypto.Cipher.getInstance(cipherName103).getAlgorithm());\n"
                  },
                  "endLine": 21,
                  "startLine": 20
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AllTasksListAsyncProvider.java:[lines 5-25] \nIn class de.szalkowski.activitylauncher.AllTasksListAsyncProvider \nIn method new de.szalkowski.activitylauncher.AllTasksListAsyncProvider(Context, AsyncProvider$Listener) \nAt AllTasksListAsyncProvider.java:[line 12]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-102\", javax.crypto.Cipher.getInstance(cipherName102).getAlgorithm());\n"
                  },
                  "startLine": 12
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-102\", javax.crypto.Cipher.getInstance(cipherName102).getAlgorithm());\n"
                  },
                  "endLine": 12,
                  "startLine": 11
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AllTasksListAsyncProvider.java:[lines 5-25] \nIn class de.szalkowski.activitylauncher.AllTasksListAsyncProvider \nIn method de.szalkowski.activitylauncher.AllTasksListAsyncProvider.run(AsyncProvider$Updater) \nAt AllTasksListAsyncProvider.java:[line 21]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-103\", javax.crypto.Cipher.getInstance(cipherName103).getAlgorithm());\n"
                  },
                  "startLine": 21
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListAsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-103\", javax.crypto.Cipher.getInstance(cipherName103).getAlgorithm());\n"
                  },
                  "endLine": 21,
                  "startLine": 20
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AllTasksListFragment.java:[lines 23-172] \nIn class de.szalkowski.activitylauncher.AllTasksListFragment \nIn method de.szalkowski.activitylauncher.AllTasksListFragment.onActivityCreated(Bundle) \nAt AllTasksListFragment.java:[line 64]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-96\", javax.crypto.Cipher.getInstance(cipherName96).getAlgorithm());\n"
                  },
                  "startLine": 64
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-96\", javax.crypto.Cipher.getInstance(cipherName96).getAlgorithm());\n"
                  },
                  "endLine": 64,
                  "startLine": 63
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AllTasksListFragment.java:[lines 23-172] \nIn class de.szalkowski.activitylauncher.AllTasksListFragment \nIn method de.szalkowski.activitylauncher.AllTasksListFragment.onContextItemSelected(MenuItem) \nAt AllTasksListFragment.java:[line 107]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-98\", javax.crypto.Cipher.getInstance(cipherName98).getAlgorithm());\n"
                  },
                  "startLine": 107
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-98\", javax.crypto.Cipher.getInstance(cipherName98).getAlgorithm());\n"
                  },
                  "endLine": 107,
                  "startLine": 106
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AllTasksListFragment.java:[lines 23-172] \nIn class de.szalkowski.activitylauncher.AllTasksListFragment \nIn method de.szalkowski.activitylauncher.AllTasksListFragment.onCreateContextMenu(ContextMenu, View, ContextMenu$ContextMenuInfo) \nAt AllTasksListFragment.java:[line 78]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-97\", javax.crypto.Cipher.getInstance(cipherName97).getAlgorithm());\n"
                  },
                  "startLine": 78
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-97\", javax.crypto.Cipher.getInstance(cipherName97).getAlgorithm());\n"
                  },
                  "endLine": 78,
                  "startLine": 77
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AllTasksListFragment.java:[lines 23-172] \nIn class de.szalkowski.activitylauncher.AllTasksListFragment \nIn method de.szalkowski.activitylauncher.AllTasksListFragment.onCreateView(LayoutInflater, ViewGroup, Bundle) \nAt AllTasksListFragment.java:[line 31]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-94\", javax.crypto.Cipher.getInstance(cipherName94).getAlgorithm());\n"
                  },
                  "startLine": 31
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-94\", javax.crypto.Cipher.getInstance(cipherName94).getAlgorithm());\n"
                  },
                  "endLine": 31,
                  "startLine": 30
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AllTasksListFragment.java:[lines 23-172] \nIn class de.szalkowski.activitylauncher.AllTasksListFragment \nIn method de.szalkowski.activitylauncher.AllTasksListFragment.onProviderFininshed(AsyncProvider, AllTasksListAdapter) \nAt AllTasksListFragment.java:[line 154]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-99\", javax.crypto.Cipher.getInstance(cipherName99).getAlgorithm());\n"
                  },
                  "startLine": 154
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-99\", javax.crypto.Cipher.getInstance(cipherName99).getAlgorithm());\n"
                  },
                  "endLine": 154,
                  "startLine": 153
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AllTasksListFragment.java:[lines 23-172] \nIn class de.szalkowski.activitylauncher.AllTasksListFragment \nIn method de.szalkowski.activitylauncher.AllTasksListFragment.onProviderFininshed(AsyncProvider, AllTasksListAdapter) \nAt AllTasksListFragment.java:[line 160]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-100\", javax.crypto.Cipher.getInstance(cipherName100).getAlgorithm());\n"
                  },
                  "startLine": 160
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-100\", javax.crypto.Cipher.getInstance(cipherName100).getAlgorithm());\n"
                  },
                  "endLine": 160,
                  "startLine": 159
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AllTasksListFragment.java:[lines 23-172] \nIn class de.szalkowski.activitylauncher.AllTasksListFragment \nIn method de.szalkowski.activitylauncher.AllTasksListFragment.onProviderFininshed(AsyncProvider, AllTasksListAdapter) \nAt AllTasksListFragment.java:[line 167]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-101\", javax.crypto.Cipher.getInstance(cipherName101).getAlgorithm());\n"
                  },
                  "startLine": 167
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-101\", javax.crypto.Cipher.getInstance(cipherName101).getAlgorithm());\n"
                  },
                  "endLine": 167,
                  "startLine": 166
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AllTasksListFragment.java:[lines 23-172] \nIn class de.szalkowski.activitylauncher.AllTasksListFragment \nIn method de.szalkowski.activitylauncher.AllTasksListFragment.onActivityCreated(Bundle) \nAt AllTasksListFragment.java:[line 64] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-96\", javax.crypto.Cipher.getInstance(cipherName96).getAlgorithm());\n"
                  },
                  "startLine": 64
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-96\", javax.crypto.Cipher.getInstance(cipherName96).getAlgorithm());\n"
                  },
                  "endLine": 64,
                  "startLine": 63
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AllTasksListFragment.java:[lines 23-172] \nIn class de.szalkowski.activitylauncher.AllTasksListFragment \nIn method de.szalkowski.activitylauncher.AllTasksListFragment.onContextItemSelected(MenuItem) \nAt AllTasksListFragment.java:[line 107] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-98\", javax.crypto.Cipher.getInstance(cipherName98).getAlgorithm());\n"
                  },
                  "startLine": 107
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-98\", javax.crypto.Cipher.getInstance(cipherName98).getAlgorithm());\n"
                  },
                  "endLine": 107,
                  "startLine": 106
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AllTasksListFragment.java:[lines 23-172] \nIn class de.szalkowski.activitylauncher.AllTasksListFragment \nIn method de.szalkowski.activitylauncher.AllTasksListFragment.onCreateContextMenu(ContextMenu, View, ContextMenu$ContextMenuInfo) \nAt AllTasksListFragment.java:[line 78] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-97\", javax.crypto.Cipher.getInstance(cipherName97).getAlgorithm());\n"
                  },
                  "startLine": 78
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-97\", javax.crypto.Cipher.getInstance(cipherName97).getAlgorithm());\n"
                  },
                  "endLine": 78,
                  "startLine": 77
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AllTasksListFragment.java:[lines 23-172] \nIn class de.szalkowski.activitylauncher.AllTasksListFragment \nIn method de.szalkowski.activitylauncher.AllTasksListFragment.onCreateView(LayoutInflater, ViewGroup, Bundle) \nAt AllTasksListFragment.java:[line 31] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-94\", javax.crypto.Cipher.getInstance(cipherName94).getAlgorithm());\n"
                  },
                  "startLine": 31
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-94\", javax.crypto.Cipher.getInstance(cipherName94).getAlgorithm());\n"
                  },
                  "endLine": 31,
                  "startLine": 30
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AllTasksListFragment.java:[lines 23-172] \nIn class de.szalkowski.activitylauncher.AllTasksListFragment \nIn method de.szalkowski.activitylauncher.AllTasksListFragment.onProviderFininshed(AsyncProvider, AllTasksListAdapter) \nAt AllTasksListFragment.java:[line 154] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-99\", javax.crypto.Cipher.getInstance(cipherName99).getAlgorithm());\n"
                  },
                  "startLine": 154
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-99\", javax.crypto.Cipher.getInstance(cipherName99).getAlgorithm());\n"
                  },
                  "endLine": 154,
                  "startLine": 153
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AllTasksListFragment.java:[lines 23-172] \nIn class de.szalkowski.activitylauncher.AllTasksListFragment \nIn method de.szalkowski.activitylauncher.AllTasksListFragment.onProviderFininshed(AsyncProvider, AllTasksListAdapter) \nAt AllTasksListFragment.java:[line 160] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-100\", javax.crypto.Cipher.getInstance(cipherName100).getAlgorithm());\n"
                  },
                  "startLine": 160
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-100\", javax.crypto.Cipher.getInstance(cipherName100).getAlgorithm());\n"
                  },
                  "endLine": 160,
                  "startLine": 159
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AllTasksListFragment.java:[lines 23-172] \nIn class de.szalkowski.activitylauncher.AllTasksListFragment \nIn method de.szalkowski.activitylauncher.AllTasksListFragment.onProviderFininshed(AsyncProvider, AllTasksListAdapter) \nAt AllTasksListFragment.java:[line 167] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-101\", javax.crypto.Cipher.getInstance(cipherName101).getAlgorithm());\n"
                  },
                  "startLine": 167
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-101\", javax.crypto.Cipher.getInstance(cipherName101).getAlgorithm());\n"
                  },
                  "endLine": 167,
                  "startLine": 166
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AllTasksListFragment.java:[lines 23-172] \nIn class de.szalkowski.activitylauncher.AllTasksListFragment \nIn method de.szalkowski.activitylauncher.AllTasksListFragment.onActivityCreated(Bundle) \nAt AllTasksListFragment.java:[line 64]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-96\", javax.crypto.Cipher.getInstance(cipherName96).getAlgorithm());\n"
                  },
                  "startLine": 64
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-96\", javax.crypto.Cipher.getInstance(cipherName96).getAlgorithm());\n"
                  },
                  "endLine": 64,
                  "startLine": 63
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AllTasksListFragment.java:[lines 23-172] \nIn class de.szalkowski.activitylauncher.AllTasksListFragment \nIn method de.szalkowski.activitylauncher.AllTasksListFragment.onContextItemSelected(MenuItem) \nAt AllTasksListFragment.java:[line 107]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-98\", javax.crypto.Cipher.getInstance(cipherName98).getAlgorithm());\n"
                  },
                  "startLine": 107
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-98\", javax.crypto.Cipher.getInstance(cipherName98).getAlgorithm());\n"
                  },
                  "endLine": 107,
                  "startLine": 106
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AllTasksListFragment.java:[lines 23-172] \nIn class de.szalkowski.activitylauncher.AllTasksListFragment \nIn method de.szalkowski.activitylauncher.AllTasksListFragment.onCreateContextMenu(ContextMenu, View, ContextMenu$ContextMenuInfo) \nAt AllTasksListFragment.java:[line 78]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-97\", javax.crypto.Cipher.getInstance(cipherName97).getAlgorithm());\n"
                  },
                  "startLine": 78
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-97\", javax.crypto.Cipher.getInstance(cipherName97).getAlgorithm());\n"
                  },
                  "endLine": 78,
                  "startLine": 77
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AllTasksListFragment.java:[lines 23-172] \nIn class de.szalkowski.activitylauncher.AllTasksListFragment \nIn method de.szalkowski.activitylauncher.AllTasksListFragment.onCreateView(LayoutInflater, ViewGroup, Bundle) \nAt AllTasksListFragment.java:[line 31]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-94\", javax.crypto.Cipher.getInstance(cipherName94).getAlgorithm());\n"
                  },
                  "startLine": 31
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-94\", javax.crypto.Cipher.getInstance(cipherName94).getAlgorithm());\n"
                  },
                  "endLine": 31,
                  "startLine": 30
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AllTasksListFragment.java:[lines 23-172] \nIn class de.szalkowski.activitylauncher.AllTasksListFragment \nIn method de.szalkowski.activitylauncher.AllTasksListFragment.onProviderFininshed(AsyncProvider, AllTasksListAdapter) \nAt AllTasksListFragment.java:[line 154]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-99\", javax.crypto.Cipher.getInstance(cipherName99).getAlgorithm());\n"
                  },
                  "startLine": 154
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-99\", javax.crypto.Cipher.getInstance(cipherName99).getAlgorithm());\n"
                  },
                  "endLine": 154,
                  "startLine": 153
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AllTasksListFragment.java:[lines 23-172] \nIn class de.szalkowski.activitylauncher.AllTasksListFragment \nIn method de.szalkowski.activitylauncher.AllTasksListFragment.onProviderFininshed(AsyncProvider, AllTasksListAdapter) \nAt AllTasksListFragment.java:[line 160]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-100\", javax.crypto.Cipher.getInstance(cipherName100).getAlgorithm());\n"
                  },
                  "startLine": 160
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-100\", javax.crypto.Cipher.getInstance(cipherName100).getAlgorithm());\n"
                  },
                  "endLine": 160,
                  "startLine": 159
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AllTasksListFragment.java:[lines 23-172] \nIn class de.szalkowski.activitylauncher.AllTasksListFragment \nIn method de.szalkowski.activitylauncher.AllTasksListFragment.onProviderFininshed(AsyncProvider, AllTasksListAdapter) \nAt AllTasksListFragment.java:[line 167]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-101\", javax.crypto.Cipher.getInstance(cipherName101).getAlgorithm());\n"
                  },
                  "startLine": 167
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-101\", javax.crypto.Cipher.getInstance(cipherName101).getAlgorithm());\n"
                  },
                  "endLine": 167,
                  "startLine": 166
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AllTasksListFragment.java:[lines 38-49] \nIn class de.szalkowski.activitylauncher.AllTasksListFragment$1 \nIn method de.szalkowski.activitylauncher.AllTasksListFragment$1.onChildClick(ExpandableListView, View, int, int, long) \nAt AllTasksListFragment.java:[line 43]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-95\", javax.crypto.Cipher.getInstance(cipherName95).getAlgorithm());\n"
                  },
                  "startLine": 43
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-95\", javax.crypto.Cipher.getInstance(cipherName95).getAlgorithm());\n"
                  },
                  "endLine": 43,
                  "startLine": 42
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AllTasksListFragment.java:[lines 38-49] \nIn class de.szalkowski.activitylauncher.AllTasksListFragment$1 \nIn method de.szalkowski.activitylauncher.AllTasksListFragment$1.onChildClick(ExpandableListView, View, int, int, long) \nAt AllTasksListFragment.java:[line 43] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-95\", javax.crypto.Cipher.getInstance(cipherName95).getAlgorithm());\n"
                  },
                  "startLine": 43
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-95\", javax.crypto.Cipher.getInstance(cipherName95).getAlgorithm());\n"
                  },
                  "endLine": 43,
                  "startLine": 42
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AllTasksListFragment.java:[lines 38-49] \nIn class de.szalkowski.activitylauncher.AllTasksListFragment$1 \nIn method de.szalkowski.activitylauncher.AllTasksListFragment$1.onChildClick(ExpandableListView, View, int, int, long) \nAt AllTasksListFragment.java:[line 43]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-95\", javax.crypto.Cipher.getInstance(cipherName95).getAlgorithm());\n"
                  },
                  "startLine": 43
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AllTasksListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-95\", javax.crypto.Cipher.getInstance(cipherName95).getAlgorithm());\n"
                  },
                  "endLine": 43,
                  "startLine": 42
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method new de.szalkowski.activitylauncher.AsyncProvider(Context, AsyncProvider$Listener, boolean) \nAt AsyncProvider.java:[line 51]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-107\", javax.crypto.Cipher.getInstance(cipherName107).getAlgorithm());\n"
                  },
                  "startLine": 51
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-107\", javax.crypto.Cipher.getInstance(cipherName107).getAlgorithm());\n"
                  },
                  "endLine": 51,
                  "startLine": 50
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method new de.szalkowski.activitylauncher.AsyncProvider(Context, AsyncProvider$Listener, boolean) \nAt AsyncProvider.java:[line 60]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-108\", javax.crypto.Cipher.getInstance(cipherName108).getAlgorithm());\n"
                  },
                  "startLine": 60
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-108\", javax.crypto.Cipher.getInstance(cipherName108).getAlgorithm());\n"
                  },
                  "endLine": 60,
                  "startLine": 59
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method new de.szalkowski.activitylauncher.AsyncProvider(Context, AsyncProvider$Listener, boolean) \nAt AsyncProvider.java:[line 67]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-109\", javax.crypto.Cipher.getInstance(cipherName109).getAlgorithm());\n"
                  },
                  "startLine": 67
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-109\", javax.crypto.Cipher.getInstance(cipherName109).getAlgorithm());\n"
                  },
                  "endLine": 67,
                  "startLine": 66
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method de.szalkowski.activitylauncher.AsyncProvider.doInBackground(Void[]) \nAt AsyncProvider.java:[line 159]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-118\", javax.crypto.Cipher.getInstance(cipherName118).getAlgorithm());\n"
                  },
                  "startLine": 159
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-118\", javax.crypto.Cipher.getInstance(cipherName118).getAlgorithm());\n"
                  },
                  "endLine": 159,
                  "startLine": 158
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method de.szalkowski.activitylauncher.AsyncProvider.onPostExecute(Object) \nAt AsyncProvider.java:[line 131]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-115\", javax.crypto.Cipher.getInstance(cipherName115).getAlgorithm());\n"
                  },
                  "startLine": 131
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-115\", javax.crypto.Cipher.getInstance(cipherName115).getAlgorithm());\n"
                  },
                  "endLine": 131,
                  "startLine": 130
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method de.szalkowski.activitylauncher.AsyncProvider.onPostExecute(Object) \nAt AsyncProvider.java:[line 137]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-116\", javax.crypto.Cipher.getInstance(cipherName116).getAlgorithm());\n"
                  },
                  "startLine": 137
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-116\", javax.crypto.Cipher.getInstance(cipherName116).getAlgorithm());\n"
                  },
                  "endLine": 137,
                  "startLine": 136
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method de.szalkowski.activitylauncher.AsyncProvider.onPostExecute(Object) \nAt AsyncProvider.java:[line 146]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-117\", javax.crypto.Cipher.getInstance(cipherName117).getAlgorithm());\n"
                  },
                  "startLine": 146
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-117\", javax.crypto.Cipher.getInstance(cipherName117).getAlgorithm());\n"
                  },
                  "endLine": 146,
                  "startLine": 145
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method de.szalkowski.activitylauncher.AsyncProvider.onPreExecute() \nAt AsyncProvider.java:[line 108]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-113\", javax.crypto.Cipher.getInstance(cipherName113).getAlgorithm());\n"
                  },
                  "startLine": 108
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-113\", javax.crypto.Cipher.getInstance(cipherName113).getAlgorithm());\n"
                  },
                  "endLine": 108,
                  "startLine": 107
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method de.szalkowski.activitylauncher.AsyncProvider.onPreExecute() \nAt AsyncProvider.java:[line 115]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-114\", javax.crypto.Cipher.getInstance(cipherName114).getAlgorithm());\n"
                  },
                  "startLine": 115
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-114\", javax.crypto.Cipher.getInstance(cipherName114).getAlgorithm());\n"
                  },
                  "endLine": 115,
                  "startLine": 114
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method de.szalkowski.activitylauncher.AsyncProvider.onProgressUpdate(Integer[]) \nAt AsyncProvider.java:[line 78]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-110\", javax.crypto.Cipher.getInstance(cipherName110).getAlgorithm());\n"
                  },
                  "startLine": 78
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-110\", javax.crypto.Cipher.getInstance(cipherName110).getAlgorithm());\n"
                  },
                  "endLine": 78,
                  "startLine": 77
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method de.szalkowski.activitylauncher.AsyncProvider.onProgressUpdate(Integer[]) \nAt AsyncProvider.java:[line 84]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-111\", javax.crypto.Cipher.getInstance(cipherName111).getAlgorithm());\n"
                  },
                  "startLine": 84
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-111\", javax.crypto.Cipher.getInstance(cipherName111).getAlgorithm());\n"
                  },
                  "endLine": 84,
                  "startLine": 83
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method de.szalkowski.activitylauncher.AsyncProvider.onProgressUpdate(Integer[]) \nAt AsyncProvider.java:[line 92]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-112\", javax.crypto.Cipher.getInstance(cipherName112).getAlgorithm());\n"
                  },
                  "startLine": 92
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-112\", javax.crypto.Cipher.getInstance(cipherName112).getAlgorithm());\n"
                  },
                  "endLine": 92,
                  "startLine": 91
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method new de.szalkowski.activitylauncher.AsyncProvider(Context, AsyncProvider$Listener, boolean) \nAt AsyncProvider.java:[line 51] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-107\", javax.crypto.Cipher.getInstance(cipherName107).getAlgorithm());\n"
                  },
                  "startLine": 51
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-107\", javax.crypto.Cipher.getInstance(cipherName107).getAlgorithm());\n"
                  },
                  "endLine": 51,
                  "startLine": 50
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method new de.szalkowski.activitylauncher.AsyncProvider(Context, AsyncProvider$Listener, boolean) \nAt AsyncProvider.java:[line 60] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-108\", javax.crypto.Cipher.getInstance(cipherName108).getAlgorithm());\n"
                  },
                  "startLine": 60
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-108\", javax.crypto.Cipher.getInstance(cipherName108).getAlgorithm());\n"
                  },
                  "endLine": 60,
                  "startLine": 59
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method new de.szalkowski.activitylauncher.AsyncProvider(Context, AsyncProvider$Listener, boolean) \nAt AsyncProvider.java:[line 67] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-109\", javax.crypto.Cipher.getInstance(cipherName109).getAlgorithm());\n"
                  },
                  "startLine": 67
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-109\", javax.crypto.Cipher.getInstance(cipherName109).getAlgorithm());\n"
                  },
                  "endLine": 67,
                  "startLine": 66
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method de.szalkowski.activitylauncher.AsyncProvider.doInBackground(Void[]) \nAt AsyncProvider.java:[line 159] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-118\", javax.crypto.Cipher.getInstance(cipherName118).getAlgorithm());\n"
                  },
                  "startLine": 159
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-118\", javax.crypto.Cipher.getInstance(cipherName118).getAlgorithm());\n"
                  },
                  "endLine": 159,
                  "startLine": 158
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method de.szalkowski.activitylauncher.AsyncProvider.onPostExecute(Object) \nAt AsyncProvider.java:[line 131] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-115\", javax.crypto.Cipher.getInstance(cipherName115).getAlgorithm());\n"
                  },
                  "startLine": 131
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-115\", javax.crypto.Cipher.getInstance(cipherName115).getAlgorithm());\n"
                  },
                  "endLine": 131,
                  "startLine": 130
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method de.szalkowski.activitylauncher.AsyncProvider.onPostExecute(Object) \nAt AsyncProvider.java:[line 137] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-116\", javax.crypto.Cipher.getInstance(cipherName116).getAlgorithm());\n"
                  },
                  "startLine": 137
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-116\", javax.crypto.Cipher.getInstance(cipherName116).getAlgorithm());\n"
                  },
                  "endLine": 137,
                  "startLine": 136
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method de.szalkowski.activitylauncher.AsyncProvider.onPostExecute(Object) \nAt AsyncProvider.java:[line 146] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-117\", javax.crypto.Cipher.getInstance(cipherName117).getAlgorithm());\n"
                  },
                  "startLine": 146
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-117\", javax.crypto.Cipher.getInstance(cipherName117).getAlgorithm());\n"
                  },
                  "endLine": 146,
                  "startLine": 145
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method de.szalkowski.activitylauncher.AsyncProvider.onPreExecute() \nAt AsyncProvider.java:[line 108] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-113\", javax.crypto.Cipher.getInstance(cipherName113).getAlgorithm());\n"
                  },
                  "startLine": 108
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-113\", javax.crypto.Cipher.getInstance(cipherName113).getAlgorithm());\n"
                  },
                  "endLine": 108,
                  "startLine": 107
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method de.szalkowski.activitylauncher.AsyncProvider.onPreExecute() \nAt AsyncProvider.java:[line 115] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-114\", javax.crypto.Cipher.getInstance(cipherName114).getAlgorithm());\n"
                  },
                  "startLine": 115
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-114\", javax.crypto.Cipher.getInstance(cipherName114).getAlgorithm());\n"
                  },
                  "endLine": 115,
                  "startLine": 114
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method de.szalkowski.activitylauncher.AsyncProvider.onProgressUpdate(Integer[]) \nAt AsyncProvider.java:[line 78] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-110\", javax.crypto.Cipher.getInstance(cipherName110).getAlgorithm());\n"
                  },
                  "startLine": 78
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-110\", javax.crypto.Cipher.getInstance(cipherName110).getAlgorithm());\n"
                  },
                  "endLine": 78,
                  "startLine": 77
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method de.szalkowski.activitylauncher.AsyncProvider.onProgressUpdate(Integer[]) \nAt AsyncProvider.java:[line 84] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-111\", javax.crypto.Cipher.getInstance(cipherName111).getAlgorithm());\n"
                  },
                  "startLine": 84
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-111\", javax.crypto.Cipher.getInstance(cipherName111).getAlgorithm());\n"
                  },
                  "endLine": 84,
                  "startLine": 83
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method de.szalkowski.activitylauncher.AsyncProvider.onProgressUpdate(Integer[]) \nAt AsyncProvider.java:[line 92] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-112\", javax.crypto.Cipher.getInstance(cipherName112).getAlgorithm());\n"
                  },
                  "startLine": 92
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-112\", javax.crypto.Cipher.getInstance(cipherName112).getAlgorithm());\n"
                  },
                  "endLine": 92,
                  "startLine": 91
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method new de.szalkowski.activitylauncher.AsyncProvider(Context, AsyncProvider$Listener, boolean) \nAt AsyncProvider.java:[line 51]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-107\", javax.crypto.Cipher.getInstance(cipherName107).getAlgorithm());\n"
                  },
                  "startLine": 51
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-107\", javax.crypto.Cipher.getInstance(cipherName107).getAlgorithm());\n"
                  },
                  "endLine": 51,
                  "startLine": 50
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method new de.szalkowski.activitylauncher.AsyncProvider(Context, AsyncProvider$Listener, boolean) \nAt AsyncProvider.java:[line 60]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-108\", javax.crypto.Cipher.getInstance(cipherName108).getAlgorithm());\n"
                  },
                  "startLine": 60
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-108\", javax.crypto.Cipher.getInstance(cipherName108).getAlgorithm());\n"
                  },
                  "endLine": 60,
                  "startLine": 59
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method new de.szalkowski.activitylauncher.AsyncProvider(Context, AsyncProvider$Listener, boolean) \nAt AsyncProvider.java:[line 67]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-109\", javax.crypto.Cipher.getInstance(cipherName109).getAlgorithm());\n"
                  },
                  "startLine": 67
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-109\", javax.crypto.Cipher.getInstance(cipherName109).getAlgorithm());\n"
                  },
                  "endLine": 67,
                  "startLine": 66
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method de.szalkowski.activitylauncher.AsyncProvider.doInBackground(Void[]) \nAt AsyncProvider.java:[line 159]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-118\", javax.crypto.Cipher.getInstance(cipherName118).getAlgorithm());\n"
                  },
                  "startLine": 159
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-118\", javax.crypto.Cipher.getInstance(cipherName118).getAlgorithm());\n"
                  },
                  "endLine": 159,
                  "startLine": 158
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method de.szalkowski.activitylauncher.AsyncProvider.onPostExecute(Object) \nAt AsyncProvider.java:[line 131]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-115\", javax.crypto.Cipher.getInstance(cipherName115).getAlgorithm());\n"
                  },
                  "startLine": 131
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-115\", javax.crypto.Cipher.getInstance(cipherName115).getAlgorithm());\n"
                  },
                  "endLine": 131,
                  "startLine": 130
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method de.szalkowski.activitylauncher.AsyncProvider.onPostExecute(Object) \nAt AsyncProvider.java:[line 137]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-116\", javax.crypto.Cipher.getInstance(cipherName116).getAlgorithm());\n"
                  },
                  "startLine": 137
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-116\", javax.crypto.Cipher.getInstance(cipherName116).getAlgorithm());\n"
                  },
                  "endLine": 137,
                  "startLine": 136
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method de.szalkowski.activitylauncher.AsyncProvider.onPostExecute(Object) \nAt AsyncProvider.java:[line 146]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-117\", javax.crypto.Cipher.getInstance(cipherName117).getAlgorithm());\n"
                  },
                  "startLine": 146
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-117\", javax.crypto.Cipher.getInstance(cipherName117).getAlgorithm());\n"
                  },
                  "endLine": 146,
                  "startLine": 145
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method de.szalkowski.activitylauncher.AsyncProvider.onPreExecute() \nAt AsyncProvider.java:[line 108]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-113\", javax.crypto.Cipher.getInstance(cipherName113).getAlgorithm());\n"
                  },
                  "startLine": 108
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-113\", javax.crypto.Cipher.getInstance(cipherName113).getAlgorithm());\n"
                  },
                  "endLine": 108,
                  "startLine": 107
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method de.szalkowski.activitylauncher.AsyncProvider.onPreExecute() \nAt AsyncProvider.java:[line 115]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-114\", javax.crypto.Cipher.getInstance(cipherName114).getAlgorithm());\n"
                  },
                  "startLine": 115
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-114\", javax.crypto.Cipher.getInstance(cipherName114).getAlgorithm());\n"
                  },
                  "endLine": 115,
                  "startLine": 114
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method de.szalkowski.activitylauncher.AsyncProvider.onProgressUpdate(Integer[]) \nAt AsyncProvider.java:[line 78]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-110\", javax.crypto.Cipher.getInstance(cipherName110).getAlgorithm());\n"
                  },
                  "startLine": 78
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-110\", javax.crypto.Cipher.getInstance(cipherName110).getAlgorithm());\n"
                  },
                  "endLine": 78,
                  "startLine": 77
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method de.szalkowski.activitylauncher.AsyncProvider.onProgressUpdate(Integer[]) \nAt AsyncProvider.java:[line 84]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-111\", javax.crypto.Cipher.getInstance(cipherName111).getAlgorithm());\n"
                  },
                  "startLine": 84
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-111\", javax.crypto.Cipher.getInstance(cipherName111).getAlgorithm());\n"
                  },
                  "endLine": 84,
                  "startLine": 83
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AsyncProvider.java:[lines 7-162] \nIn class de.szalkowski.activitylauncher.AsyncProvider \nIn method de.szalkowski.activitylauncher.AsyncProvider.onProgressUpdate(Integer[]) \nAt AsyncProvider.java:[line 92]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-112\", javax.crypto.Cipher.getInstance(cipherName112).getAlgorithm());\n"
                  },
                  "startLine": 92
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-112\", javax.crypto.Cipher.getInstance(cipherName112).getAlgorithm());\n"
                  },
                  "endLine": 92,
                  "startLine": 91
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AsyncProvider.java:[lines 15-40] \nIn class de.szalkowski.activitylauncher.AsyncProvider$Updater \nIn method new de.szalkowski.activitylauncher.AsyncProvider$Updater(AsyncProvider, AsyncProvider) \nAt AsyncProvider.java:[line 18]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-104\", javax.crypto.Cipher.getInstance(cipherName104).getAlgorithm());\n"
                  },
                  "startLine": 18
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-104\", javax.crypto.Cipher.getInstance(cipherName104).getAlgorithm());\n"
                  },
                  "endLine": 18,
                  "startLine": 17
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AsyncProvider.java:[lines 15-40] \nIn class de.szalkowski.activitylauncher.AsyncProvider$Updater \nIn method de.szalkowski.activitylauncher.AsyncProvider$Updater.update(int) \nAt AsyncProvider.java:[line 27]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-105\", javax.crypto.Cipher.getInstance(cipherName105).getAlgorithm());\n"
                  },
                  "startLine": 27
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-105\", javax.crypto.Cipher.getInstance(cipherName105).getAlgorithm());\n"
                  },
                  "endLine": 27,
                  "startLine": 26
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt AsyncProvider.java:[lines 15-40] \nIn class de.szalkowski.activitylauncher.AsyncProvider$Updater \nIn method de.szalkowski.activitylauncher.AsyncProvider$Updater.updateMax(int) \nAt AsyncProvider.java:[line 36]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-106\", javax.crypto.Cipher.getInstance(cipherName106).getAlgorithm());\n"
                  },
                  "startLine": 36
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-106\", javax.crypto.Cipher.getInstance(cipherName106).getAlgorithm());\n"
                  },
                  "endLine": 36,
                  "startLine": 35
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AsyncProvider.java:[lines 15-40] \nIn class de.szalkowski.activitylauncher.AsyncProvider$Updater \nIn method new de.szalkowski.activitylauncher.AsyncProvider$Updater(AsyncProvider, AsyncProvider) \nAt AsyncProvider.java:[line 18] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-104\", javax.crypto.Cipher.getInstance(cipherName104).getAlgorithm());\n"
                  },
                  "startLine": 18
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-104\", javax.crypto.Cipher.getInstance(cipherName104).getAlgorithm());\n"
                  },
                  "endLine": 18,
                  "startLine": 17
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AsyncProvider.java:[lines 15-40] \nIn class de.szalkowski.activitylauncher.AsyncProvider$Updater \nIn method de.szalkowski.activitylauncher.AsyncProvider$Updater.update(int) \nAt AsyncProvider.java:[line 27] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-105\", javax.crypto.Cipher.getInstance(cipherName105).getAlgorithm());\n"
                  },
                  "startLine": 27
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-105\", javax.crypto.Cipher.getInstance(cipherName105).getAlgorithm());\n"
                  },
                  "endLine": 27,
                  "startLine": 26
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt AsyncProvider.java:[lines 15-40] \nIn class de.szalkowski.activitylauncher.AsyncProvider$Updater \nIn method de.szalkowski.activitylauncher.AsyncProvider$Updater.updateMax(int) \nAt AsyncProvider.java:[line 36] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-106\", javax.crypto.Cipher.getInstance(cipherName106).getAlgorithm());\n"
                  },
                  "startLine": 36
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-106\", javax.crypto.Cipher.getInstance(cipherName106).getAlgorithm());\n"
                  },
                  "endLine": 36,
                  "startLine": 35
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AsyncProvider.java:[lines 15-40] \nIn class de.szalkowski.activitylauncher.AsyncProvider$Updater \nIn method new de.szalkowski.activitylauncher.AsyncProvider$Updater(AsyncProvider, AsyncProvider) \nAt AsyncProvider.java:[line 18]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-104\", javax.crypto.Cipher.getInstance(cipherName104).getAlgorithm());\n"
                  },
                  "startLine": 18
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-104\", javax.crypto.Cipher.getInstance(cipherName104).getAlgorithm());\n"
                  },
                  "endLine": 18,
                  "startLine": 17
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AsyncProvider.java:[lines 15-40] \nIn class de.szalkowski.activitylauncher.AsyncProvider$Updater \nIn method de.szalkowski.activitylauncher.AsyncProvider$Updater.update(int) \nAt AsyncProvider.java:[line 27]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-105\", javax.crypto.Cipher.getInstance(cipherName105).getAlgorithm());\n"
                  },
                  "startLine": 27
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-105\", javax.crypto.Cipher.getInstance(cipherName105).getAlgorithm());\n"
                  },
                  "endLine": 27,
                  "startLine": 26
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt AsyncProvider.java:[lines 15-40] \nIn class de.szalkowski.activitylauncher.AsyncProvider$Updater \nIn method de.szalkowski.activitylauncher.AsyncProvider$Updater.updateMax(int) \nAt AsyncProvider.java:[line 36]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-106\", javax.crypto.Cipher.getInstance(cipherName106).getAlgorithm());\n"
                  },
                  "startLine": 36
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/AsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-106\", javax.crypto.Cipher.getInstance(cipherName106).getAlgorithm());\n"
                  },
                  "endLine": 36,
                  "startLine": 35
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt DisclaimerDialogFragment.java:[lines 12-51] \nIn class de.szalkowski.activitylauncher.DisclaimerDialogFragment \nIn method de.szalkowski.activitylauncher.DisclaimerDialogFragment.onCreateDialog(Bundle) \nAt DisclaimerDialogFragment.java:[line 17]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-171\", javax.crypto.Cipher.getInstance(cipherName171).getAlgorithm());\n"
                  },
                  "startLine": 17
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/DisclaimerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-171\", javax.crypto.Cipher.getInstance(cipherName171).getAlgorithm());\n"
                  },
                  "endLine": 17,
                  "startLine": 16
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt DisclaimerDialogFragment.java:[lines 12-51] \nIn class de.szalkowski.activitylauncher.DisclaimerDialogFragment \nIn method de.szalkowski.activitylauncher.DisclaimerDialogFragment.onCreateDialog(Bundle) \nAt DisclaimerDialogFragment.java:[line 17] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-171\", javax.crypto.Cipher.getInstance(cipherName171).getAlgorithm());\n"
                  },
                  "startLine": 17
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/DisclaimerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-171\", javax.crypto.Cipher.getInstance(cipherName171).getAlgorithm());\n"
                  },
                  "endLine": 17,
                  "startLine": 16
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt DisclaimerDialogFragment.java:[lines 12-51] \nIn class de.szalkowski.activitylauncher.DisclaimerDialogFragment \nIn method de.szalkowski.activitylauncher.DisclaimerDialogFragment.onCreateDialog(Bundle) \nAt DisclaimerDialogFragment.java:[line 17]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-171\", javax.crypto.Cipher.getInstance(cipherName171).getAlgorithm());\n"
                  },
                  "startLine": 17
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/DisclaimerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-171\", javax.crypto.Cipher.getInstance(cipherName171).getAlgorithm());\n"
                  },
                  "endLine": 17,
                  "startLine": 16
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt DisclaimerDialogFragment.java:[lines 36-48] \nIn class de.szalkowski.activitylauncher.DisclaimerDialogFragment$1 \nIn method de.szalkowski.activitylauncher.DisclaimerDialogFragment$1.onClick(DialogInterface, int) \nAt DisclaimerDialogFragment.java:[line 41]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-173\", javax.crypto.Cipher.getInstance(cipherName173).getAlgorithm());\n"
                  },
                  "startLine": 41
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/DisclaimerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-173\", javax.crypto.Cipher.getInstance(cipherName173).getAlgorithm());\n"
                  },
                  "endLine": 41,
                  "startLine": 40
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt DisclaimerDialogFragment.java:[lines 36-48] \nIn class de.szalkowski.activitylauncher.DisclaimerDialogFragment$1 \nIn method de.szalkowski.activitylauncher.DisclaimerDialogFragment$1.onClick(DialogInterface, int) \nAt DisclaimerDialogFragment.java:[line 41] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-173\", javax.crypto.Cipher.getInstance(cipherName173).getAlgorithm());\n"
                  },
                  "startLine": 41
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/DisclaimerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-173\", javax.crypto.Cipher.getInstance(cipherName173).getAlgorithm());\n"
                  },
                  "endLine": 41,
                  "startLine": 40
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt DisclaimerDialogFragment.java:[lines 36-48] \nIn class de.szalkowski.activitylauncher.DisclaimerDialogFragment$1 \nIn method de.szalkowski.activitylauncher.DisclaimerDialogFragment$1.onClick(DialogInterface, int) \nAt DisclaimerDialogFragment.java:[line 41]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-173\", javax.crypto.Cipher.getInstance(cipherName173).getAlgorithm());\n"
                  },
                  "startLine": 41
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/DisclaimerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-173\", javax.crypto.Cipher.getInstance(cipherName173).getAlgorithm());\n"
                  },
                  "endLine": 41,
                  "startLine": 40
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt DisclaimerDialogFragment.java:[lines 23-34] \nIn class de.szalkowski.activitylauncher.DisclaimerDialogFragment$2 \nIn method de.szalkowski.activitylauncher.DisclaimerDialogFragment$2.onClick(DialogInterface, int) \nAt DisclaimerDialogFragment.java:[line 28]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-172\", javax.crypto.Cipher.getInstance(cipherName172).getAlgorithm());\n"
                  },
                  "startLine": 28
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/DisclaimerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-172\", javax.crypto.Cipher.getInstance(cipherName172).getAlgorithm());\n"
                  },
                  "endLine": 28,
                  "startLine": 27
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt DisclaimerDialogFragment.java:[lines 23-34] \nIn class de.szalkowski.activitylauncher.DisclaimerDialogFragment$2 \nIn method de.szalkowski.activitylauncher.DisclaimerDialogFragment$2.onClick(DialogInterface, int) \nAt DisclaimerDialogFragment.java:[line 28] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-172\", javax.crypto.Cipher.getInstance(cipherName172).getAlgorithm());\n"
                  },
                  "startLine": 28
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/DisclaimerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-172\", javax.crypto.Cipher.getInstance(cipherName172).getAlgorithm());\n"
                  },
                  "endLine": 28,
                  "startLine": 27
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt DisclaimerDialogFragment.java:[lines 23-34] \nIn class de.szalkowski.activitylauncher.DisclaimerDialogFragment$2 \nIn method de.szalkowski.activitylauncher.DisclaimerDialogFragment$2.onClick(DialogInterface, int) \nAt DisclaimerDialogFragment.java:[line 28]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-172\", javax.crypto.Cipher.getInstance(cipherName172).getAlgorithm());\n"
                  },
                  "startLine": 28
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/DisclaimerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-172\", javax.crypto.Cipher.getInstance(cipherName172).getAlgorithm());\n"
                  },
                  "endLine": 28,
                  "startLine": 27
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method new de.szalkowski.activitylauncher.IconListAdapter(Context, AsyncProvider$Updater) \nAt IconListAdapter.java:[line 26]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-119\", javax.crypto.Cipher.getInstance(cipherName119).getAlgorithm());\n"
                  },
                  "startLine": 26
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-119\", javax.crypto.Cipher.getInstance(cipherName119).getAlgorithm());\n"
                  },
                  "endLine": 26,
                  "startLine": 25
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method new de.szalkowski.activitylauncher.IconListAdapter(Context, AsyncProvider$Updater) \nAt IconListAdapter.java:[line 42]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-120\", javax.crypto.Cipher.getInstance(cipherName120).getAlgorithm());\n"
                  },
                  "startLine": 42
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-120\", javax.crypto.Cipher.getInstance(cipherName120).getAlgorithm());\n"
                  },
                  "endLine": 42,
                  "startLine": 41
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method new de.szalkowski.activitylauncher.IconListAdapter(Context, AsyncProvider$Updater) \nAt IconListAdapter.java:[line 51]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-121\", javax.crypto.Cipher.getInstance(cipherName121).getAlgorithm());\n"
                  },
                  "startLine": 51
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-121\", javax.crypto.Cipher.getInstance(cipherName121).getAlgorithm());\n"
                  },
                  "endLine": 51,
                  "startLine": 50
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method new de.szalkowski.activitylauncher.IconListAdapter(Context, AsyncProvider$Updater) \nAt IconListAdapter.java:[line 59]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-122\", javax.crypto.Cipher.getInstance(cipherName122).getAlgorithm());\n"
                  },
                  "startLine": 59
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\ttry{\n\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-122\", javax.crypto.Cipher.getInstance(cipherName122).getAlgorithm());\n"
                  },
                  "endLine": 59,
                  "startLine": 58
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method new de.szalkowski.activitylauncher.IconListAdapter(Context, AsyncProvider$Updater) \nAt IconListAdapter.java:[line 66]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-123\", javax.crypto.Cipher.getInstance(cipherName123).getAlgorithm());\n"
                  },
                  "startLine": 66
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-123\", javax.crypto.Cipher.getInstance(cipherName123).getAlgorithm());\n"
                  },
                  "endLine": 66,
                  "startLine": 65
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method new de.szalkowski.activitylauncher.IconListAdapter(Context, AsyncProvider$Updater) \nAt IconListAdapter.java:[line 75]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-124\", javax.crypto.Cipher.getInstance(cipherName124).getAlgorithm());\n"
                  },
                  "startLine": 75
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-124\", javax.crypto.Cipher.getInstance(cipherName124).getAlgorithm());\n"
                  },
                  "endLine": 75,
                  "startLine": 74
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method de.szalkowski.activitylauncher.IconListAdapter.getCount() \nAt IconListAdapter.java:[line 89]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-125\", javax.crypto.Cipher.getInstance(cipherName125).getAlgorithm());\n"
                  },
                  "startLine": 89
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-125\", javax.crypto.Cipher.getInstance(cipherName125).getAlgorithm());\n"
                  },
                  "endLine": 89,
                  "startLine": 88
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method de.szalkowski.activitylauncher.IconListAdapter.getIcon(String, PackageManager) \nAt IconListAdapter.java:[line 118]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-128\", javax.crypto.Cipher.getInstance(cipherName128).getAlgorithm());\n"
                  },
                  "startLine": 118
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-128\", javax.crypto.Cipher.getInstance(cipherName128).getAlgorithm());\n"
                  },
                  "endLine": 118,
                  "startLine": 117
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method de.szalkowski.activitylauncher.IconListAdapter.getIcon(String, PackageManager) \nAt IconListAdapter.java:[line 124]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-129\", javax.crypto.Cipher.getInstance(cipherName129).getAlgorithm());\n"
                  },
                  "startLine": 124
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-129\", javax.crypto.Cipher.getInstance(cipherName129).getAlgorithm());\n"
                  },
                  "endLine": 124,
                  "startLine": 123
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method de.szalkowski.activitylauncher.IconListAdapter.getIcon(String, PackageManager) \nAt IconListAdapter.java:[line 136]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-130\", javax.crypto.Cipher.getInstance(cipherName130).getAlgorithm());\n"
                  },
                  "startLine": 136
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-130\", javax.crypto.Cipher.getInstance(cipherName130).getAlgorithm());\n"
                  },
                  "endLine": 136,
                  "startLine": 135
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method de.szalkowski.activitylauncher.IconListAdapter.getItem(int) \nAt IconListAdapter.java:[line 99]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-126\", javax.crypto.Cipher.getInstance(cipherName126).getAlgorithm());\n"
                  },
                  "startLine": 99
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-126\", javax.crypto.Cipher.getInstance(cipherName126).getAlgorithm());\n"
                  },
                  "endLine": 99,
                  "startLine": 98
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method de.szalkowski.activitylauncher.IconListAdapter.getItemId(int) \nAt IconListAdapter.java:[line 109]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-127\", javax.crypto.Cipher.getInstance(cipherName127).getAlgorithm());\n"
                  },
                  "startLine": 109
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-127\", javax.crypto.Cipher.getInstance(cipherName127).getAlgorithm());\n"
                  },
                  "endLine": 109,
                  "startLine": 108
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method de.szalkowski.activitylauncher.IconListAdapter.getView(int, View, ViewGroup) \nAt IconListAdapter.java:[line 148]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-131\", javax.crypto.Cipher.getInstance(cipherName131).getAlgorithm());\n"
                  },
                  "startLine": 148
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-131\", javax.crypto.Cipher.getInstance(cipherName131).getAlgorithm());\n"
                  },
                  "endLine": 148,
                  "startLine": 147
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method new de.szalkowski.activitylauncher.IconListAdapter(Context, AsyncProvider$Updater) \nAt IconListAdapter.java:[line 26] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-119\", javax.crypto.Cipher.getInstance(cipherName119).getAlgorithm());\n"
                  },
                  "startLine": 26
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-119\", javax.crypto.Cipher.getInstance(cipherName119).getAlgorithm());\n"
                  },
                  "endLine": 26,
                  "startLine": 25
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method new de.szalkowski.activitylauncher.IconListAdapter(Context, AsyncProvider$Updater) \nAt IconListAdapter.java:[line 42] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-120\", javax.crypto.Cipher.getInstance(cipherName120).getAlgorithm());\n"
                  },
                  "startLine": 42
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-120\", javax.crypto.Cipher.getInstance(cipherName120).getAlgorithm());\n"
                  },
                  "endLine": 42,
                  "startLine": 41
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method new de.szalkowski.activitylauncher.IconListAdapter(Context, AsyncProvider$Updater) \nAt IconListAdapter.java:[line 51] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-121\", javax.crypto.Cipher.getInstance(cipherName121).getAlgorithm());\n"
                  },
                  "startLine": 51
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-121\", javax.crypto.Cipher.getInstance(cipherName121).getAlgorithm());\n"
                  },
                  "endLine": 51,
                  "startLine": 50
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method new de.szalkowski.activitylauncher.IconListAdapter(Context, AsyncProvider$Updater) \nAt IconListAdapter.java:[line 59] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-122\", javax.crypto.Cipher.getInstance(cipherName122).getAlgorithm());\n"
                  },
                  "startLine": 59
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\ttry{\n\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-122\", javax.crypto.Cipher.getInstance(cipherName122).getAlgorithm());\n"
                  },
                  "endLine": 59,
                  "startLine": 58
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method new de.szalkowski.activitylauncher.IconListAdapter(Context, AsyncProvider$Updater) \nAt IconListAdapter.java:[line 66] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-123\", javax.crypto.Cipher.getInstance(cipherName123).getAlgorithm());\n"
                  },
                  "startLine": 66
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-123\", javax.crypto.Cipher.getInstance(cipherName123).getAlgorithm());\n"
                  },
                  "endLine": 66,
                  "startLine": 65
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method new de.szalkowski.activitylauncher.IconListAdapter(Context, AsyncProvider$Updater) \nAt IconListAdapter.java:[line 75] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-124\", javax.crypto.Cipher.getInstance(cipherName124).getAlgorithm());\n"
                  },
                  "startLine": 75
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-124\", javax.crypto.Cipher.getInstance(cipherName124).getAlgorithm());\n"
                  },
                  "endLine": 75,
                  "startLine": 74
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method de.szalkowski.activitylauncher.IconListAdapter.getCount() \nAt IconListAdapter.java:[line 89] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-125\", javax.crypto.Cipher.getInstance(cipherName125).getAlgorithm());\n"
                  },
                  "startLine": 89
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-125\", javax.crypto.Cipher.getInstance(cipherName125).getAlgorithm());\n"
                  },
                  "endLine": 89,
                  "startLine": 88
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method de.szalkowski.activitylauncher.IconListAdapter.getIcon(String, PackageManager) \nAt IconListAdapter.java:[line 118] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-128\", javax.crypto.Cipher.getInstance(cipherName128).getAlgorithm());\n"
                  },
                  "startLine": 118
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-128\", javax.crypto.Cipher.getInstance(cipherName128).getAlgorithm());\n"
                  },
                  "endLine": 118,
                  "startLine": 117
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method de.szalkowski.activitylauncher.IconListAdapter.getIcon(String, PackageManager) \nAt IconListAdapter.java:[line 124] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-129\", javax.crypto.Cipher.getInstance(cipherName129).getAlgorithm());\n"
                  },
                  "startLine": 124
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-129\", javax.crypto.Cipher.getInstance(cipherName129).getAlgorithm());\n"
                  },
                  "endLine": 124,
                  "startLine": 123
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method de.szalkowski.activitylauncher.IconListAdapter.getIcon(String, PackageManager) \nAt IconListAdapter.java:[line 136] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-130\", javax.crypto.Cipher.getInstance(cipherName130).getAlgorithm());\n"
                  },
                  "startLine": 136
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-130\", javax.crypto.Cipher.getInstance(cipherName130).getAlgorithm());\n"
                  },
                  "endLine": 136,
                  "startLine": 135
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method de.szalkowski.activitylauncher.IconListAdapter.getItem(int) \nAt IconListAdapter.java:[line 99] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-126\", javax.crypto.Cipher.getInstance(cipherName126).getAlgorithm());\n"
                  },
                  "startLine": 99
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-126\", javax.crypto.Cipher.getInstance(cipherName126).getAlgorithm());\n"
                  },
                  "endLine": 99,
                  "startLine": 98
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method de.szalkowski.activitylauncher.IconListAdapter.getItemId(int) \nAt IconListAdapter.java:[line 109] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-127\", javax.crypto.Cipher.getInstance(cipherName127).getAlgorithm());\n"
                  },
                  "startLine": 109
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-127\", javax.crypto.Cipher.getInstance(cipherName127).getAlgorithm());\n"
                  },
                  "endLine": 109,
                  "startLine": 108
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method de.szalkowski.activitylauncher.IconListAdapter.getView(int, View, ViewGroup) \nAt IconListAdapter.java:[line 148] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-131\", javax.crypto.Cipher.getInstance(cipherName131).getAlgorithm());\n"
                  },
                  "startLine": 148
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-131\", javax.crypto.Cipher.getInstance(cipherName131).getAlgorithm());\n"
                  },
                  "endLine": 148,
                  "startLine": 147
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method new de.szalkowski.activitylauncher.IconListAdapter(Context, AsyncProvider$Updater) \nAt IconListAdapter.java:[line 26]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-119\", javax.crypto.Cipher.getInstance(cipherName119).getAlgorithm());\n"
                  },
                  "startLine": 26
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-119\", javax.crypto.Cipher.getInstance(cipherName119).getAlgorithm());\n"
                  },
                  "endLine": 26,
                  "startLine": 25
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method new de.szalkowski.activitylauncher.IconListAdapter(Context, AsyncProvider$Updater) \nAt IconListAdapter.java:[line 42]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-120\", javax.crypto.Cipher.getInstance(cipherName120).getAlgorithm());\n"
                  },
                  "startLine": 42
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-120\", javax.crypto.Cipher.getInstance(cipherName120).getAlgorithm());\n"
                  },
                  "endLine": 42,
                  "startLine": 41
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method new de.szalkowski.activitylauncher.IconListAdapter(Context, AsyncProvider$Updater) \nAt IconListAdapter.java:[line 51]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-121\", javax.crypto.Cipher.getInstance(cipherName121).getAlgorithm());\n"
                  },
                  "startLine": 51
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-121\", javax.crypto.Cipher.getInstance(cipherName121).getAlgorithm());\n"
                  },
                  "endLine": 51,
                  "startLine": 50
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method new de.szalkowski.activitylauncher.IconListAdapter(Context, AsyncProvider$Updater) \nAt IconListAdapter.java:[line 59]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-122\", javax.crypto.Cipher.getInstance(cipherName122).getAlgorithm());\n"
                  },
                  "startLine": 59
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\ttry{\n\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-122\", javax.crypto.Cipher.getInstance(cipherName122).getAlgorithm());\n"
                  },
                  "endLine": 59,
                  "startLine": 58
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method new de.szalkowski.activitylauncher.IconListAdapter(Context, AsyncProvider$Updater) \nAt IconListAdapter.java:[line 66]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-123\", javax.crypto.Cipher.getInstance(cipherName123).getAlgorithm());\n"
                  },
                  "startLine": 66
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-123\", javax.crypto.Cipher.getInstance(cipherName123).getAlgorithm());\n"
                  },
                  "endLine": 66,
                  "startLine": 65
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method new de.szalkowski.activitylauncher.IconListAdapter(Context, AsyncProvider$Updater) \nAt IconListAdapter.java:[line 75]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-124\", javax.crypto.Cipher.getInstance(cipherName124).getAlgorithm());\n"
                  },
                  "startLine": 75
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-124\", javax.crypto.Cipher.getInstance(cipherName124).getAlgorithm());\n"
                  },
                  "endLine": 75,
                  "startLine": 74
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method de.szalkowski.activitylauncher.IconListAdapter.getCount() \nAt IconListAdapter.java:[line 89]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-125\", javax.crypto.Cipher.getInstance(cipherName125).getAlgorithm());\n"
                  },
                  "startLine": 89
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-125\", javax.crypto.Cipher.getInstance(cipherName125).getAlgorithm());\n"
                  },
                  "endLine": 89,
                  "startLine": 88
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method de.szalkowski.activitylauncher.IconListAdapter.getIcon(String, PackageManager) \nAt IconListAdapter.java:[line 118]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-128\", javax.crypto.Cipher.getInstance(cipherName128).getAlgorithm());\n"
                  },
                  "startLine": 118
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-128\", javax.crypto.Cipher.getInstance(cipherName128).getAlgorithm());\n"
                  },
                  "endLine": 118,
                  "startLine": 117
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method de.szalkowski.activitylauncher.IconListAdapter.getIcon(String, PackageManager) \nAt IconListAdapter.java:[line 124]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-129\", javax.crypto.Cipher.getInstance(cipherName129).getAlgorithm());\n"
                  },
                  "startLine": 124
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-129\", javax.crypto.Cipher.getInstance(cipherName129).getAlgorithm());\n"
                  },
                  "endLine": 124,
                  "startLine": 123
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method de.szalkowski.activitylauncher.IconListAdapter.getIcon(String, PackageManager) \nAt IconListAdapter.java:[line 136]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-130\", javax.crypto.Cipher.getInstance(cipherName130).getAlgorithm());\n"
                  },
                  "startLine": 136
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-130\", javax.crypto.Cipher.getInstance(cipherName130).getAlgorithm());\n"
                  },
                  "endLine": 136,
                  "startLine": 135
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method de.szalkowski.activitylauncher.IconListAdapter.getItem(int) \nAt IconListAdapter.java:[line 99]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-126\", javax.crypto.Cipher.getInstance(cipherName126).getAlgorithm());\n"
                  },
                  "startLine": 99
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-126\", javax.crypto.Cipher.getInstance(cipherName126).getAlgorithm());\n"
                  },
                  "endLine": 99,
                  "startLine": 98
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method de.szalkowski.activitylauncher.IconListAdapter.getItemId(int) \nAt IconListAdapter.java:[line 109]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-127\", javax.crypto.Cipher.getInstance(cipherName127).getAlgorithm());\n"
                  },
                  "startLine": 109
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-127\", javax.crypto.Cipher.getInstance(cipherName127).getAlgorithm());\n"
                  },
                  "endLine": 109,
                  "startLine": 108
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt IconListAdapter.java:[lines 23-156] \nIn class de.szalkowski.activitylauncher.IconListAdapter \nIn method de.szalkowski.activitylauncher.IconListAdapter.getView(int, View, ViewGroup) \nAt IconListAdapter.java:[line 148]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-131\", javax.crypto.Cipher.getInstance(cipherName131).getAlgorithm());\n"
                  },
                  "startLine": 148
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-131\", javax.crypto.Cipher.getInstance(cipherName131).getAlgorithm());\n"
                  },
                  "endLine": 148,
                  "startLine": 147
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt IconListAsyncProvider.java:[lines 5-23] \nIn class de.szalkowski.activitylauncher.IconListAsyncProvider \nIn method new de.szalkowski.activitylauncher.IconListAsyncProvider(Context, AsyncProvider$Listener) \nAt IconListAsyncProvider.java:[line 10]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-11\", javax.crypto.Cipher.getInstance(cipherName11).getAlgorithm());\n"
                  },
                  "startLine": 10
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-11\", javax.crypto.Cipher.getInstance(cipherName11).getAlgorithm());\n"
                  },
                  "endLine": 10,
                  "startLine": 9
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt IconListAsyncProvider.java:[lines 5-23] \nIn class de.szalkowski.activitylauncher.IconListAsyncProvider \nIn method de.szalkowski.activitylauncher.IconListAsyncProvider.run(AsyncProvider$Updater) \nAt IconListAsyncProvider.java:[line 19]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-12\", javax.crypto.Cipher.getInstance(cipherName12).getAlgorithm());\n"
                  },
                  "startLine": 19
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-12\", javax.crypto.Cipher.getInstance(cipherName12).getAlgorithm());\n"
                  },
                  "endLine": 19,
                  "startLine": 18
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt IconListAsyncProvider.java:[lines 5-23] \nIn class de.szalkowski.activitylauncher.IconListAsyncProvider \nIn method new de.szalkowski.activitylauncher.IconListAsyncProvider(Context, AsyncProvider$Listener) \nAt IconListAsyncProvider.java:[line 10] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-11\", javax.crypto.Cipher.getInstance(cipherName11).getAlgorithm());\n"
                  },
                  "startLine": 10
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-11\", javax.crypto.Cipher.getInstance(cipherName11).getAlgorithm());\n"
                  },
                  "endLine": 10,
                  "startLine": 9
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt IconListAsyncProvider.java:[lines 5-23] \nIn class de.szalkowski.activitylauncher.IconListAsyncProvider \nIn method de.szalkowski.activitylauncher.IconListAsyncProvider.run(AsyncProvider$Updater) \nAt IconListAsyncProvider.java:[line 19] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-12\", javax.crypto.Cipher.getInstance(cipherName12).getAlgorithm());\n"
                  },
                  "startLine": 19
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-12\", javax.crypto.Cipher.getInstance(cipherName12).getAlgorithm());\n"
                  },
                  "endLine": 19,
                  "startLine": 18
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt IconListAsyncProvider.java:[lines 5-23] \nIn class de.szalkowski.activitylauncher.IconListAsyncProvider \nIn method new de.szalkowski.activitylauncher.IconListAsyncProvider(Context, AsyncProvider$Listener) \nAt IconListAsyncProvider.java:[line 10]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-11\", javax.crypto.Cipher.getInstance(cipherName11).getAlgorithm());\n"
                  },
                  "startLine": 10
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-11\", javax.crypto.Cipher.getInstance(cipherName11).getAlgorithm());\n"
                  },
                  "endLine": 10,
                  "startLine": 9
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt IconListAsyncProvider.java:[lines 5-23] \nIn class de.szalkowski.activitylauncher.IconListAsyncProvider \nIn method de.szalkowski.activitylauncher.IconListAsyncProvider.run(AsyncProvider$Updater) \nAt IconListAsyncProvider.java:[line 19]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-12\", javax.crypto.Cipher.getInstance(cipherName12).getAlgorithm());\n"
                  },
                  "startLine": 19
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconListAsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-12\", javax.crypto.Cipher.getInstance(cipherName12).getAlgorithm());\n"
                  },
                  "endLine": 19,
                  "startLine": 18
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt IconPickerDialogFragment.java:[lines 18-122] \nIn class de.szalkowski.activitylauncher.IconPickerDialogFragment \nIn method de.szalkowski.activitylauncher.IconPickerDialogFragment.attachIconPickerListener(IconPickerDialogFragment$IconPickerListener) \nAt IconPickerDialogFragment.java:[line 42]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-38\", javax.crypto.Cipher.getInstance(cipherName38).getAlgorithm());\n"
                  },
                  "startLine": 42
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-38\", javax.crypto.Cipher.getInstance(cipherName38).getAlgorithm());\n"
                  },
                  "endLine": 42,
                  "startLine": 41
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt IconPickerDialogFragment.java:[lines 18-122] \nIn class de.szalkowski.activitylauncher.IconPickerDialogFragment \nIn method de.szalkowski.activitylauncher.IconPickerDialogFragment.onAttach(Activity) \nAt IconPickerDialogFragment.java:[line 31]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-37\", javax.crypto.Cipher.getInstance(cipherName37).getAlgorithm());\n"
                  },
                  "startLine": 31
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-37\", javax.crypto.Cipher.getInstance(cipherName37).getAlgorithm());\n"
                  },
                  "endLine": 31,
                  "startLine": 30
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt IconPickerDialogFragment.java:[lines 18-122] \nIn class de.szalkowski.activitylauncher.IconPickerDialogFragment \nIn method de.szalkowski.activitylauncher.IconPickerDialogFragment.onCreateDialog(Bundle) \nAt IconPickerDialogFragment.java:[line 53]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-39\", javax.crypto.Cipher.getInstance(cipherName39).getAlgorithm());\n"
                  },
                  "startLine": 53
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-39\", javax.crypto.Cipher.getInstance(cipherName39).getAlgorithm());\n"
                  },
                  "endLine": 53,
                  "startLine": 52
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt IconPickerDialogFragment.java:[lines 18-122] \nIn class de.szalkowski.activitylauncher.IconPickerDialogFragment \nIn method de.szalkowski.activitylauncher.IconPickerDialogFragment.onProviderFininshed(AsyncProvider, IconListAdapter) \nAt IconPickerDialogFragment.java:[line 104]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-43\", javax.crypto.Cipher.getInstance(cipherName43).getAlgorithm());\n"
                  },
                  "startLine": 104
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-43\", javax.crypto.Cipher.getInstance(cipherName43).getAlgorithm());\n"
                  },
                  "endLine": 104,
                  "startLine": 103
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt IconPickerDialogFragment.java:[lines 18-122] \nIn class de.szalkowski.activitylauncher.IconPickerDialogFragment \nIn method de.szalkowski.activitylauncher.IconPickerDialogFragment.onProviderFininshed(AsyncProvider, IconListAdapter) \nAt IconPickerDialogFragment.java:[line 110]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-44\", javax.crypto.Cipher.getInstance(cipherName44).getAlgorithm());\n"
                  },
                  "startLine": 110
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-44\", javax.crypto.Cipher.getInstance(cipherName44).getAlgorithm());\n"
                  },
                  "endLine": 110,
                  "startLine": 109
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt IconPickerDialogFragment.java:[lines 18-122] \nIn class de.szalkowski.activitylauncher.IconPickerDialogFragment \nIn method de.szalkowski.activitylauncher.IconPickerDialogFragment.onProviderFininshed(AsyncProvider, IconListAdapter) \nAt IconPickerDialogFragment.java:[line 117]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-45\", javax.crypto.Cipher.getInstance(cipherName45).getAlgorithm());\n"
                  },
                  "startLine": 117
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-45\", javax.crypto.Cipher.getInstance(cipherName45).getAlgorithm());\n"
                  },
                  "endLine": 117,
                  "startLine": 116
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt IconPickerDialogFragment.java:[lines 18-122] \nIn class de.szalkowski.activitylauncher.IconPickerDialogFragment \nIn method de.szalkowski.activitylauncher.IconPickerDialogFragment.attachIconPickerListener(IconPickerDialogFragment$IconPickerListener) \nAt IconPickerDialogFragment.java:[line 42] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-38\", javax.crypto.Cipher.getInstance(cipherName38).getAlgorithm());\n"
                  },
                  "startLine": 42
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-38\", javax.crypto.Cipher.getInstance(cipherName38).getAlgorithm());\n"
                  },
                  "endLine": 42,
                  "startLine": 41
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt IconPickerDialogFragment.java:[lines 18-122] \nIn class de.szalkowski.activitylauncher.IconPickerDialogFragment \nIn method de.szalkowski.activitylauncher.IconPickerDialogFragment.onAttach(Activity) \nAt IconPickerDialogFragment.java:[line 31] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-37\", javax.crypto.Cipher.getInstance(cipherName37).getAlgorithm());\n"
                  },
                  "startLine": 31
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-37\", javax.crypto.Cipher.getInstance(cipherName37).getAlgorithm());\n"
                  },
                  "endLine": 31,
                  "startLine": 30
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt IconPickerDialogFragment.java:[lines 18-122] \nIn class de.szalkowski.activitylauncher.IconPickerDialogFragment \nIn method de.szalkowski.activitylauncher.IconPickerDialogFragment.onCreateDialog(Bundle) \nAt IconPickerDialogFragment.java:[line 53] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-39\", javax.crypto.Cipher.getInstance(cipherName39).getAlgorithm());\n"
                  },
                  "startLine": 53
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-39\", javax.crypto.Cipher.getInstance(cipherName39).getAlgorithm());\n"
                  },
                  "endLine": 53,
                  "startLine": 52
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt IconPickerDialogFragment.java:[lines 18-122] \nIn class de.szalkowski.activitylauncher.IconPickerDialogFragment \nIn method de.szalkowski.activitylauncher.IconPickerDialogFragment.onProviderFininshed(AsyncProvider, IconListAdapter) \nAt IconPickerDialogFragment.java:[line 104] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-43\", javax.crypto.Cipher.getInstance(cipherName43).getAlgorithm());\n"
                  },
                  "startLine": 104
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-43\", javax.crypto.Cipher.getInstance(cipherName43).getAlgorithm());\n"
                  },
                  "endLine": 104,
                  "startLine": 103
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt IconPickerDialogFragment.java:[lines 18-122] \nIn class de.szalkowski.activitylauncher.IconPickerDialogFragment \nIn method de.szalkowski.activitylauncher.IconPickerDialogFragment.onProviderFininshed(AsyncProvider, IconListAdapter) \nAt IconPickerDialogFragment.java:[line 110] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-44\", javax.crypto.Cipher.getInstance(cipherName44).getAlgorithm());\n"
                  },
                  "startLine": 110
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-44\", javax.crypto.Cipher.getInstance(cipherName44).getAlgorithm());\n"
                  },
                  "endLine": 110,
                  "startLine": 109
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt IconPickerDialogFragment.java:[lines 18-122] \nIn class de.szalkowski.activitylauncher.IconPickerDialogFragment \nIn method de.szalkowski.activitylauncher.IconPickerDialogFragment.onProviderFininshed(AsyncProvider, IconListAdapter) \nAt IconPickerDialogFragment.java:[line 117] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-45\", javax.crypto.Cipher.getInstance(cipherName45).getAlgorithm());\n"
                  },
                  "startLine": 117
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-45\", javax.crypto.Cipher.getInstance(cipherName45).getAlgorithm());\n"
                  },
                  "endLine": 117,
                  "startLine": 116
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt IconPickerDialogFragment.java:[lines 18-122] \nIn class de.szalkowski.activitylauncher.IconPickerDialogFragment \nIn method de.szalkowski.activitylauncher.IconPickerDialogFragment.attachIconPickerListener(IconPickerDialogFragment$IconPickerListener) \nAt IconPickerDialogFragment.java:[line 42]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-38\", javax.crypto.Cipher.getInstance(cipherName38).getAlgorithm());\n"
                  },
                  "startLine": 42
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-38\", javax.crypto.Cipher.getInstance(cipherName38).getAlgorithm());\n"
                  },
                  "endLine": 42,
                  "startLine": 41
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt IconPickerDialogFragment.java:[lines 18-122] \nIn class de.szalkowski.activitylauncher.IconPickerDialogFragment \nIn method de.szalkowski.activitylauncher.IconPickerDialogFragment.onAttach(Activity) \nAt IconPickerDialogFragment.java:[line 31]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-37\", javax.crypto.Cipher.getInstance(cipherName37).getAlgorithm());\n"
                  },
                  "startLine": 31
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-37\", javax.crypto.Cipher.getInstance(cipherName37).getAlgorithm());\n"
                  },
                  "endLine": 31,
                  "startLine": 30
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt IconPickerDialogFragment.java:[lines 18-122] \nIn class de.szalkowski.activitylauncher.IconPickerDialogFragment \nIn method de.szalkowski.activitylauncher.IconPickerDialogFragment.onCreateDialog(Bundle) \nAt IconPickerDialogFragment.java:[line 53]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-39\", javax.crypto.Cipher.getInstance(cipherName39).getAlgorithm());\n"
                  },
                  "startLine": 53
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-39\", javax.crypto.Cipher.getInstance(cipherName39).getAlgorithm());\n"
                  },
                  "endLine": 53,
                  "startLine": 52
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt IconPickerDialogFragment.java:[lines 18-122] \nIn class de.szalkowski.activitylauncher.IconPickerDialogFragment \nIn method de.szalkowski.activitylauncher.IconPickerDialogFragment.onProviderFininshed(AsyncProvider, IconListAdapter) \nAt IconPickerDialogFragment.java:[line 104]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-43\", javax.crypto.Cipher.getInstance(cipherName43).getAlgorithm());\n"
                  },
                  "startLine": 104
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-43\", javax.crypto.Cipher.getInstance(cipherName43).getAlgorithm());\n"
                  },
                  "endLine": 104,
                  "startLine": 103
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt IconPickerDialogFragment.java:[lines 18-122] \nIn class de.szalkowski.activitylauncher.IconPickerDialogFragment \nIn method de.szalkowski.activitylauncher.IconPickerDialogFragment.onProviderFininshed(AsyncProvider, IconListAdapter) \nAt IconPickerDialogFragment.java:[line 110]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-44\", javax.crypto.Cipher.getInstance(cipherName44).getAlgorithm());\n"
                  },
                  "startLine": 110
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-44\", javax.crypto.Cipher.getInstance(cipherName44).getAlgorithm());\n"
                  },
                  "endLine": 110,
                  "startLine": 109
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt IconPickerDialogFragment.java:[lines 18-122] \nIn class de.szalkowski.activitylauncher.IconPickerDialogFragment \nIn method de.szalkowski.activitylauncher.IconPickerDialogFragment.onProviderFininshed(AsyncProvider, IconListAdapter) \nAt IconPickerDialogFragment.java:[line 117]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-45\", javax.crypto.Cipher.getInstance(cipherName45).getAlgorithm());\n"
                  },
                  "startLine": 117
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-45\", javax.crypto.Cipher.getInstance(cipherName45).getAlgorithm());\n"
                  },
                  "endLine": 117,
                  "startLine": 116
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt IconPickerDialogFragment.java:[lines 61-79] \nIn class de.szalkowski.activitylauncher.IconPickerDialogFragment$1 \nIn method de.szalkowski.activitylauncher.IconPickerDialogFragment$1.onItemClick(AdapterView, View, int, long) \nAt IconPickerDialogFragment.java:[line 67]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-40\", javax.crypto.Cipher.getInstance(cipherName40).getAlgorithm());\n"
                  },
                  "startLine": 67
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-40\", javax.crypto.Cipher.getInstance(cipherName40).getAlgorithm());\n"
                  },
                  "endLine": 67,
                  "startLine": 66
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt IconPickerDialogFragment.java:[lines 61-79] \nIn class de.szalkowski.activitylauncher.IconPickerDialogFragment$1 \nIn method de.szalkowski.activitylauncher.IconPickerDialogFragment$1.onItemClick(AdapterView, View, int, long) \nAt IconPickerDialogFragment.java:[line 73]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-41\", javax.crypto.Cipher.getInstance(cipherName41).getAlgorithm());\n"
                  },
                  "startLine": 73
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\ttry{\n\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-41\", javax.crypto.Cipher.getInstance(cipherName41).getAlgorithm());\n"
                  },
                  "endLine": 73,
                  "startLine": 72
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt IconPickerDialogFragment.java:[lines 61-79] \nIn class de.szalkowski.activitylauncher.IconPickerDialogFragment$1 \nIn method de.szalkowski.activitylauncher.IconPickerDialogFragment$1.onItemClick(AdapterView, View, int, long) \nAt IconPickerDialogFragment.java:[line 67] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-40\", javax.crypto.Cipher.getInstance(cipherName40).getAlgorithm());\n"
                  },
                  "startLine": 67
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-40\", javax.crypto.Cipher.getInstance(cipherName40).getAlgorithm());\n"
                  },
                  "endLine": 67,
                  "startLine": 66
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt IconPickerDialogFragment.java:[lines 61-79] \nIn class de.szalkowski.activitylauncher.IconPickerDialogFragment$1 \nIn method de.szalkowski.activitylauncher.IconPickerDialogFragment$1.onItemClick(AdapterView, View, int, long) \nAt IconPickerDialogFragment.java:[line 73] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-41\", javax.crypto.Cipher.getInstance(cipherName41).getAlgorithm());\n"
                  },
                  "startLine": 73
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\ttry{\n\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-41\", javax.crypto.Cipher.getInstance(cipherName41).getAlgorithm());\n"
                  },
                  "endLine": 73,
                  "startLine": 72
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt IconPickerDialogFragment.java:[lines 61-79] \nIn class de.szalkowski.activitylauncher.IconPickerDialogFragment$1 \nIn method de.szalkowski.activitylauncher.IconPickerDialogFragment$1.onItemClick(AdapterView, View, int, long) \nAt IconPickerDialogFragment.java:[line 67]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-40\", javax.crypto.Cipher.getInstance(cipherName40).getAlgorithm());\n"
                  },
                  "startLine": 67
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-40\", javax.crypto.Cipher.getInstance(cipherName40).getAlgorithm());\n"
                  },
                  "endLine": 67,
                  "startLine": 66
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt IconPickerDialogFragment.java:[lines 61-79] \nIn class de.szalkowski.activitylauncher.IconPickerDialogFragment$1 \nIn method de.szalkowski.activitylauncher.IconPickerDialogFragment$1.onItemClick(AdapterView, View, int, long) \nAt IconPickerDialogFragment.java:[line 73]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-41\", javax.crypto.Cipher.getInstance(cipherName41).getAlgorithm());\n"
                  },
                  "startLine": 73
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\ttry{\n\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-41\", javax.crypto.Cipher.getInstance(cipherName41).getAlgorithm());\n"
                  },
                  "endLine": 73,
                  "startLine": 72
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt IconPickerDialogFragment.java:[lines 84-93] \nIn class de.szalkowski.activitylauncher.IconPickerDialogFragment$2 \nIn method de.szalkowski.activitylauncher.IconPickerDialogFragment$2.onClick(DialogInterface, int) \nAt IconPickerDialogFragment.java:[line 89]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-42\", javax.crypto.Cipher.getInstance(cipherName42).getAlgorithm());\n"
                  },
                  "startLine": 89
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-42\", javax.crypto.Cipher.getInstance(cipherName42).getAlgorithm());\n"
                  },
                  "endLine": 89,
                  "startLine": 88
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt IconPickerDialogFragment.java:[lines 84-93] \nIn class de.szalkowski.activitylauncher.IconPickerDialogFragment$2 \nIn method de.szalkowski.activitylauncher.IconPickerDialogFragment$2.onClick(DialogInterface, int) \nAt IconPickerDialogFragment.java:[line 89] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-42\", javax.crypto.Cipher.getInstance(cipherName42).getAlgorithm());\n"
                  },
                  "startLine": 89
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-42\", javax.crypto.Cipher.getInstance(cipherName42).getAlgorithm());\n"
                  },
                  "endLine": 89,
                  "startLine": 88
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt IconPickerDialogFragment.java:[lines 84-93] \nIn class de.szalkowski.activitylauncher.IconPickerDialogFragment$2 \nIn method de.szalkowski.activitylauncher.IconPickerDialogFragment$2.onClick(DialogInterface, int) \nAt IconPickerDialogFragment.java:[line 89]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-42\", javax.crypto.Cipher.getInstance(cipherName42).getAlgorithm());\n"
                  },
                  "startLine": 89
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-42\", javax.crypto.Cipher.getInstance(cipherName42).getAlgorithm());\n"
                  },
                  "endLine": 89,
                  "startLine": 88
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt IconPickerFragment.java:[lines 14-80] \nIn class de.szalkowski.activitylauncher.IconPickerFragment \nIn method de.szalkowski.activitylauncher.IconPickerFragment.onAttach(Activity) \nAt IconPickerFragment.java:[line 49]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-164\", javax.crypto.Cipher.getInstance(cipherName164).getAlgorithm());\n"
                  },
                  "startLine": 49
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-164\", javax.crypto.Cipher.getInstance(cipherName164).getAlgorithm());\n"
                  },
                  "endLine": 49,
                  "startLine": 48
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt IconPickerFragment.java:[lines 14-80] \nIn class de.szalkowski.activitylauncher.IconPickerFragment \nIn method de.szalkowski.activitylauncher.IconPickerFragment.onCreateView(LayoutInflater, ViewGroup, Bundle) \nAt IconPickerFragment.java:[line 22]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-162\", javax.crypto.Cipher.getInstance(cipherName162).getAlgorithm());\n"
                  },
                  "startLine": 22
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-162\", javax.crypto.Cipher.getInstance(cipherName162).getAlgorithm());\n"
                  },
                  "endLine": 22,
                  "startLine": 21
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt IconPickerFragment.java:[lines 14-80] \nIn class de.szalkowski.activitylauncher.IconPickerFragment \nIn method de.szalkowski.activitylauncher.IconPickerFragment.onProviderFininshed(AsyncProvider, IconListAdapter) \nAt IconPickerFragment.java:[line 62]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-165\", javax.crypto.Cipher.getInstance(cipherName165).getAlgorithm());\n"
                  },
                  "startLine": 62
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-165\", javax.crypto.Cipher.getInstance(cipherName165).getAlgorithm());\n"
                  },
                  "endLine": 62,
                  "startLine": 61
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt IconPickerFragment.java:[lines 14-80] \nIn class de.szalkowski.activitylauncher.IconPickerFragment \nIn method de.szalkowski.activitylauncher.IconPickerFragment.onProviderFininshed(AsyncProvider, IconListAdapter) \nAt IconPickerFragment.java:[line 68]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-166\", javax.crypto.Cipher.getInstance(cipherName166).getAlgorithm());\n"
                  },
                  "startLine": 68
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-166\", javax.crypto.Cipher.getInstance(cipherName166).getAlgorithm());\n"
                  },
                  "endLine": 68,
                  "startLine": 67
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt IconPickerFragment.java:[lines 14-80] \nIn class de.szalkowski.activitylauncher.IconPickerFragment \nIn method de.szalkowski.activitylauncher.IconPickerFragment.onProviderFininshed(AsyncProvider, IconListAdapter) \nAt IconPickerFragment.java:[line 75]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-167\", javax.crypto.Cipher.getInstance(cipherName167).getAlgorithm());\n"
                  },
                  "startLine": 75
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-167\", javax.crypto.Cipher.getInstance(cipherName167).getAlgorithm());\n"
                  },
                  "endLine": 75,
                  "startLine": 74
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt IconPickerFragment.java:[lines 14-80] \nIn class de.szalkowski.activitylauncher.IconPickerFragment \nIn method de.szalkowski.activitylauncher.IconPickerFragment.onAttach(Activity) \nAt IconPickerFragment.java:[line 49] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-164\", javax.crypto.Cipher.getInstance(cipherName164).getAlgorithm());\n"
                  },
                  "startLine": 49
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-164\", javax.crypto.Cipher.getInstance(cipherName164).getAlgorithm());\n"
                  },
                  "endLine": 49,
                  "startLine": 48
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt IconPickerFragment.java:[lines 14-80] \nIn class de.szalkowski.activitylauncher.IconPickerFragment \nIn method de.szalkowski.activitylauncher.IconPickerFragment.onCreateView(LayoutInflater, ViewGroup, Bundle) \nAt IconPickerFragment.java:[line 22] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-162\", javax.crypto.Cipher.getInstance(cipherName162).getAlgorithm());\n"
                  },
                  "startLine": 22
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-162\", javax.crypto.Cipher.getInstance(cipherName162).getAlgorithm());\n"
                  },
                  "endLine": 22,
                  "startLine": 21
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt IconPickerFragment.java:[lines 14-80] \nIn class de.szalkowski.activitylauncher.IconPickerFragment \nIn method de.szalkowski.activitylauncher.IconPickerFragment.onProviderFininshed(AsyncProvider, IconListAdapter) \nAt IconPickerFragment.java:[line 62] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-165\", javax.crypto.Cipher.getInstance(cipherName165).getAlgorithm());\n"
                  },
                  "startLine": 62
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-165\", javax.crypto.Cipher.getInstance(cipherName165).getAlgorithm());\n"
                  },
                  "endLine": 62,
                  "startLine": 61
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt IconPickerFragment.java:[lines 14-80] \nIn class de.szalkowski.activitylauncher.IconPickerFragment \nIn method de.szalkowski.activitylauncher.IconPickerFragment.onProviderFininshed(AsyncProvider, IconListAdapter) \nAt IconPickerFragment.java:[line 68] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-166\", javax.crypto.Cipher.getInstance(cipherName166).getAlgorithm());\n"
                  },
                  "startLine": 68
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-166\", javax.crypto.Cipher.getInstance(cipherName166).getAlgorithm());\n"
                  },
                  "endLine": 68,
                  "startLine": 67
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt IconPickerFragment.java:[lines 14-80] \nIn class de.szalkowski.activitylauncher.IconPickerFragment \nIn method de.szalkowski.activitylauncher.IconPickerFragment.onProviderFininshed(AsyncProvider, IconListAdapter) \nAt IconPickerFragment.java:[line 75] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-167\", javax.crypto.Cipher.getInstance(cipherName167).getAlgorithm());\n"
                  },
                  "startLine": 75
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-167\", javax.crypto.Cipher.getInstance(cipherName167).getAlgorithm());\n"
                  },
                  "endLine": 75,
                  "startLine": 74
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt IconPickerFragment.java:[lines 14-80] \nIn class de.szalkowski.activitylauncher.IconPickerFragment \nIn method de.szalkowski.activitylauncher.IconPickerFragment.onAttach(Activity) \nAt IconPickerFragment.java:[line 49]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-164\", javax.crypto.Cipher.getInstance(cipherName164).getAlgorithm());\n"
                  },
                  "startLine": 49
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-164\", javax.crypto.Cipher.getInstance(cipherName164).getAlgorithm());\n"
                  },
                  "endLine": 49,
                  "startLine": 48
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt IconPickerFragment.java:[lines 14-80] \nIn class de.szalkowski.activitylauncher.IconPickerFragment \nIn method de.szalkowski.activitylauncher.IconPickerFragment.onCreateView(LayoutInflater, ViewGroup, Bundle) \nAt IconPickerFragment.java:[line 22]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-162\", javax.crypto.Cipher.getInstance(cipherName162).getAlgorithm());\n"
                  },
                  "startLine": 22
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-162\", javax.crypto.Cipher.getInstance(cipherName162).getAlgorithm());\n"
                  },
                  "endLine": 22,
                  "startLine": 21
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt IconPickerFragment.java:[lines 14-80] \nIn class de.szalkowski.activitylauncher.IconPickerFragment \nIn method de.szalkowski.activitylauncher.IconPickerFragment.onProviderFininshed(AsyncProvider, IconListAdapter) \nAt IconPickerFragment.java:[line 62]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-165\", javax.crypto.Cipher.getInstance(cipherName165).getAlgorithm());\n"
                  },
                  "startLine": 62
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-165\", javax.crypto.Cipher.getInstance(cipherName165).getAlgorithm());\n"
                  },
                  "endLine": 62,
                  "startLine": 61
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt IconPickerFragment.java:[lines 14-80] \nIn class de.szalkowski.activitylauncher.IconPickerFragment \nIn method de.szalkowski.activitylauncher.IconPickerFragment.onProviderFininshed(AsyncProvider, IconListAdapter) \nAt IconPickerFragment.java:[line 68]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-166\", javax.crypto.Cipher.getInstance(cipherName166).getAlgorithm());\n"
                  },
                  "startLine": 68
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-166\", javax.crypto.Cipher.getInstance(cipherName166).getAlgorithm());\n"
                  },
                  "endLine": 68,
                  "startLine": 67
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt IconPickerFragment.java:[lines 14-80] \nIn class de.szalkowski.activitylauncher.IconPickerFragment \nIn method de.szalkowski.activitylauncher.IconPickerFragment.onProviderFininshed(AsyncProvider, IconListAdapter) \nAt IconPickerFragment.java:[line 75]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-167\", javax.crypto.Cipher.getInstance(cipherName167).getAlgorithm());\n"
                  },
                  "startLine": 75
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-167\", javax.crypto.Cipher.getInstance(cipherName167).getAlgorithm());\n"
                  },
                  "endLine": 75,
                  "startLine": 74
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt IconPickerFragment.java:[lines 28-38] \nIn class de.szalkowski.activitylauncher.IconPickerFragment$1 \nIn method de.szalkowski.activitylauncher.IconPickerFragment$1.onItemClick(AdapterView, View, int, long) \nAt IconPickerFragment.java:[line 34]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-163\", javax.crypto.Cipher.getInstance(cipherName163).getAlgorithm());\n"
                  },
                  "startLine": 34
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-163\", javax.crypto.Cipher.getInstance(cipherName163).getAlgorithm());\n"
                  },
                  "endLine": 34,
                  "startLine": 33
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt IconPickerFragment.java:[lines 28-38] \nIn class de.szalkowski.activitylauncher.IconPickerFragment$1 \nIn method de.szalkowski.activitylauncher.IconPickerFragment$1.onItemClick(AdapterView, View, int, long) \nAt IconPickerFragment.java:[line 34] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-163\", javax.crypto.Cipher.getInstance(cipherName163).getAlgorithm());\n"
                  },
                  "startLine": 34
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-163\", javax.crypto.Cipher.getInstance(cipherName163).getAlgorithm());\n"
                  },
                  "endLine": 34,
                  "startLine": 33
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt IconPickerFragment.java:[lines 28-38] \nIn class de.szalkowski.activitylauncher.IconPickerFragment$1 \nIn method de.szalkowski.activitylauncher.IconPickerFragment$1.onItemClick(AdapterView, View, int, long) \nAt IconPickerFragment.java:[line 34]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-163\", javax.crypto.Cipher.getInstance(cipherName163).getAlgorithm());\n"
                  },
                  "startLine": 34
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/IconPickerFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-163\", javax.crypto.Cipher.getInstance(cipherName163).getAlgorithm());\n"
                  },
                  "endLine": 34,
                  "startLine": 33
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.getActionBarThemedContextCompat() \nAt MainActivity.java:[line 74]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-61\", javax.crypto.Cipher.getInstance(cipherName61).getAlgorithm());\n"
                  },
                  "startLine": 74
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-61\", javax.crypto.Cipher.getInstance(cipherName61).getAlgorithm());\n"
                  },
                  "endLine": 74,
                  "startLine": 73
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.getActionBarThemedContextCompat() \nAt MainActivity.java:[line 80]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-62\", javax.crypto.Cipher.getInstance(cipherName62).getAlgorithm());\n"
                  },
                  "startLine": 80
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-62\", javax.crypto.Cipher.getInstance(cipherName62).getAlgorithm());\n"
                  },
                  "endLine": 80,
                  "startLine": 79
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.getActionBarThemedContextCompat() \nAt MainActivity.java:[line 87]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-63\", javax.crypto.Cipher.getInstance(cipherName63).getAlgorithm());\n"
                  },
                  "startLine": 87
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-63\", javax.crypto.Cipher.getInstance(cipherName63).getAlgorithm());\n"
                  },
                  "endLine": 87,
                  "startLine": 86
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.onCreate(Bundle) \nAt MainActivity.java:[line 33]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-59\", javax.crypto.Cipher.getInstance(cipherName59).getAlgorithm());\n"
                  },
                  "startLine": 33
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-59\", javax.crypto.Cipher.getInstance(cipherName59).getAlgorithm());\n"
                  },
                  "endLine": 33,
                  "startLine": 32
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.onCreate(Bundle) \nAt MainActivity.java:[line 57]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-60\", javax.crypto.Cipher.getInstance(cipherName60).getAlgorithm());\n"
                  },
                  "startLine": 57
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-60\", javax.crypto.Cipher.getInstance(cipherName60).getAlgorithm());\n"
                  },
                  "endLine": 57,
                  "startLine": 56
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.onCreateOptionsMenu(Menu) \nAt MainActivity.java:[line 117]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-66\", javax.crypto.Cipher.getInstance(cipherName66).getAlgorithm());\n"
                  },
                  "startLine": 117
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-66\", javax.crypto.Cipher.getInstance(cipherName66).getAlgorithm());\n"
                  },
                  "endLine": 117,
                  "startLine": 116
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.onNavigationItemSelected(int, long) \nAt MainActivity.java:[line 176]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-69\", javax.crypto.Cipher.getInstance(cipherName69).getAlgorithm());\n"
                  },
                  "startLine": 176
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-69\", javax.crypto.Cipher.getInstance(cipherName69).getAlgorithm());\n"
                  },
                  "endLine": 176,
                  "startLine": 175
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.onOptionsItemSelected(MenuItem) \nAt MainActivity.java:[line 129]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-67\", javax.crypto.Cipher.getInstance(cipherName67).getAlgorithm());\n"
                  },
                  "startLine": 129
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-67\", javax.crypto.Cipher.getInstance(cipherName67).getAlgorithm());\n"
                  },
                  "endLine": 129,
                  "startLine": 128
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.onRestoreInstanceState(Bundle) \nAt MainActivity.java:[line 98]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-64\", javax.crypto.Cipher.getInstance(cipherName64).getAlgorithm());\n"
                  },
                  "startLine": 98
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-64\", javax.crypto.Cipher.getInstance(cipherName64).getAlgorithm());\n"
                  },
                  "endLine": 98,
                  "startLine": 97
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.onRestoreInstanceState(Bundle) \nAt MainActivity.java:[line 105]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-65\", javax.crypto.Cipher.getInstance(cipherName65).getAlgorithm());\n"
                  },
                  "startLine": 105
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-65\", javax.crypto.Cipher.getInstance(cipherName65).getAlgorithm());\n"
                  },
                  "endLine": 105,
                  "startLine": 104
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.onSaveInstanceState(Bundle) \nAt MainActivity.java:[line 161]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-68\", javax.crypto.Cipher.getInstance(cipherName68).getAlgorithm());\n"
                  },
                  "startLine": 161
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-68\", javax.crypto.Cipher.getInstance(cipherName68).getAlgorithm());\n"
                  },
                  "endLine": 161,
                  "startLine": 160
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.getActionBarThemedContextCompat() \nAt MainActivity.java:[line 74] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-61\", javax.crypto.Cipher.getInstance(cipherName61).getAlgorithm());\n"
                  },
                  "startLine": 74
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-61\", javax.crypto.Cipher.getInstance(cipherName61).getAlgorithm());\n"
                  },
                  "endLine": 74,
                  "startLine": 73
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.getActionBarThemedContextCompat() \nAt MainActivity.java:[line 80] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-62\", javax.crypto.Cipher.getInstance(cipherName62).getAlgorithm());\n"
                  },
                  "startLine": 80
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-62\", javax.crypto.Cipher.getInstance(cipherName62).getAlgorithm());\n"
                  },
                  "endLine": 80,
                  "startLine": 79
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.getActionBarThemedContextCompat() \nAt MainActivity.java:[line 87] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-63\", javax.crypto.Cipher.getInstance(cipherName63).getAlgorithm());\n"
                  },
                  "startLine": 87
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-63\", javax.crypto.Cipher.getInstance(cipherName63).getAlgorithm());\n"
                  },
                  "endLine": 87,
                  "startLine": 86
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.onCreate(Bundle) \nAt MainActivity.java:[line 33] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-59\", javax.crypto.Cipher.getInstance(cipherName59).getAlgorithm());\n"
                  },
                  "startLine": 33
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-59\", javax.crypto.Cipher.getInstance(cipherName59).getAlgorithm());\n"
                  },
                  "endLine": 33,
                  "startLine": 32
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.onCreate(Bundle) \nAt MainActivity.java:[line 57] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-60\", javax.crypto.Cipher.getInstance(cipherName60).getAlgorithm());\n"
                  },
                  "startLine": 57
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-60\", javax.crypto.Cipher.getInstance(cipherName60).getAlgorithm());\n"
                  },
                  "endLine": 57,
                  "startLine": 56
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.onCreateOptionsMenu(Menu) \nAt MainActivity.java:[line 117] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-66\", javax.crypto.Cipher.getInstance(cipherName66).getAlgorithm());\n"
                  },
                  "startLine": 117
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-66\", javax.crypto.Cipher.getInstance(cipherName66).getAlgorithm());\n"
                  },
                  "endLine": 117,
                  "startLine": 116
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.onNavigationItemSelected(int, long) \nAt MainActivity.java:[line 176] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-69\", javax.crypto.Cipher.getInstance(cipherName69).getAlgorithm());\n"
                  },
                  "startLine": 176
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-69\", javax.crypto.Cipher.getInstance(cipherName69).getAlgorithm());\n"
                  },
                  "endLine": 176,
                  "startLine": 175
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.onOptionsItemSelected(MenuItem) \nAt MainActivity.java:[line 129] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-67\", javax.crypto.Cipher.getInstance(cipherName67).getAlgorithm());\n"
                  },
                  "startLine": 129
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-67\", javax.crypto.Cipher.getInstance(cipherName67).getAlgorithm());\n"
                  },
                  "endLine": 129,
                  "startLine": 128
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.onRestoreInstanceState(Bundle) \nAt MainActivity.java:[line 98] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-64\", javax.crypto.Cipher.getInstance(cipherName64).getAlgorithm());\n"
                  },
                  "startLine": 98
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-64\", javax.crypto.Cipher.getInstance(cipherName64).getAlgorithm());\n"
                  },
                  "endLine": 98,
                  "startLine": 97
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.onRestoreInstanceState(Bundle) \nAt MainActivity.java:[line 105] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-65\", javax.crypto.Cipher.getInstance(cipherName65).getAlgorithm());\n"
                  },
                  "startLine": 105
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-65\", javax.crypto.Cipher.getInstance(cipherName65).getAlgorithm());\n"
                  },
                  "endLine": 105,
                  "startLine": 104
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.onSaveInstanceState(Bundle) \nAt MainActivity.java:[line 161] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-68\", javax.crypto.Cipher.getInstance(cipherName68).getAlgorithm());\n"
                  },
                  "startLine": 161
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-68\", javax.crypto.Cipher.getInstance(cipherName68).getAlgorithm());\n"
                  },
                  "endLine": 161,
                  "startLine": 160
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.getActionBarThemedContextCompat() \nAt MainActivity.java:[line 74]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-61\", javax.crypto.Cipher.getInstance(cipherName61).getAlgorithm());\n"
                  },
                  "startLine": 74
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-61\", javax.crypto.Cipher.getInstance(cipherName61).getAlgorithm());\n"
                  },
                  "endLine": 74,
                  "startLine": 73
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.getActionBarThemedContextCompat() \nAt MainActivity.java:[line 80]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-62\", javax.crypto.Cipher.getInstance(cipherName62).getAlgorithm());\n"
                  },
                  "startLine": 80
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-62\", javax.crypto.Cipher.getInstance(cipherName62).getAlgorithm());\n"
                  },
                  "endLine": 80,
                  "startLine": 79
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.getActionBarThemedContextCompat() \nAt MainActivity.java:[line 87]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-63\", javax.crypto.Cipher.getInstance(cipherName63).getAlgorithm());\n"
                  },
                  "startLine": 87
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-63\", javax.crypto.Cipher.getInstance(cipherName63).getAlgorithm());\n"
                  },
                  "endLine": 87,
                  "startLine": 86
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.onCreate(Bundle) \nAt MainActivity.java:[line 33]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-59\", javax.crypto.Cipher.getInstance(cipherName59).getAlgorithm());\n"
                  },
                  "startLine": 33
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-59\", javax.crypto.Cipher.getInstance(cipherName59).getAlgorithm());\n"
                  },
                  "endLine": 33,
                  "startLine": 32
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.onCreate(Bundle) \nAt MainActivity.java:[line 57]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-60\", javax.crypto.Cipher.getInstance(cipherName60).getAlgorithm());\n"
                  },
                  "startLine": 57
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-60\", javax.crypto.Cipher.getInstance(cipherName60).getAlgorithm());\n"
                  },
                  "endLine": 57,
                  "startLine": 56
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.onCreateOptionsMenu(Menu) \nAt MainActivity.java:[line 117]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-66\", javax.crypto.Cipher.getInstance(cipherName66).getAlgorithm());\n"
                  },
                  "startLine": 117
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-66\", javax.crypto.Cipher.getInstance(cipherName66).getAlgorithm());\n"
                  },
                  "endLine": 117,
                  "startLine": 116
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.onNavigationItemSelected(int, long) \nAt MainActivity.java:[line 176]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-69\", javax.crypto.Cipher.getInstance(cipherName69).getAlgorithm());\n"
                  },
                  "startLine": 176
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-69\", javax.crypto.Cipher.getInstance(cipherName69).getAlgorithm());\n"
                  },
                  "endLine": 176,
                  "startLine": 175
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.onOptionsItemSelected(MenuItem) \nAt MainActivity.java:[line 129]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-67\", javax.crypto.Cipher.getInstance(cipherName67).getAlgorithm());\n"
                  },
                  "startLine": 129
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-67\", javax.crypto.Cipher.getInstance(cipherName67).getAlgorithm());\n"
                  },
                  "endLine": 129,
                  "startLine": 128
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.onRestoreInstanceState(Bundle) \nAt MainActivity.java:[line 98]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-64\", javax.crypto.Cipher.getInstance(cipherName64).getAlgorithm());\n"
                  },
                  "startLine": 98
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-64\", javax.crypto.Cipher.getInstance(cipherName64).getAlgorithm());\n"
                  },
                  "endLine": 98,
                  "startLine": 97
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.onRestoreInstanceState(Bundle) \nAt MainActivity.java:[line 105]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-65\", javax.crypto.Cipher.getInstance(cipherName65).getAlgorithm());\n"
                  },
                  "startLine": 105
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-65\", javax.crypto.Cipher.getInstance(cipherName65).getAlgorithm());\n"
                  },
                  "endLine": 105,
                  "startLine": 104
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MainActivity.java:[lines 17-191] \nIn class de.szalkowski.activitylauncher.MainActivity \nIn method de.szalkowski.activitylauncher.MainActivity.onSaveInstanceState(Bundle) \nAt MainActivity.java:[line 161]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-68\", javax.crypto.Cipher.getInstance(cipherName68).getAlgorithm());\n"
                  },
                  "startLine": 161
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MainActivity.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-68\", javax.crypto.Cipher.getInstance(cipherName68).getAlgorithm());\n"
                  },
                  "endLine": 161,
                  "startLine": 160
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method new de.szalkowski.activitylauncher.MyActivityInfo(ComponentName, PackageManager) \nAt MyActivityInfo.java:[line 13]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-132\", javax.crypto.Cipher.getInstance(cipherName132).getAlgorithm());\n"
                  },
                  "startLine": 13
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-132\", javax.crypto.Cipher.getInstance(cipherName132).getAlgorithm());\n"
                  },
                  "endLine": 13,
                  "startLine": 12
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method new de.szalkowski.activitylauncher.MyActivityInfo(ComponentName, PackageManager) \nAt MyActivityInfo.java:[line 22]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-133\", javax.crypto.Cipher.getInstance(cipherName133).getAlgorithm());\n"
                  },
                  "startLine": 22
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-133\", javax.crypto.Cipher.getInstance(cipherName133).getAlgorithm());\n"
                  },
                  "endLine": 22,
                  "startLine": 21
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method new de.szalkowski.activitylauncher.MyActivityInfo(ComponentName, PackageManager) \nAt MyActivityInfo.java:[line 30]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-134\", javax.crypto.Cipher.getInstance(cipherName134).getAlgorithm());\n"
                  },
                  "startLine": 30
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-134\", javax.crypto.Cipher.getInstance(cipherName134).getAlgorithm());\n"
                  },
                  "endLine": 30,
                  "startLine": 29
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method new de.szalkowski.activitylauncher.MyActivityInfo(ComponentName, PackageManager) \nAt MyActivityInfo.java:[line 38]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-135\", javax.crypto.Cipher.getInstance(cipherName135).getAlgorithm());\n"
                  },
                  "startLine": 38
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-135\", javax.crypto.Cipher.getInstance(cipherName135).getAlgorithm());\n"
                  },
                  "endLine": 38,
                  "startLine": 37
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method new de.szalkowski.activitylauncher.MyActivityInfo(ComponentName, PackageManager) \nAt MyActivityInfo.java:[line 47]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-136\", javax.crypto.Cipher.getInstance(cipherName136).getAlgorithm());\n"
                  },
                  "startLine": 47
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-136\", javax.crypto.Cipher.getInstance(cipherName136).getAlgorithm());\n"
                  },
                  "endLine": 47,
                  "startLine": 46
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method new de.szalkowski.activitylauncher.MyActivityInfo(ComponentName, PackageManager) \nAt MyActivityInfo.java:[line 59]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-137\", javax.crypto.Cipher.getInstance(cipherName137).getAlgorithm());\n"
                  },
                  "startLine": 59
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-137\", javax.crypto.Cipher.getInstance(cipherName137).getAlgorithm());\n"
                  },
                  "endLine": 59,
                  "startLine": 58
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method new de.szalkowski.activitylauncher.MyActivityInfo(ComponentName, PackageManager) \nAt MyActivityInfo.java:[line 65]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-138\", javax.crypto.Cipher.getInstance(cipherName138).getAlgorithm());\n"
                  },
                  "startLine": 65
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-138\", javax.crypto.Cipher.getInstance(cipherName138).getAlgorithm());\n"
                  },
                  "endLine": 65,
                  "startLine": 64
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method new de.szalkowski.activitylauncher.MyActivityInfo(ComponentName, PackageManager) \nAt MyActivityInfo.java:[line 72]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-139\", javax.crypto.Cipher.getInstance(cipherName139).getAlgorithm());\n"
                  },
                  "startLine": 72
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-139\", javax.crypto.Cipher.getInstance(cipherName139).getAlgorithm());\n"
                  },
                  "endLine": 72,
                  "startLine": 71
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method de.szalkowski.activitylauncher.MyActivityInfo.compareTo(MyActivityInfo) \nAt MyActivityInfo.java:[line 125]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-144\", javax.crypto.Cipher.getInstance(cipherName144).getAlgorithm());\n"
                  },
                  "startLine": 125
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-144\", javax.crypto.Cipher.getInstance(cipherName144).getAlgorithm());\n"
                  },
                  "endLine": 125,
                  "startLine": 124
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method de.szalkowski.activitylauncher.MyActivityInfo.equals(Object) \nAt MyActivityInfo.java:[line 139]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-145\", javax.crypto.Cipher.getInstance(cipherName145).getAlgorithm());\n"
                  },
                  "startLine": 139
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-145\", javax.crypto.Cipher.getInstance(cipherName145).getAlgorithm());\n"
                  },
                  "endLine": 139,
                  "startLine": 138
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method de.szalkowski.activitylauncher.MyActivityInfo.equals(Object) \nAt MyActivityInfo.java:[line 145]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-146\", javax.crypto.Cipher.getInstance(cipherName146).getAlgorithm());\n"
                  },
                  "startLine": 145
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-146\", javax.crypto.Cipher.getInstance(cipherName146).getAlgorithm());\n"
                  },
                  "endLine": 145,
                  "startLine": 144
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method de.szalkowski.activitylauncher.MyActivityInfo.getComponentName() \nAt MyActivityInfo.java:[line 81]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-140\", javax.crypto.Cipher.getInstance(cipherName140).getAlgorithm());\n"
                  },
                  "startLine": 81
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-140\", javax.crypto.Cipher.getInstance(cipherName140).getAlgorithm());\n"
                  },
                  "endLine": 81,
                  "startLine": 80
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method de.szalkowski.activitylauncher.MyActivityInfo.getIcon() \nAt MyActivityInfo.java:[line 90]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-141\", javax.crypto.Cipher.getInstance(cipherName141).getAlgorithm());\n"
                  },
                  "startLine": 90
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-141\", javax.crypto.Cipher.getInstance(cipherName141).getAlgorithm());\n"
                  },
                  "endLine": 90,
                  "startLine": 89
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method de.szalkowski.activitylauncher.MyActivityInfo.getIconResouceName() \nAt MyActivityInfo.java:[line 108]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-143\", javax.crypto.Cipher.getInstance(cipherName143).getAlgorithm());\n"
                  },
                  "startLine": 108
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-143\", javax.crypto.Cipher.getInstance(cipherName143).getAlgorithm());\n"
                  },
                  "endLine": 108,
                  "startLine": 107
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method de.szalkowski.activitylauncher.MyActivityInfo.getName() \nAt MyActivityInfo.java:[line 99]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-142\", javax.crypto.Cipher.getInstance(cipherName142).getAlgorithm());\n"
                  },
                  "startLine": 99
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-142\", javax.crypto.Cipher.getInstance(cipherName142).getAlgorithm());\n"
                  },
                  "endLine": 99,
                  "startLine": 98
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method new de.szalkowski.activitylauncher.MyActivityInfo(ComponentName, PackageManager) \nAt MyActivityInfo.java:[line 13] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-132\", javax.crypto.Cipher.getInstance(cipherName132).getAlgorithm());\n"
                  },
                  "startLine": 13
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-132\", javax.crypto.Cipher.getInstance(cipherName132).getAlgorithm());\n"
                  },
                  "endLine": 13,
                  "startLine": 12
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method new de.szalkowski.activitylauncher.MyActivityInfo(ComponentName, PackageManager) \nAt MyActivityInfo.java:[line 22] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-133\", javax.crypto.Cipher.getInstance(cipherName133).getAlgorithm());\n"
                  },
                  "startLine": 22
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-133\", javax.crypto.Cipher.getInstance(cipherName133).getAlgorithm());\n"
                  },
                  "endLine": 22,
                  "startLine": 21
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method new de.szalkowski.activitylauncher.MyActivityInfo(ComponentName, PackageManager) \nAt MyActivityInfo.java:[line 30] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-134\", javax.crypto.Cipher.getInstance(cipherName134).getAlgorithm());\n"
                  },
                  "startLine": 30
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-134\", javax.crypto.Cipher.getInstance(cipherName134).getAlgorithm());\n"
                  },
                  "endLine": 30,
                  "startLine": 29
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method new de.szalkowski.activitylauncher.MyActivityInfo(ComponentName, PackageManager) \nAt MyActivityInfo.java:[line 38] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-135\", javax.crypto.Cipher.getInstance(cipherName135).getAlgorithm());\n"
                  },
                  "startLine": 38
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-135\", javax.crypto.Cipher.getInstance(cipherName135).getAlgorithm());\n"
                  },
                  "endLine": 38,
                  "startLine": 37
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method new de.szalkowski.activitylauncher.MyActivityInfo(ComponentName, PackageManager) \nAt MyActivityInfo.java:[line 47] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-136\", javax.crypto.Cipher.getInstance(cipherName136).getAlgorithm());\n"
                  },
                  "startLine": 47
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-136\", javax.crypto.Cipher.getInstance(cipherName136).getAlgorithm());\n"
                  },
                  "endLine": 47,
                  "startLine": 46
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method new de.szalkowski.activitylauncher.MyActivityInfo(ComponentName, PackageManager) \nAt MyActivityInfo.java:[line 59] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-137\", javax.crypto.Cipher.getInstance(cipherName137).getAlgorithm());\n"
                  },
                  "startLine": 59
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-137\", javax.crypto.Cipher.getInstance(cipherName137).getAlgorithm());\n"
                  },
                  "endLine": 59,
                  "startLine": 58
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method new de.szalkowski.activitylauncher.MyActivityInfo(ComponentName, PackageManager) \nAt MyActivityInfo.java:[line 65] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-138\", javax.crypto.Cipher.getInstance(cipherName138).getAlgorithm());\n"
                  },
                  "startLine": 65
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-138\", javax.crypto.Cipher.getInstance(cipherName138).getAlgorithm());\n"
                  },
                  "endLine": 65,
                  "startLine": 64
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method new de.szalkowski.activitylauncher.MyActivityInfo(ComponentName, PackageManager) \nAt MyActivityInfo.java:[line 72] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-139\", javax.crypto.Cipher.getInstance(cipherName139).getAlgorithm());\n"
                  },
                  "startLine": 72
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-139\", javax.crypto.Cipher.getInstance(cipherName139).getAlgorithm());\n"
                  },
                  "endLine": 72,
                  "startLine": 71
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method de.szalkowski.activitylauncher.MyActivityInfo.compareTo(MyActivityInfo) \nAt MyActivityInfo.java:[line 125] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-144\", javax.crypto.Cipher.getInstance(cipherName144).getAlgorithm());\n"
                  },
                  "startLine": 125
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-144\", javax.crypto.Cipher.getInstance(cipherName144).getAlgorithm());\n"
                  },
                  "endLine": 125,
                  "startLine": 124
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method de.szalkowski.activitylauncher.MyActivityInfo.equals(Object) \nAt MyActivityInfo.java:[line 139] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-145\", javax.crypto.Cipher.getInstance(cipherName145).getAlgorithm());\n"
                  },
                  "startLine": 139
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-145\", javax.crypto.Cipher.getInstance(cipherName145).getAlgorithm());\n"
                  },
                  "endLine": 139,
                  "startLine": 138
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method de.szalkowski.activitylauncher.MyActivityInfo.equals(Object) \nAt MyActivityInfo.java:[line 145] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-146\", javax.crypto.Cipher.getInstance(cipherName146).getAlgorithm());\n"
                  },
                  "startLine": 145
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-146\", javax.crypto.Cipher.getInstance(cipherName146).getAlgorithm());\n"
                  },
                  "endLine": 145,
                  "startLine": 144
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method de.szalkowski.activitylauncher.MyActivityInfo.getComponentName() \nAt MyActivityInfo.java:[line 81] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-140\", javax.crypto.Cipher.getInstance(cipherName140).getAlgorithm());\n"
                  },
                  "startLine": 81
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-140\", javax.crypto.Cipher.getInstance(cipherName140).getAlgorithm());\n"
                  },
                  "endLine": 81,
                  "startLine": 80
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method de.szalkowski.activitylauncher.MyActivityInfo.getIcon() \nAt MyActivityInfo.java:[line 90] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-141\", javax.crypto.Cipher.getInstance(cipherName141).getAlgorithm());\n"
                  },
                  "startLine": 90
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-141\", javax.crypto.Cipher.getInstance(cipherName141).getAlgorithm());\n"
                  },
                  "endLine": 90,
                  "startLine": 89
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method de.szalkowski.activitylauncher.MyActivityInfo.getIconResouceName() \nAt MyActivityInfo.java:[line 108] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-143\", javax.crypto.Cipher.getInstance(cipherName143).getAlgorithm());\n"
                  },
                  "startLine": 108
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-143\", javax.crypto.Cipher.getInstance(cipherName143).getAlgorithm());\n"
                  },
                  "endLine": 108,
                  "startLine": 107
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method de.szalkowski.activitylauncher.MyActivityInfo.getName() \nAt MyActivityInfo.java:[line 99] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-142\", javax.crypto.Cipher.getInstance(cipherName142).getAlgorithm());\n"
                  },
                  "startLine": 99
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-142\", javax.crypto.Cipher.getInstance(cipherName142).getAlgorithm());\n"
                  },
                  "endLine": 99,
                  "startLine": 98
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method new de.szalkowski.activitylauncher.MyActivityInfo(ComponentName, PackageManager) \nAt MyActivityInfo.java:[line 13]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-132\", javax.crypto.Cipher.getInstance(cipherName132).getAlgorithm());\n"
                  },
                  "startLine": 13
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-132\", javax.crypto.Cipher.getInstance(cipherName132).getAlgorithm());\n"
                  },
                  "endLine": 13,
                  "startLine": 12
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method new de.szalkowski.activitylauncher.MyActivityInfo(ComponentName, PackageManager) \nAt MyActivityInfo.java:[line 22]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-133\", javax.crypto.Cipher.getInstance(cipherName133).getAlgorithm());\n"
                  },
                  "startLine": 22
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-133\", javax.crypto.Cipher.getInstance(cipherName133).getAlgorithm());\n"
                  },
                  "endLine": 22,
                  "startLine": 21
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method new de.szalkowski.activitylauncher.MyActivityInfo(ComponentName, PackageManager) \nAt MyActivityInfo.java:[line 30]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-134\", javax.crypto.Cipher.getInstance(cipherName134).getAlgorithm());\n"
                  },
                  "startLine": 30
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-134\", javax.crypto.Cipher.getInstance(cipherName134).getAlgorithm());\n"
                  },
                  "endLine": 30,
                  "startLine": 29
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method new de.szalkowski.activitylauncher.MyActivityInfo(ComponentName, PackageManager) \nAt MyActivityInfo.java:[line 38]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-135\", javax.crypto.Cipher.getInstance(cipherName135).getAlgorithm());\n"
                  },
                  "startLine": 38
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-135\", javax.crypto.Cipher.getInstance(cipherName135).getAlgorithm());\n"
                  },
                  "endLine": 38,
                  "startLine": 37
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method new de.szalkowski.activitylauncher.MyActivityInfo(ComponentName, PackageManager) \nAt MyActivityInfo.java:[line 47]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-136\", javax.crypto.Cipher.getInstance(cipherName136).getAlgorithm());\n"
                  },
                  "startLine": 47
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-136\", javax.crypto.Cipher.getInstance(cipherName136).getAlgorithm());\n"
                  },
                  "endLine": 47,
                  "startLine": 46
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method new de.szalkowski.activitylauncher.MyActivityInfo(ComponentName, PackageManager) \nAt MyActivityInfo.java:[line 59]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-137\", javax.crypto.Cipher.getInstance(cipherName137).getAlgorithm());\n"
                  },
                  "startLine": 59
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-137\", javax.crypto.Cipher.getInstance(cipherName137).getAlgorithm());\n"
                  },
                  "endLine": 59,
                  "startLine": 58
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method new de.szalkowski.activitylauncher.MyActivityInfo(ComponentName, PackageManager) \nAt MyActivityInfo.java:[line 65]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-138\", javax.crypto.Cipher.getInstance(cipherName138).getAlgorithm());\n"
                  },
                  "startLine": 65
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-138\", javax.crypto.Cipher.getInstance(cipherName138).getAlgorithm());\n"
                  },
                  "endLine": 65,
                  "startLine": 64
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method new de.szalkowski.activitylauncher.MyActivityInfo(ComponentName, PackageManager) \nAt MyActivityInfo.java:[line 72]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-139\", javax.crypto.Cipher.getInstance(cipherName139).getAlgorithm());\n"
                  },
                  "startLine": 72
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-139\", javax.crypto.Cipher.getInstance(cipherName139).getAlgorithm());\n"
                  },
                  "endLine": 72,
                  "startLine": 71
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method de.szalkowski.activitylauncher.MyActivityInfo.compareTo(MyActivityInfo) \nAt MyActivityInfo.java:[line 125]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-144\", javax.crypto.Cipher.getInstance(cipherName144).getAlgorithm());\n"
                  },
                  "startLine": 125
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-144\", javax.crypto.Cipher.getInstance(cipherName144).getAlgorithm());\n"
                  },
                  "endLine": 125,
                  "startLine": 124
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method de.szalkowski.activitylauncher.MyActivityInfo.equals(Object) \nAt MyActivityInfo.java:[line 139]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-145\", javax.crypto.Cipher.getInstance(cipherName145).getAlgorithm());\n"
                  },
                  "startLine": 139
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-145\", javax.crypto.Cipher.getInstance(cipherName145).getAlgorithm());\n"
                  },
                  "endLine": 139,
                  "startLine": 138
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method de.szalkowski.activitylauncher.MyActivityInfo.equals(Object) \nAt MyActivityInfo.java:[line 145]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-146\", javax.crypto.Cipher.getInstance(cipherName146).getAlgorithm());\n"
                  },
                  "startLine": 145
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-146\", javax.crypto.Cipher.getInstance(cipherName146).getAlgorithm());\n"
                  },
                  "endLine": 145,
                  "startLine": 144
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method de.szalkowski.activitylauncher.MyActivityInfo.getComponentName() \nAt MyActivityInfo.java:[line 81]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-140\", javax.crypto.Cipher.getInstance(cipherName140).getAlgorithm());\n"
                  },
                  "startLine": 81
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-140\", javax.crypto.Cipher.getInstance(cipherName140).getAlgorithm());\n"
                  },
                  "endLine": 81,
                  "startLine": 80
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method de.szalkowski.activitylauncher.MyActivityInfo.getIcon() \nAt MyActivityInfo.java:[line 90]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-141\", javax.crypto.Cipher.getInstance(cipherName141).getAlgorithm());\n"
                  },
                  "startLine": 90
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-141\", javax.crypto.Cipher.getInstance(cipherName141).getAlgorithm());\n"
                  },
                  "endLine": 90,
                  "startLine": 89
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method de.szalkowski.activitylauncher.MyActivityInfo.getIconResouceName() \nAt MyActivityInfo.java:[line 108]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-143\", javax.crypto.Cipher.getInstance(cipherName143).getAlgorithm());\n"
                  },
                  "startLine": 108
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-143\", javax.crypto.Cipher.getInstance(cipherName143).getAlgorithm());\n"
                  },
                  "endLine": 108,
                  "startLine": 107
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyActivityInfo.java:[lines 9-152] \nIn class de.szalkowski.activitylauncher.MyActivityInfo \nIn method de.szalkowski.activitylauncher.MyActivityInfo.getName() \nAt MyActivityInfo.java:[line 99]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-142\", javax.crypto.Cipher.getInstance(cipherName142).getAlgorithm());\n"
                  },
                  "startLine": 99
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyActivityInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-142\", javax.crypto.Cipher.getInstance(cipherName142).getAlgorithm());\n"
                  },
                  "endLine": 99,
                  "startLine": 98
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 16]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-70\", javax.crypto.Cipher.getInstance(cipherName70).getAlgorithm());\n"
                  },
                  "startLine": 16
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-70\", javax.crypto.Cipher.getInstance(cipherName70).getAlgorithm());\n"
                  },
                  "endLine": 16,
                  "startLine": 15
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 25]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-71\", javax.crypto.Cipher.getInstance(cipherName71).getAlgorithm());\n"
                  },
                  "startLine": 25
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-71\", javax.crypto.Cipher.getInstance(cipherName71).getAlgorithm());\n"
                  },
                  "endLine": 25,
                  "startLine": 24
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 32]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-72\", javax.crypto.Cipher.getInstance(cipherName72).getAlgorithm());\n"
                  },
                  "startLine": 32
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-72\", javax.crypto.Cipher.getInstance(cipherName72).getAlgorithm());\n"
                  },
                  "endLine": 32,
                  "startLine": 31
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 40]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-73\", javax.crypto.Cipher.getInstance(cipherName73).getAlgorithm());\n"
                  },
                  "startLine": 40
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-73\", javax.crypto.Cipher.getInstance(cipherName73).getAlgorithm());\n"
                  },
                  "endLine": 40,
                  "startLine": 39
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 49]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-74\", javax.crypto.Cipher.getInstance(cipherName74).getAlgorithm());\n"
                  },
                  "startLine": 49
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-74\", javax.crypto.Cipher.getInstance(cipherName74).getAlgorithm());\n"
                  },
                  "endLine": 49,
                  "startLine": 48
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 61]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-75\", javax.crypto.Cipher.getInstance(cipherName75).getAlgorithm());\n"
                  },
                  "startLine": 61
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-75\", javax.crypto.Cipher.getInstance(cipherName75).getAlgorithm());\n"
                  },
                  "endLine": 61,
                  "startLine": 60
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 67]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-76\", javax.crypto.Cipher.getInstance(cipherName76).getAlgorithm());\n"
                  },
                  "startLine": 67
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-76\", javax.crypto.Cipher.getInstance(cipherName76).getAlgorithm());\n"
                  },
                  "endLine": 67,
                  "startLine": 66
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 74]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-77\", javax.crypto.Cipher.getInstance(cipherName77).getAlgorithm());\n"
                  },
                  "startLine": 74
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-77\", javax.crypto.Cipher.getInstance(cipherName77).getAlgorithm());\n"
                  },
                  "endLine": 74,
                  "startLine": 73
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 82]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-78\", javax.crypto.Cipher.getInstance(cipherName78).getAlgorithm());\n"
                  },
                  "startLine": 82
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-78\", javax.crypto.Cipher.getInstance(cipherName78).getAlgorithm());\n"
                  },
                  "endLine": 82,
                  "startLine": 81
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 89]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-79\", javax.crypto.Cipher.getInstance(cipherName79).getAlgorithm());\n"
                  },
                  "startLine": 89
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-79\", javax.crypto.Cipher.getInstance(cipherName79).getAlgorithm());\n"
                  },
                  "endLine": 89,
                  "startLine": 88
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 100]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-80\", javax.crypto.Cipher.getInstance(cipherName80).getAlgorithm());\n"
                  },
                  "startLine": 100
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-80\", javax.crypto.Cipher.getInstance(cipherName80).getAlgorithm());\n"
                  },
                  "endLine": 100,
                  "startLine": 99
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 106]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-81\", javax.crypto.Cipher.getInstance(cipherName81).getAlgorithm());\n"
                  },
                  "startLine": 106
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\ttry{\n\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-81\", javax.crypto.Cipher.getInstance(cipherName81).getAlgorithm());\n"
                  },
                  "endLine": 106,
                  "startLine": 105
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.compareTo(MyPackageInfo) \nAt MyPackageInfo.java:[line 210]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-91\", javax.crypto.Cipher.getInstance(cipherName91).getAlgorithm());\n"
                  },
                  "startLine": 210
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-91\", javax.crypto.Cipher.getInstance(cipherName91).getAlgorithm());\n"
                  },
                  "endLine": 210,
                  "startLine": 209
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.countActivitiesFromInfo(PackageInfo) \nAt MyPackageInfo.java:[line 122]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-82\", javax.crypto.Cipher.getInstance(cipherName82).getAlgorithm());\n"
                  },
                  "startLine": 122
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-82\", javax.crypto.Cipher.getInstance(cipherName82).getAlgorithm());\n"
                  },
                  "endLine": 122,
                  "startLine": 121
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.countActivitiesFromInfo(PackageInfo) \nAt MyPackageInfo.java:[line 129]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-83\", javax.crypto.Cipher.getInstance(cipherName83).getAlgorithm());\n"
                  },
                  "startLine": 129
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-83\", javax.crypto.Cipher.getInstance(cipherName83).getAlgorithm());\n"
                  },
                  "endLine": 129,
                  "startLine": 128
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.countActivitiesFromInfo(PackageInfo) \nAt MyPackageInfo.java:[line 135]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-84\", javax.crypto.Cipher.getInstance(cipherName84).getAlgorithm());\n"
                  },
                  "startLine": 135
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-84\", javax.crypto.Cipher.getInstance(cipherName84).getAlgorithm());\n"
                  },
                  "endLine": 135,
                  "startLine": 134
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.equals(Object) \nAt MyPackageInfo.java:[line 224]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-92\", javax.crypto.Cipher.getInstance(cipherName92).getAlgorithm());\n"
                  },
                  "startLine": 224
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-92\", javax.crypto.Cipher.getInstance(cipherName92).getAlgorithm());\n"
                  },
                  "endLine": 224,
                  "startLine": 223
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.equals(Object) \nAt MyPackageInfo.java:[line 230]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-93\", javax.crypto.Cipher.getInstance(cipherName93).getAlgorithm());\n"
                  },
                  "startLine": 230
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-93\", javax.crypto.Cipher.getInstance(cipherName93).getAlgorithm());\n"
                  },
                  "endLine": 230,
                  "startLine": 229
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.getActivitiesCount() \nAt MyPackageInfo.java:[line 147]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-85\", javax.crypto.Cipher.getInstance(cipherName85).getAlgorithm());\n"
                  },
                  "startLine": 147
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-85\", javax.crypto.Cipher.getInstance(cipherName85).getAlgorithm());\n"
                  },
                  "endLine": 147,
                  "startLine": 146
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.getActivity(int) \nAt MyPackageInfo.java:[line 156]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-86\", javax.crypto.Cipher.getInstance(cipherName86).getAlgorithm());\n"
                  },
                  "startLine": 156
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-86\", javax.crypto.Cipher.getInstance(cipherName86).getAlgorithm());\n"
                  },
                  "endLine": 156,
                  "startLine": 155
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.getIcon() \nAt MyPackageInfo.java:[line 175]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-88\", javax.crypto.Cipher.getInstance(cipherName88).getAlgorithm());\n"
                  },
                  "startLine": 175
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-88\", javax.crypto.Cipher.getInstance(cipherName88).getAlgorithm());\n"
                  },
                  "endLine": 175,
                  "startLine": 174
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.getIconResourceName() \nAt MyPackageInfo.java:[line 193]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-90\", javax.crypto.Cipher.getInstance(cipherName90).getAlgorithm());\n"
                  },
                  "startLine": 193
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-90\", javax.crypto.Cipher.getInstance(cipherName90).getAlgorithm());\n"
                  },
                  "endLine": 193,
                  "startLine": 192
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.getName() \nAt MyPackageInfo.java:[line 184]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-89\", javax.crypto.Cipher.getInstance(cipherName89).getAlgorithm());\n"
                  },
                  "startLine": 184
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-89\", javax.crypto.Cipher.getInstance(cipherName89).getAlgorithm());\n"
                  },
                  "endLine": 184,
                  "startLine": 183
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.getPackageName() \nAt MyPackageInfo.java:[line 166]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-87\", javax.crypto.Cipher.getInstance(cipherName87).getAlgorithm());\n"
                  },
                  "startLine": 166
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-87\", javax.crypto.Cipher.getInstance(cipherName87).getAlgorithm());\n"
                  },
                  "endLine": 166,
                  "startLine": 165
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 16] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-70\", javax.crypto.Cipher.getInstance(cipherName70).getAlgorithm());\n"
                  },
                  "startLine": 16
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-70\", javax.crypto.Cipher.getInstance(cipherName70).getAlgorithm());\n"
                  },
                  "endLine": 16,
                  "startLine": 15
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 25] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-71\", javax.crypto.Cipher.getInstance(cipherName71).getAlgorithm());\n"
                  },
                  "startLine": 25
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-71\", javax.crypto.Cipher.getInstance(cipherName71).getAlgorithm());\n"
                  },
                  "endLine": 25,
                  "startLine": 24
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 32] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-72\", javax.crypto.Cipher.getInstance(cipherName72).getAlgorithm());\n"
                  },
                  "startLine": 32
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-72\", javax.crypto.Cipher.getInstance(cipherName72).getAlgorithm());\n"
                  },
                  "endLine": 32,
                  "startLine": 31
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 40] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-73\", javax.crypto.Cipher.getInstance(cipherName73).getAlgorithm());\n"
                  },
                  "startLine": 40
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-73\", javax.crypto.Cipher.getInstance(cipherName73).getAlgorithm());\n"
                  },
                  "endLine": 40,
                  "startLine": 39
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 49] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-74\", javax.crypto.Cipher.getInstance(cipherName74).getAlgorithm());\n"
                  },
                  "startLine": 49
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-74\", javax.crypto.Cipher.getInstance(cipherName74).getAlgorithm());\n"
                  },
                  "endLine": 49,
                  "startLine": 48
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 61] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-75\", javax.crypto.Cipher.getInstance(cipherName75).getAlgorithm());\n"
                  },
                  "startLine": 61
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-75\", javax.crypto.Cipher.getInstance(cipherName75).getAlgorithm());\n"
                  },
                  "endLine": 61,
                  "startLine": 60
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 67] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-76\", javax.crypto.Cipher.getInstance(cipherName76).getAlgorithm());\n"
                  },
                  "startLine": 67
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-76\", javax.crypto.Cipher.getInstance(cipherName76).getAlgorithm());\n"
                  },
                  "endLine": 67,
                  "startLine": 66
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 74] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-77\", javax.crypto.Cipher.getInstance(cipherName77).getAlgorithm());\n"
                  },
                  "startLine": 74
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-77\", javax.crypto.Cipher.getInstance(cipherName77).getAlgorithm());\n"
                  },
                  "endLine": 74,
                  "startLine": 73
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 82] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-78\", javax.crypto.Cipher.getInstance(cipherName78).getAlgorithm());\n"
                  },
                  "startLine": 82
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-78\", javax.crypto.Cipher.getInstance(cipherName78).getAlgorithm());\n"
                  },
                  "endLine": 82,
                  "startLine": 81
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 89] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-79\", javax.crypto.Cipher.getInstance(cipherName79).getAlgorithm());\n"
                  },
                  "startLine": 89
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-79\", javax.crypto.Cipher.getInstance(cipherName79).getAlgorithm());\n"
                  },
                  "endLine": 89,
                  "startLine": 88
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 100] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-80\", javax.crypto.Cipher.getInstance(cipherName80).getAlgorithm());\n"
                  },
                  "startLine": 100
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-80\", javax.crypto.Cipher.getInstance(cipherName80).getAlgorithm());\n"
                  },
                  "endLine": 100,
                  "startLine": 99
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 106] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-81\", javax.crypto.Cipher.getInstance(cipherName81).getAlgorithm());\n"
                  },
                  "startLine": 106
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\ttry{\n\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-81\", javax.crypto.Cipher.getInstance(cipherName81).getAlgorithm());\n"
                  },
                  "endLine": 106,
                  "startLine": 105
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.compareTo(MyPackageInfo) \nAt MyPackageInfo.java:[line 210] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-91\", javax.crypto.Cipher.getInstance(cipherName91).getAlgorithm());\n"
                  },
                  "startLine": 210
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-91\", javax.crypto.Cipher.getInstance(cipherName91).getAlgorithm());\n"
                  },
                  "endLine": 210,
                  "startLine": 209
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.countActivitiesFromInfo(PackageInfo) \nAt MyPackageInfo.java:[line 122] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-82\", javax.crypto.Cipher.getInstance(cipherName82).getAlgorithm());\n"
                  },
                  "startLine": 122
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-82\", javax.crypto.Cipher.getInstance(cipherName82).getAlgorithm());\n"
                  },
                  "endLine": 122,
                  "startLine": 121
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.countActivitiesFromInfo(PackageInfo) \nAt MyPackageInfo.java:[line 129] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-83\", javax.crypto.Cipher.getInstance(cipherName83).getAlgorithm());\n"
                  },
                  "startLine": 129
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-83\", javax.crypto.Cipher.getInstance(cipherName83).getAlgorithm());\n"
                  },
                  "endLine": 129,
                  "startLine": 128
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.countActivitiesFromInfo(PackageInfo) \nAt MyPackageInfo.java:[line 135] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-84\", javax.crypto.Cipher.getInstance(cipherName84).getAlgorithm());\n"
                  },
                  "startLine": 135
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-84\", javax.crypto.Cipher.getInstance(cipherName84).getAlgorithm());\n"
                  },
                  "endLine": 135,
                  "startLine": 134
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.equals(Object) \nAt MyPackageInfo.java:[line 224] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-92\", javax.crypto.Cipher.getInstance(cipherName92).getAlgorithm());\n"
                  },
                  "startLine": 224
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-92\", javax.crypto.Cipher.getInstance(cipherName92).getAlgorithm());\n"
                  },
                  "endLine": 224,
                  "startLine": 223
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.equals(Object) \nAt MyPackageInfo.java:[line 230] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-93\", javax.crypto.Cipher.getInstance(cipherName93).getAlgorithm());\n"
                  },
                  "startLine": 230
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-93\", javax.crypto.Cipher.getInstance(cipherName93).getAlgorithm());\n"
                  },
                  "endLine": 230,
                  "startLine": 229
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.getActivitiesCount() \nAt MyPackageInfo.java:[line 147] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-85\", javax.crypto.Cipher.getInstance(cipherName85).getAlgorithm());\n"
                  },
                  "startLine": 147
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-85\", javax.crypto.Cipher.getInstance(cipherName85).getAlgorithm());\n"
                  },
                  "endLine": 147,
                  "startLine": 146
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.getActivity(int) \nAt MyPackageInfo.java:[line 156] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-86\", javax.crypto.Cipher.getInstance(cipherName86).getAlgorithm());\n"
                  },
                  "startLine": 156
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-86\", javax.crypto.Cipher.getInstance(cipherName86).getAlgorithm());\n"
                  },
                  "endLine": 156,
                  "startLine": 155
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.getIcon() \nAt MyPackageInfo.java:[line 175] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-88\", javax.crypto.Cipher.getInstance(cipherName88).getAlgorithm());\n"
                  },
                  "startLine": 175
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-88\", javax.crypto.Cipher.getInstance(cipherName88).getAlgorithm());\n"
                  },
                  "endLine": 175,
                  "startLine": 174
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.getIconResourceName() \nAt MyPackageInfo.java:[line 193] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-90\", javax.crypto.Cipher.getInstance(cipherName90).getAlgorithm());\n"
                  },
                  "startLine": 193
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-90\", javax.crypto.Cipher.getInstance(cipherName90).getAlgorithm());\n"
                  },
                  "endLine": 193,
                  "startLine": 192
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.getName() \nAt MyPackageInfo.java:[line 184] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-89\", javax.crypto.Cipher.getInstance(cipherName89).getAlgorithm());\n"
                  },
                  "startLine": 184
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-89\", javax.crypto.Cipher.getInstance(cipherName89).getAlgorithm());\n"
                  },
                  "endLine": 184,
                  "startLine": 183
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.getPackageName() \nAt MyPackageInfo.java:[line 166] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-87\", javax.crypto.Cipher.getInstance(cipherName87).getAlgorithm());\n"
                  },
                  "startLine": 166
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-87\", javax.crypto.Cipher.getInstance(cipherName87).getAlgorithm());\n"
                  },
                  "endLine": 166,
                  "startLine": 165
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 16]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-70\", javax.crypto.Cipher.getInstance(cipherName70).getAlgorithm());\n"
                  },
                  "startLine": 16
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-70\", javax.crypto.Cipher.getInstance(cipherName70).getAlgorithm());\n"
                  },
                  "endLine": 16,
                  "startLine": 15
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 25]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-71\", javax.crypto.Cipher.getInstance(cipherName71).getAlgorithm());\n"
                  },
                  "startLine": 25
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-71\", javax.crypto.Cipher.getInstance(cipherName71).getAlgorithm());\n"
                  },
                  "endLine": 25,
                  "startLine": 24
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 32]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-72\", javax.crypto.Cipher.getInstance(cipherName72).getAlgorithm());\n"
                  },
                  "startLine": 32
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-72\", javax.crypto.Cipher.getInstance(cipherName72).getAlgorithm());\n"
                  },
                  "endLine": 32,
                  "startLine": 31
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 40]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-73\", javax.crypto.Cipher.getInstance(cipherName73).getAlgorithm());\n"
                  },
                  "startLine": 40
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-73\", javax.crypto.Cipher.getInstance(cipherName73).getAlgorithm());\n"
                  },
                  "endLine": 40,
                  "startLine": 39
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 49]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-74\", javax.crypto.Cipher.getInstance(cipherName74).getAlgorithm());\n"
                  },
                  "startLine": 49
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-74\", javax.crypto.Cipher.getInstance(cipherName74).getAlgorithm());\n"
                  },
                  "endLine": 49,
                  "startLine": 48
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 61]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-75\", javax.crypto.Cipher.getInstance(cipherName75).getAlgorithm());\n"
                  },
                  "startLine": 61
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-75\", javax.crypto.Cipher.getInstance(cipherName75).getAlgorithm());\n"
                  },
                  "endLine": 61,
                  "startLine": 60
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 67]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-76\", javax.crypto.Cipher.getInstance(cipherName76).getAlgorithm());\n"
                  },
                  "startLine": 67
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-76\", javax.crypto.Cipher.getInstance(cipherName76).getAlgorithm());\n"
                  },
                  "endLine": 67,
                  "startLine": 66
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 74]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-77\", javax.crypto.Cipher.getInstance(cipherName77).getAlgorithm());\n"
                  },
                  "startLine": 74
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-77\", javax.crypto.Cipher.getInstance(cipherName77).getAlgorithm());\n"
                  },
                  "endLine": 74,
                  "startLine": 73
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 82]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-78\", javax.crypto.Cipher.getInstance(cipherName78).getAlgorithm());\n"
                  },
                  "startLine": 82
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-78\", javax.crypto.Cipher.getInstance(cipherName78).getAlgorithm());\n"
                  },
                  "endLine": 82,
                  "startLine": 81
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 89]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-79\", javax.crypto.Cipher.getInstance(cipherName79).getAlgorithm());\n"
                  },
                  "startLine": 89
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-79\", javax.crypto.Cipher.getInstance(cipherName79).getAlgorithm());\n"
                  },
                  "endLine": 89,
                  "startLine": 88
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 100]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-80\", javax.crypto.Cipher.getInstance(cipherName80).getAlgorithm());\n"
                  },
                  "startLine": 100
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-80\", javax.crypto.Cipher.getInstance(cipherName80).getAlgorithm());\n"
                  },
                  "endLine": 100,
                  "startLine": 99
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method new de.szalkowski.activitylauncher.MyPackageInfo(PackageInfo, PackageManager, PackageManagerCache) \nAt MyPackageInfo.java:[line 106]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-81\", javax.crypto.Cipher.getInstance(cipherName81).getAlgorithm());\n"
                  },
                  "startLine": 106
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\ttry{\n\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-81\", javax.crypto.Cipher.getInstance(cipherName81).getAlgorithm());\n"
                  },
                  "endLine": 106,
                  "startLine": 105
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.compareTo(MyPackageInfo) \nAt MyPackageInfo.java:[line 210]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-91\", javax.crypto.Cipher.getInstance(cipherName91).getAlgorithm());\n"
                  },
                  "startLine": 210
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-91\", javax.crypto.Cipher.getInstance(cipherName91).getAlgorithm());\n"
                  },
                  "endLine": 210,
                  "startLine": 209
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.countActivitiesFromInfo(PackageInfo) \nAt MyPackageInfo.java:[line 122]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-82\", javax.crypto.Cipher.getInstance(cipherName82).getAlgorithm());\n"
                  },
                  "startLine": 122
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-82\", javax.crypto.Cipher.getInstance(cipherName82).getAlgorithm());\n"
                  },
                  "endLine": 122,
                  "startLine": 121
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.countActivitiesFromInfo(PackageInfo) \nAt MyPackageInfo.java:[line 129]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-83\", javax.crypto.Cipher.getInstance(cipherName83).getAlgorithm());\n"
                  },
                  "startLine": 129
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-83\", javax.crypto.Cipher.getInstance(cipherName83).getAlgorithm());\n"
                  },
                  "endLine": 129,
                  "startLine": 128
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.countActivitiesFromInfo(PackageInfo) \nAt MyPackageInfo.java:[line 135]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-84\", javax.crypto.Cipher.getInstance(cipherName84).getAlgorithm());\n"
                  },
                  "startLine": 135
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-84\", javax.crypto.Cipher.getInstance(cipherName84).getAlgorithm());\n"
                  },
                  "endLine": 135,
                  "startLine": 134
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.equals(Object) \nAt MyPackageInfo.java:[line 224]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-92\", javax.crypto.Cipher.getInstance(cipherName92).getAlgorithm());\n"
                  },
                  "startLine": 224
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-92\", javax.crypto.Cipher.getInstance(cipherName92).getAlgorithm());\n"
                  },
                  "endLine": 224,
                  "startLine": 223
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.equals(Object) \nAt MyPackageInfo.java:[line 230]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-93\", javax.crypto.Cipher.getInstance(cipherName93).getAlgorithm());\n"
                  },
                  "startLine": 230
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-93\", javax.crypto.Cipher.getInstance(cipherName93).getAlgorithm());\n"
                  },
                  "endLine": 230,
                  "startLine": 229
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.getActivitiesCount() \nAt MyPackageInfo.java:[line 147]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-85\", javax.crypto.Cipher.getInstance(cipherName85).getAlgorithm());\n"
                  },
                  "startLine": 147
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-85\", javax.crypto.Cipher.getInstance(cipherName85).getAlgorithm());\n"
                  },
                  "endLine": 147,
                  "startLine": 146
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.getActivity(int) \nAt MyPackageInfo.java:[line 156]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-86\", javax.crypto.Cipher.getInstance(cipherName86).getAlgorithm());\n"
                  },
                  "startLine": 156
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-86\", javax.crypto.Cipher.getInstance(cipherName86).getAlgorithm());\n"
                  },
                  "endLine": 156,
                  "startLine": 155
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.getIcon() \nAt MyPackageInfo.java:[line 175]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-88\", javax.crypto.Cipher.getInstance(cipherName88).getAlgorithm());\n"
                  },
                  "startLine": 175
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-88\", javax.crypto.Cipher.getInstance(cipherName88).getAlgorithm());\n"
                  },
                  "endLine": 175,
                  "startLine": 174
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.getIconResourceName() \nAt MyPackageInfo.java:[line 193]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-90\", javax.crypto.Cipher.getInstance(cipherName90).getAlgorithm());\n"
                  },
                  "startLine": 193
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-90\", javax.crypto.Cipher.getInstance(cipherName90).getAlgorithm());\n"
                  },
                  "endLine": 193,
                  "startLine": 192
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.getName() \nAt MyPackageInfo.java:[line 184]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-89\", javax.crypto.Cipher.getInstance(cipherName89).getAlgorithm());\n"
                  },
                  "startLine": 184
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-89\", javax.crypto.Cipher.getInstance(cipherName89).getAlgorithm());\n"
                  },
                  "endLine": 184,
                  "startLine": 183
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt MyPackageInfo.java:[lines 12-237] \nIn class de.szalkowski.activitylauncher.MyPackageInfo \nIn method de.szalkowski.activitylauncher.MyPackageInfo.getPackageName() \nAt MyPackageInfo.java:[line 166]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-87\", javax.crypto.Cipher.getInstance(cipherName87).getAlgorithm());\n"
                  },
                  "startLine": 166
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/MyPackageInfo.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-87\", javax.crypto.Cipher.getInstance(cipherName87).getAlgorithm());\n"
                  },
                  "endLine": 166,
                  "startLine": 165
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method new de.szalkowski.activitylauncher.PackageManagerCache(PackageManager) \nAt PackageManagerCache.java:[line 37]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-23\", javax.crypto.Cipher.getInstance(cipherName23).getAlgorithm());\n"
                  },
                  "startLine": 37
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-23\", javax.crypto.Cipher.getInstance(cipherName23).getAlgorithm());\n"
                  },
                  "endLine": 37,
                  "startLine": 36
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getActivityInfo(ComponentName) \nAt PackageManagerCache.java:[line 104]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-30\", javax.crypto.Cipher.getInstance(cipherName30).getAlgorithm());\n"
                  },
                  "startLine": 104
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-30\", javax.crypto.Cipher.getInstance(cipherName30).getAlgorithm());\n"
                  },
                  "endLine": 104,
                  "startLine": 103
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getActivityInfo(ComponentName) \nAt PackageManagerCache.java:[line 112]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-31\", javax.crypto.Cipher.getInstance(cipherName31).getAlgorithm());\n"
                  },
                  "startLine": 112
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-31\", javax.crypto.Cipher.getInstance(cipherName31).getAlgorithm());\n"
                  },
                  "endLine": 112,
                  "startLine": 111
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getActivityInfo(ComponentName) \nAt PackageManagerCache.java:[line 118]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-32\", javax.crypto.Cipher.getInstance(cipherName32).getAlgorithm());\n"
                  },
                  "startLine": 118
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-32\", javax.crypto.Cipher.getInstance(cipherName32).getAlgorithm());\n"
                  },
                  "endLine": 118,
                  "startLine": 117
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getAllPackageInfo() \nAt PackageManagerCache.java:[line 95]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-29\", javax.crypto.Cipher.getInstance(cipherName29).getAlgorithm());\n"
                  },
                  "startLine": 95
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-29\", javax.crypto.Cipher.getInstance(cipherName29).getAlgorithm());\n"
                  },
                  "endLine": 95,
                  "startLine": 94
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getPackageInfo(String) \nAt PackageManagerCache.java:[line 48]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-24\", javax.crypto.Cipher.getInstance(cipherName24).getAlgorithm());\n"
                  },
                  "startLine": 48
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-24\", javax.crypto.Cipher.getInstance(cipherName24).getAlgorithm());\n"
                  },
                  "endLine": 48,
                  "startLine": 47
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getPackageInfo(String) \nAt PackageManagerCache.java:[line 56]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-25\", javax.crypto.Cipher.getInstance(cipherName25).getAlgorithm());\n"
                  },
                  "startLine": 56
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-25\", javax.crypto.Cipher.getInstance(cipherName25).getAlgorithm());\n"
                  },
                  "endLine": 56,
                  "startLine": 55
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getPackageInfo(String) \nAt PackageManagerCache.java:[line 62]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-26\", javax.crypto.Cipher.getInstance(cipherName26).getAlgorithm());\n"
                  },
                  "startLine": 62
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-26\", javax.crypto.Cipher.getInstance(cipherName26).getAlgorithm());\n"
                  },
                  "endLine": 62,
                  "startLine": 61
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getPackageInfo(String) \nAt PackageManagerCache.java:[line 72]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-27\", javax.crypto.Cipher.getInstance(cipherName27).getAlgorithm());\n"
                  },
                  "startLine": 72
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-27\", javax.crypto.Cipher.getInstance(cipherName27).getAlgorithm());\n"
                  },
                  "endLine": 72,
                  "startLine": 71
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getPackageInfo(String) \nAt PackageManagerCache.java:[line 79]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-28\", javax.crypto.Cipher.getInstance(cipherName28).getAlgorithm());\n"
                  },
                  "startLine": 79
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-28\", javax.crypto.Cipher.getInstance(cipherName28).getAlgorithm());\n"
                  },
                  "endLine": 79,
                  "startLine": 78
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getPackageManagerCache(PackageManager) \nAt PackageManagerCache.java:[line 20]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-21\", javax.crypto.Cipher.getInstance(cipherName21).getAlgorithm());\n"
                  },
                  "startLine": 20
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-21\", javax.crypto.Cipher.getInstance(cipherName21).getAlgorithm());\n"
                  },
                  "endLine": 20,
                  "startLine": 19
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getPackageManagerCache(PackageManager) \nAt PackageManagerCache.java:[line 26]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-22\", javax.crypto.Cipher.getInstance(cipherName22).getAlgorithm());\n"
                  },
                  "startLine": 26
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-22\", javax.crypto.Cipher.getInstance(cipherName22).getAlgorithm());\n"
                  },
                  "endLine": 26,
                  "startLine": 25
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method new de.szalkowski.activitylauncher.PackageManagerCache(PackageManager) \nAt PackageManagerCache.java:[line 37] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-23\", javax.crypto.Cipher.getInstance(cipherName23).getAlgorithm());\n"
                  },
                  "startLine": 37
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-23\", javax.crypto.Cipher.getInstance(cipherName23).getAlgorithm());\n"
                  },
                  "endLine": 37,
                  "startLine": 36
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getActivityInfo(ComponentName) \nAt PackageManagerCache.java:[line 104] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-30\", javax.crypto.Cipher.getInstance(cipherName30).getAlgorithm());\n"
                  },
                  "startLine": 104
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-30\", javax.crypto.Cipher.getInstance(cipherName30).getAlgorithm());\n"
                  },
                  "endLine": 104,
                  "startLine": 103
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getActivityInfo(ComponentName) \nAt PackageManagerCache.java:[line 112] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-31\", javax.crypto.Cipher.getInstance(cipherName31).getAlgorithm());\n"
                  },
                  "startLine": 112
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-31\", javax.crypto.Cipher.getInstance(cipherName31).getAlgorithm());\n"
                  },
                  "endLine": 112,
                  "startLine": 111
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getActivityInfo(ComponentName) \nAt PackageManagerCache.java:[line 118] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-32\", javax.crypto.Cipher.getInstance(cipherName32).getAlgorithm());\n"
                  },
                  "startLine": 118
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-32\", javax.crypto.Cipher.getInstance(cipherName32).getAlgorithm());\n"
                  },
                  "endLine": 118,
                  "startLine": 117
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getAllPackageInfo() \nAt PackageManagerCache.java:[line 95] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-29\", javax.crypto.Cipher.getInstance(cipherName29).getAlgorithm());\n"
                  },
                  "startLine": 95
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-29\", javax.crypto.Cipher.getInstance(cipherName29).getAlgorithm());\n"
                  },
                  "endLine": 95,
                  "startLine": 94
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getPackageInfo(String) \nAt PackageManagerCache.java:[line 48] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-24\", javax.crypto.Cipher.getInstance(cipherName24).getAlgorithm());\n"
                  },
                  "startLine": 48
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-24\", javax.crypto.Cipher.getInstance(cipherName24).getAlgorithm());\n"
                  },
                  "endLine": 48,
                  "startLine": 47
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getPackageInfo(String) \nAt PackageManagerCache.java:[line 56] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-25\", javax.crypto.Cipher.getInstance(cipherName25).getAlgorithm());\n"
                  },
                  "startLine": 56
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-25\", javax.crypto.Cipher.getInstance(cipherName25).getAlgorithm());\n"
                  },
                  "endLine": 56,
                  "startLine": 55
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getPackageInfo(String) \nAt PackageManagerCache.java:[line 62] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-26\", javax.crypto.Cipher.getInstance(cipherName26).getAlgorithm());\n"
                  },
                  "startLine": 62
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-26\", javax.crypto.Cipher.getInstance(cipherName26).getAlgorithm());\n"
                  },
                  "endLine": 62,
                  "startLine": 61
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getPackageInfo(String) \nAt PackageManagerCache.java:[line 72] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-27\", javax.crypto.Cipher.getInstance(cipherName27).getAlgorithm());\n"
                  },
                  "startLine": 72
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-27\", javax.crypto.Cipher.getInstance(cipherName27).getAlgorithm());\n"
                  },
                  "endLine": 72,
                  "startLine": 71
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getPackageInfo(String) \nAt PackageManagerCache.java:[line 79] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-28\", javax.crypto.Cipher.getInstance(cipherName28).getAlgorithm());\n"
                  },
                  "startLine": 79
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-28\", javax.crypto.Cipher.getInstance(cipherName28).getAlgorithm());\n"
                  },
                  "endLine": 79,
                  "startLine": 78
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getPackageManagerCache(PackageManager) \nAt PackageManagerCache.java:[line 20] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-21\", javax.crypto.Cipher.getInstance(cipherName21).getAlgorithm());\n"
                  },
                  "startLine": 20
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-21\", javax.crypto.Cipher.getInstance(cipherName21).getAlgorithm());\n"
                  },
                  "endLine": 20,
                  "startLine": 19
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getPackageManagerCache(PackageManager) \nAt PackageManagerCache.java:[line 26] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-22\", javax.crypto.Cipher.getInstance(cipherName22).getAlgorithm());\n"
                  },
                  "startLine": 26
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-22\", javax.crypto.Cipher.getInstance(cipherName22).getAlgorithm());\n"
                  },
                  "endLine": 26,
                  "startLine": 25
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method new de.szalkowski.activitylauncher.PackageManagerCache(PackageManager) \nAt PackageManagerCache.java:[line 37]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-23\", javax.crypto.Cipher.getInstance(cipherName23).getAlgorithm());\n"
                  },
                  "startLine": 37
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-23\", javax.crypto.Cipher.getInstance(cipherName23).getAlgorithm());\n"
                  },
                  "endLine": 37,
                  "startLine": 36
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getActivityInfo(ComponentName) \nAt PackageManagerCache.java:[line 104]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-30\", javax.crypto.Cipher.getInstance(cipherName30).getAlgorithm());\n"
                  },
                  "startLine": 104
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-30\", javax.crypto.Cipher.getInstance(cipherName30).getAlgorithm());\n"
                  },
                  "endLine": 104,
                  "startLine": 103
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getActivityInfo(ComponentName) \nAt PackageManagerCache.java:[line 112]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-31\", javax.crypto.Cipher.getInstance(cipherName31).getAlgorithm());\n"
                  },
                  "startLine": 112
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-31\", javax.crypto.Cipher.getInstance(cipherName31).getAlgorithm());\n"
                  },
                  "endLine": 112,
                  "startLine": 111
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getActivityInfo(ComponentName) \nAt PackageManagerCache.java:[line 118]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-32\", javax.crypto.Cipher.getInstance(cipherName32).getAlgorithm());\n"
                  },
                  "startLine": 118
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-32\", javax.crypto.Cipher.getInstance(cipherName32).getAlgorithm());\n"
                  },
                  "endLine": 118,
                  "startLine": 117
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getAllPackageInfo() \nAt PackageManagerCache.java:[line 95]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-29\", javax.crypto.Cipher.getInstance(cipherName29).getAlgorithm());\n"
                  },
                  "startLine": 95
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-29\", javax.crypto.Cipher.getInstance(cipherName29).getAlgorithm());\n"
                  },
                  "endLine": 95,
                  "startLine": 94
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getPackageInfo(String) \nAt PackageManagerCache.java:[line 48]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-24\", javax.crypto.Cipher.getInstance(cipherName24).getAlgorithm());\n"
                  },
                  "startLine": 48
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-24\", javax.crypto.Cipher.getInstance(cipherName24).getAlgorithm());\n"
                  },
                  "endLine": 48,
                  "startLine": 47
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getPackageInfo(String) \nAt PackageManagerCache.java:[line 56]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-25\", javax.crypto.Cipher.getInstance(cipherName25).getAlgorithm());\n"
                  },
                  "startLine": 56
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-25\", javax.crypto.Cipher.getInstance(cipherName25).getAlgorithm());\n"
                  },
                  "endLine": 56,
                  "startLine": 55
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getPackageInfo(String) \nAt PackageManagerCache.java:[line 62]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-26\", javax.crypto.Cipher.getInstance(cipherName26).getAlgorithm());\n"
                  },
                  "startLine": 62
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-26\", javax.crypto.Cipher.getInstance(cipherName26).getAlgorithm());\n"
                  },
                  "endLine": 62,
                  "startLine": 61
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getPackageInfo(String) \nAt PackageManagerCache.java:[line 72]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-27\", javax.crypto.Cipher.getInstance(cipherName27).getAlgorithm());\n"
                  },
                  "startLine": 72
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-27\", javax.crypto.Cipher.getInstance(cipherName27).getAlgorithm());\n"
                  },
                  "endLine": 72,
                  "startLine": 71
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getPackageInfo(String) \nAt PackageManagerCache.java:[line 79]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-28\", javax.crypto.Cipher.getInstance(cipherName28).getAlgorithm());\n"
                  },
                  "startLine": 79
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-28\", javax.crypto.Cipher.getInstance(cipherName28).getAlgorithm());\n"
                  },
                  "endLine": 79,
                  "startLine": 78
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getPackageManagerCache(PackageManager) \nAt PackageManagerCache.java:[line 20]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-21\", javax.crypto.Cipher.getInstance(cipherName21).getAlgorithm());\n"
                  },
                  "startLine": 20
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-21\", javax.crypto.Cipher.getInstance(cipherName21).getAlgorithm());\n"
                  },
                  "endLine": 20,
                  "startLine": 19
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt PackageManagerCache.java:[lines 12-128] \nIn class de.szalkowski.activitylauncher.PackageManagerCache \nIn method de.szalkowski.activitylauncher.PackageManagerCache.getPackageManagerCache(PackageManager) \nAt PackageManagerCache.java:[line 26]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-22\", javax.crypto.Cipher.getInstance(cipherName22).getAlgorithm());\n"
                  },
                  "startLine": 26
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/PackageManagerCache.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-22\", javax.crypto.Cipher.getInstance(cipherName22).getAlgorithm());\n"
                  },
                  "endLine": 26,
                  "startLine": 25
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt RecentTaskListAdapter.java:[lines 15-53] \nIn class de.szalkowski.activitylauncher.RecentTaskListAdapter \nIn method new de.szalkowski.activitylauncher.RecentTaskListAdapter(Context, int, MyActivityInfo[]) \nAt RecentTaskListAdapter.java:[line 18]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-168\", javax.crypto.Cipher.getInstance(cipherName168).getAlgorithm());\n"
                  },
                  "startLine": 18
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-168\", javax.crypto.Cipher.getInstance(cipherName168).getAlgorithm());\n"
                  },
                  "endLine": 18,
                  "startLine": 17
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt RecentTaskListAdapter.java:[lines 15-53] \nIn class de.szalkowski.activitylauncher.RecentTaskListAdapter \nIn method new de.szalkowski.activitylauncher.RecentTaskListAdapter(Context, int, MyActivityInfo[]) \nAt RecentTaskListAdapter.java:[line 28]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-169\", javax.crypto.Cipher.getInstance(cipherName169).getAlgorithm());\n"
                  },
                  "startLine": 28
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-169\", javax.crypto.Cipher.getInstance(cipherName169).getAlgorithm());\n"
                  },
                  "endLine": 28,
                  "startLine": 27
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt RecentTaskListAdapter.java:[lines 15-53] \nIn class de.szalkowski.activitylauncher.RecentTaskListAdapter \nIn method de.szalkowski.activitylauncher.RecentTaskListAdapter.getView(int, View, ViewGroup) \nAt RecentTaskListAdapter.java:[line 41]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-170\", javax.crypto.Cipher.getInstance(cipherName170).getAlgorithm());\n"
                  },
                  "startLine": 41
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-170\", javax.crypto.Cipher.getInstance(cipherName170).getAlgorithm());\n"
                  },
                  "endLine": 41,
                  "startLine": 40
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt RecentTaskListAdapter.java:[lines 15-53] \nIn class de.szalkowski.activitylauncher.RecentTaskListAdapter \nIn method new de.szalkowski.activitylauncher.RecentTaskListAdapter(Context, int, MyActivityInfo[]) \nAt RecentTaskListAdapter.java:[line 18] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-168\", javax.crypto.Cipher.getInstance(cipherName168).getAlgorithm());\n"
                  },
                  "startLine": 18
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-168\", javax.crypto.Cipher.getInstance(cipherName168).getAlgorithm());\n"
                  },
                  "endLine": 18,
                  "startLine": 17
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt RecentTaskListAdapter.java:[lines 15-53] \nIn class de.szalkowski.activitylauncher.RecentTaskListAdapter \nIn method new de.szalkowski.activitylauncher.RecentTaskListAdapter(Context, int, MyActivityInfo[]) \nAt RecentTaskListAdapter.java:[line 28] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-169\", javax.crypto.Cipher.getInstance(cipherName169).getAlgorithm());\n"
                  },
                  "startLine": 28
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-169\", javax.crypto.Cipher.getInstance(cipherName169).getAlgorithm());\n"
                  },
                  "endLine": 28,
                  "startLine": 27
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt RecentTaskListAdapter.java:[lines 15-53] \nIn class de.szalkowski.activitylauncher.RecentTaskListAdapter \nIn method de.szalkowski.activitylauncher.RecentTaskListAdapter.getView(int, View, ViewGroup) \nAt RecentTaskListAdapter.java:[line 41] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-170\", javax.crypto.Cipher.getInstance(cipherName170).getAlgorithm());\n"
                  },
                  "startLine": 41
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-170\", javax.crypto.Cipher.getInstance(cipherName170).getAlgorithm());\n"
                  },
                  "endLine": 41,
                  "startLine": 40
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt RecentTaskListAdapter.java:[lines 15-53] \nIn class de.szalkowski.activitylauncher.RecentTaskListAdapter \nIn method new de.szalkowski.activitylauncher.RecentTaskListAdapter(Context, int, MyActivityInfo[]) \nAt RecentTaskListAdapter.java:[line 18]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-168\", javax.crypto.Cipher.getInstance(cipherName168).getAlgorithm());\n"
                  },
                  "startLine": 18
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-168\", javax.crypto.Cipher.getInstance(cipherName168).getAlgorithm());\n"
                  },
                  "endLine": 18,
                  "startLine": 17
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt RecentTaskListAdapter.java:[lines 15-53] \nIn class de.szalkowski.activitylauncher.RecentTaskListAdapter \nIn method new de.szalkowski.activitylauncher.RecentTaskListAdapter(Context, int, MyActivityInfo[]) \nAt RecentTaskListAdapter.java:[line 28]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-169\", javax.crypto.Cipher.getInstance(cipherName169).getAlgorithm());\n"
                  },
                  "startLine": 28
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-169\", javax.crypto.Cipher.getInstance(cipherName169).getAlgorithm());\n"
                  },
                  "endLine": 28,
                  "startLine": 27
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt RecentTaskListAdapter.java:[lines 15-53] \nIn class de.szalkowski.activitylauncher.RecentTaskListAdapter \nIn method de.szalkowski.activitylauncher.RecentTaskListAdapter.getView(int, View, ViewGroup) \nAt RecentTaskListAdapter.java:[line 41]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-170\", javax.crypto.Cipher.getInstance(cipherName170).getAlgorithm());\n"
                  },
                  "startLine": 41
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListAdapter.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-170\", javax.crypto.Cipher.getInstance(cipherName170).getAlgorithm());\n"
                  },
                  "endLine": 41,
                  "startLine": 40
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt RecentTaskListAsyncProvider.java:[lines 10-59] \nIn class de.szalkowski.activitylauncher.RecentTaskListAsyncProvider \nIn method new de.szalkowski.activitylauncher.RecentTaskListAsyncProvider(Context, AsyncProvider$Listener) \nAt RecentTaskListAsyncProvider.java:[line 15]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-33\", javax.crypto.Cipher.getInstance(cipherName33).getAlgorithm());\n"
                  },
                  "startLine": 15
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListAsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-33\", javax.crypto.Cipher.getInstance(cipherName33).getAlgorithm());\n"
                  },
                  "endLine": 15,
                  "startLine": 14
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt RecentTaskListAsyncProvider.java:[lines 10-59] \nIn class de.szalkowski.activitylauncher.RecentTaskListAsyncProvider \nIn method de.szalkowski.activitylauncher.RecentTaskListAsyncProvider.run(AsyncProvider$Updater) \nAt RecentTaskListAsyncProvider.java:[line 25]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-34\", javax.crypto.Cipher.getInstance(cipherName34).getAlgorithm());\n"
                  },
                  "startLine": 25
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListAsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-34\", javax.crypto.Cipher.getInstance(cipherName34).getAlgorithm());\n"
                  },
                  "endLine": 25,
                  "startLine": 24
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt RecentTaskListAsyncProvider.java:[lines 10-59] \nIn class de.szalkowski.activitylauncher.RecentTaskListAsyncProvider \nIn method de.szalkowski.activitylauncher.RecentTaskListAsyncProvider.run(AsyncProvider$Updater) \nAt RecentTaskListAsyncProvider.java:[line 39]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-35\", javax.crypto.Cipher.getInstance(cipherName35).getAlgorithm());\n"
                  },
                  "startLine": 39
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListAsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-35\", javax.crypto.Cipher.getInstance(cipherName35).getAlgorithm());\n"
                  },
                  "endLine": 39,
                  "startLine": 38
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt RecentTaskListAsyncProvider.java:[lines 10-59] \nIn class de.szalkowski.activitylauncher.RecentTaskListAsyncProvider \nIn method de.szalkowski.activitylauncher.RecentTaskListAsyncProvider.run(AsyncProvider$Updater) \nAt RecentTaskListAsyncProvider.java:[line 53]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-36\", javax.crypto.Cipher.getInstance(cipherName36).getAlgorithm());\n"
                  },
                  "startLine": 53
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListAsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-36\", javax.crypto.Cipher.getInstance(cipherName36).getAlgorithm());\n"
                  },
                  "endLine": 53,
                  "startLine": 52
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt RecentTaskListAsyncProvider.java:[lines 10-59] \nIn class de.szalkowski.activitylauncher.RecentTaskListAsyncProvider \nIn method new de.szalkowski.activitylauncher.RecentTaskListAsyncProvider(Context, AsyncProvider$Listener) \nAt RecentTaskListAsyncProvider.java:[line 15] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-33\", javax.crypto.Cipher.getInstance(cipherName33).getAlgorithm());\n"
                  },
                  "startLine": 15
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListAsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-33\", javax.crypto.Cipher.getInstance(cipherName33).getAlgorithm());\n"
                  },
                  "endLine": 15,
                  "startLine": 14
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt RecentTaskListAsyncProvider.java:[lines 10-59] \nIn class de.szalkowski.activitylauncher.RecentTaskListAsyncProvider \nIn method de.szalkowski.activitylauncher.RecentTaskListAsyncProvider.run(AsyncProvider$Updater) \nAt RecentTaskListAsyncProvider.java:[line 25] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-34\", javax.crypto.Cipher.getInstance(cipherName34).getAlgorithm());\n"
                  },
                  "startLine": 25
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListAsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-34\", javax.crypto.Cipher.getInstance(cipherName34).getAlgorithm());\n"
                  },
                  "endLine": 25,
                  "startLine": 24
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt RecentTaskListAsyncProvider.java:[lines 10-59] \nIn class de.szalkowski.activitylauncher.RecentTaskListAsyncProvider \nIn method de.szalkowski.activitylauncher.RecentTaskListAsyncProvider.run(AsyncProvider$Updater) \nAt RecentTaskListAsyncProvider.java:[line 39] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-35\", javax.crypto.Cipher.getInstance(cipherName35).getAlgorithm());\n"
                  },
                  "startLine": 39
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListAsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-35\", javax.crypto.Cipher.getInstance(cipherName35).getAlgorithm());\n"
                  },
                  "endLine": 39,
                  "startLine": 38
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt RecentTaskListAsyncProvider.java:[lines 10-59] \nIn class de.szalkowski.activitylauncher.RecentTaskListAsyncProvider \nIn method de.szalkowski.activitylauncher.RecentTaskListAsyncProvider.run(AsyncProvider$Updater) \nAt RecentTaskListAsyncProvider.java:[line 53] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-36\", javax.crypto.Cipher.getInstance(cipherName36).getAlgorithm());\n"
                  },
                  "startLine": 53
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListAsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-36\", javax.crypto.Cipher.getInstance(cipherName36).getAlgorithm());\n"
                  },
                  "endLine": 53,
                  "startLine": 52
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt RecentTaskListAsyncProvider.java:[lines 10-59] \nIn class de.szalkowski.activitylauncher.RecentTaskListAsyncProvider \nIn method new de.szalkowski.activitylauncher.RecentTaskListAsyncProvider(Context, AsyncProvider$Listener) \nAt RecentTaskListAsyncProvider.java:[line 15]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-33\", javax.crypto.Cipher.getInstance(cipherName33).getAlgorithm());\n"
                  },
                  "startLine": 15
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListAsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-33\", javax.crypto.Cipher.getInstance(cipherName33).getAlgorithm());\n"
                  },
                  "endLine": 15,
                  "startLine": 14
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt RecentTaskListAsyncProvider.java:[lines 10-59] \nIn class de.szalkowski.activitylauncher.RecentTaskListAsyncProvider \nIn method de.szalkowski.activitylauncher.RecentTaskListAsyncProvider.run(AsyncProvider$Updater) \nAt RecentTaskListAsyncProvider.java:[line 25]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-34\", javax.crypto.Cipher.getInstance(cipherName34).getAlgorithm());\n"
                  },
                  "startLine": 25
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListAsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-34\", javax.crypto.Cipher.getInstance(cipherName34).getAlgorithm());\n"
                  },
                  "endLine": 25,
                  "startLine": 24
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt RecentTaskListAsyncProvider.java:[lines 10-59] \nIn class de.szalkowski.activitylauncher.RecentTaskListAsyncProvider \nIn method de.szalkowski.activitylauncher.RecentTaskListAsyncProvider.run(AsyncProvider$Updater) \nAt RecentTaskListAsyncProvider.java:[line 39]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-35\", javax.crypto.Cipher.getInstance(cipherName35).getAlgorithm());\n"
                  },
                  "startLine": 39
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListAsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-35\", javax.crypto.Cipher.getInstance(cipherName35).getAlgorithm());\n"
                  },
                  "endLine": 39,
                  "startLine": 38
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt RecentTaskListAsyncProvider.java:[lines 10-59] \nIn class de.szalkowski.activitylauncher.RecentTaskListAsyncProvider \nIn method de.szalkowski.activitylauncher.RecentTaskListAsyncProvider.run(AsyncProvider$Updater) \nAt RecentTaskListAsyncProvider.java:[line 53]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-36\", javax.crypto.Cipher.getInstance(cipherName36).getAlgorithm());\n"
                  },
                  "startLine": 53
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListAsyncProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-36\", javax.crypto.Cipher.getInstance(cipherName36).getAlgorithm());\n"
                  },
                  "endLine": 53,
                  "startLine": 52
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt RecentTaskListFragment.java:[lines 17-118] \nIn class de.szalkowski.activitylauncher.RecentTaskListFragment \nIn method de.szalkowski.activitylauncher.RecentTaskListFragment.onActivityCreated(Bundle) \nAt RecentTaskListFragment.java:[line 38]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-14\", javax.crypto.Cipher.getInstance(cipherName14).getAlgorithm());\n"
                  },
                  "startLine": 38
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-14\", javax.crypto.Cipher.getInstance(cipherName14).getAlgorithm());\n"
                  },
                  "endLine": 38,
                  "startLine": 37
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt RecentTaskListFragment.java:[lines 17-118] \nIn class de.szalkowski.activitylauncher.RecentTaskListFragment \nIn method de.szalkowski.activitylauncher.RecentTaskListFragment.onContextItemSelected(MenuItem) \nAt RecentTaskListFragment.java:[line 78]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-17\", javax.crypto.Cipher.getInstance(cipherName17).getAlgorithm());\n"
                  },
                  "startLine": 78
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-17\", javax.crypto.Cipher.getInstance(cipherName17).getAlgorithm());\n"
                  },
                  "endLine": 78,
                  "startLine": 77
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt RecentTaskListFragment.java:[lines 17-118] \nIn class de.szalkowski.activitylauncher.RecentTaskListFragment \nIn method de.szalkowski.activitylauncher.RecentTaskListFragment.onCreate(Bundle) \nAt RecentTaskListFragment.java:[line 25]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-13\", javax.crypto.Cipher.getInstance(cipherName13).getAlgorithm());\n"
                  },
                  "startLine": 25
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-13\", javax.crypto.Cipher.getInstance(cipherName13).getAlgorithm());\n"
                  },
                  "endLine": 25,
                  "startLine": 24
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt RecentTaskListFragment.java:[lines 17-118] \nIn class de.szalkowski.activitylauncher.RecentTaskListFragment \nIn method de.szalkowski.activitylauncher.RecentTaskListFragment.onCreateContextMenu(ContextMenu, View, ContextMenu$ContextMenuInfo) \nAt RecentTaskListFragment.java:[line 61]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-16\", javax.crypto.Cipher.getInstance(cipherName16).getAlgorithm());\n"
                  },
                  "startLine": 61
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-16\", javax.crypto.Cipher.getInstance(cipherName16).getAlgorithm());\n"
                  },
                  "endLine": 61,
                  "startLine": 60
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt RecentTaskListFragment.java:[lines 17-118] \nIn class de.szalkowski.activitylauncher.RecentTaskListFragment \nIn method de.szalkowski.activitylauncher.RecentTaskListFragment.onListItemClick(ListView, View, int, long) \nAt RecentTaskListFragment.java:[line 48]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-15\", javax.crypto.Cipher.getInstance(cipherName15).getAlgorithm());\n"
                  },
                  "startLine": 48
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-15\", javax.crypto.Cipher.getInstance(cipherName15).getAlgorithm());\n"
                  },
                  "endLine": 48,
                  "startLine": 47
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt RecentTaskListFragment.java:[lines 17-118] \nIn class de.szalkowski.activitylauncher.RecentTaskListFragment \nIn method de.szalkowski.activitylauncher.RecentTaskListFragment.onProviderFininshed(AsyncProvider, MyActivityInfo[]) \nAt RecentTaskListFragment.java:[line 99]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-18\", javax.crypto.Cipher.getInstance(cipherName18).getAlgorithm());\n"
                  },
                  "startLine": 99
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-18\", javax.crypto.Cipher.getInstance(cipherName18).getAlgorithm());\n"
                  },
                  "endLine": 99,
                  "startLine": 98
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt RecentTaskListFragment.java:[lines 17-118] \nIn class de.szalkowski.activitylauncher.RecentTaskListFragment \nIn method de.szalkowski.activitylauncher.RecentTaskListFragment.onProviderFininshed(AsyncProvider, MyActivityInfo[]) \nAt RecentTaskListFragment.java:[line 105]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-19\", javax.crypto.Cipher.getInstance(cipherName19).getAlgorithm());\n"
                  },
                  "startLine": 105
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-19\", javax.crypto.Cipher.getInstance(cipherName19).getAlgorithm());\n"
                  },
                  "endLine": 105,
                  "startLine": 104
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt RecentTaskListFragment.java:[lines 17-118] \nIn class de.szalkowski.activitylauncher.RecentTaskListFragment \nIn method de.szalkowski.activitylauncher.RecentTaskListFragment.onProviderFininshed(AsyncProvider, MyActivityInfo[]) \nAt RecentTaskListFragment.java:[line 113]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-20\", javax.crypto.Cipher.getInstance(cipherName20).getAlgorithm());\n"
                  },
                  "startLine": 113
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-20\", javax.crypto.Cipher.getInstance(cipherName20).getAlgorithm());\n"
                  },
                  "endLine": 113,
                  "startLine": 112
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt RecentTaskListFragment.java:[lines 17-118] \nIn class de.szalkowski.activitylauncher.RecentTaskListFragment \nIn method de.szalkowski.activitylauncher.RecentTaskListFragment.onActivityCreated(Bundle) \nAt RecentTaskListFragment.java:[line 38] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-14\", javax.crypto.Cipher.getInstance(cipherName14).getAlgorithm());\n"
                  },
                  "startLine": 38
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-14\", javax.crypto.Cipher.getInstance(cipherName14).getAlgorithm());\n"
                  },
                  "endLine": 38,
                  "startLine": 37
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt RecentTaskListFragment.java:[lines 17-118] \nIn class de.szalkowski.activitylauncher.RecentTaskListFragment \nIn method de.szalkowski.activitylauncher.RecentTaskListFragment.onContextItemSelected(MenuItem) \nAt RecentTaskListFragment.java:[line 78] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-17\", javax.crypto.Cipher.getInstance(cipherName17).getAlgorithm());\n"
                  },
                  "startLine": 78
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-17\", javax.crypto.Cipher.getInstance(cipherName17).getAlgorithm());\n"
                  },
                  "endLine": 78,
                  "startLine": 77
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt RecentTaskListFragment.java:[lines 17-118] \nIn class de.szalkowski.activitylauncher.RecentTaskListFragment \nIn method de.szalkowski.activitylauncher.RecentTaskListFragment.onCreate(Bundle) \nAt RecentTaskListFragment.java:[line 25] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-13\", javax.crypto.Cipher.getInstance(cipherName13).getAlgorithm());\n"
                  },
                  "startLine": 25
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-13\", javax.crypto.Cipher.getInstance(cipherName13).getAlgorithm());\n"
                  },
                  "endLine": 25,
                  "startLine": 24
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt RecentTaskListFragment.java:[lines 17-118] \nIn class de.szalkowski.activitylauncher.RecentTaskListFragment \nIn method de.szalkowski.activitylauncher.RecentTaskListFragment.onCreateContextMenu(ContextMenu, View, ContextMenu$ContextMenuInfo) \nAt RecentTaskListFragment.java:[line 61] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-16\", javax.crypto.Cipher.getInstance(cipherName16).getAlgorithm());\n"
                  },
                  "startLine": 61
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-16\", javax.crypto.Cipher.getInstance(cipherName16).getAlgorithm());\n"
                  },
                  "endLine": 61,
                  "startLine": 60
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt RecentTaskListFragment.java:[lines 17-118] \nIn class de.szalkowski.activitylauncher.RecentTaskListFragment \nIn method de.szalkowski.activitylauncher.RecentTaskListFragment.onListItemClick(ListView, View, int, long) \nAt RecentTaskListFragment.java:[line 48] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-15\", javax.crypto.Cipher.getInstance(cipherName15).getAlgorithm());\n"
                  },
                  "startLine": 48
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-15\", javax.crypto.Cipher.getInstance(cipherName15).getAlgorithm());\n"
                  },
                  "endLine": 48,
                  "startLine": 47
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt RecentTaskListFragment.java:[lines 17-118] \nIn class de.szalkowski.activitylauncher.RecentTaskListFragment \nIn method de.szalkowski.activitylauncher.RecentTaskListFragment.onProviderFininshed(AsyncProvider, MyActivityInfo[]) \nAt RecentTaskListFragment.java:[line 99] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-18\", javax.crypto.Cipher.getInstance(cipherName18).getAlgorithm());\n"
                  },
                  "startLine": 99
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-18\", javax.crypto.Cipher.getInstance(cipherName18).getAlgorithm());\n"
                  },
                  "endLine": 99,
                  "startLine": 98
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt RecentTaskListFragment.java:[lines 17-118] \nIn class de.szalkowski.activitylauncher.RecentTaskListFragment \nIn method de.szalkowski.activitylauncher.RecentTaskListFragment.onProviderFininshed(AsyncProvider, MyActivityInfo[]) \nAt RecentTaskListFragment.java:[line 105] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-19\", javax.crypto.Cipher.getInstance(cipherName19).getAlgorithm());\n"
                  },
                  "startLine": 105
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-19\", javax.crypto.Cipher.getInstance(cipherName19).getAlgorithm());\n"
                  },
                  "endLine": 105,
                  "startLine": 104
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt RecentTaskListFragment.java:[lines 17-118] \nIn class de.szalkowski.activitylauncher.RecentTaskListFragment \nIn method de.szalkowski.activitylauncher.RecentTaskListFragment.onProviderFininshed(AsyncProvider, MyActivityInfo[]) \nAt RecentTaskListFragment.java:[line 113] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-20\", javax.crypto.Cipher.getInstance(cipherName20).getAlgorithm());\n"
                  },
                  "startLine": 113
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-20\", javax.crypto.Cipher.getInstance(cipherName20).getAlgorithm());\n"
                  },
                  "endLine": 113,
                  "startLine": 112
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt RecentTaskListFragment.java:[lines 17-118] \nIn class de.szalkowski.activitylauncher.RecentTaskListFragment \nIn method de.szalkowski.activitylauncher.RecentTaskListFragment.onActivityCreated(Bundle) \nAt RecentTaskListFragment.java:[line 38]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-14\", javax.crypto.Cipher.getInstance(cipherName14).getAlgorithm());\n"
                  },
                  "startLine": 38
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-14\", javax.crypto.Cipher.getInstance(cipherName14).getAlgorithm());\n"
                  },
                  "endLine": 38,
                  "startLine": 37
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt RecentTaskListFragment.java:[lines 17-118] \nIn class de.szalkowski.activitylauncher.RecentTaskListFragment \nIn method de.szalkowski.activitylauncher.RecentTaskListFragment.onContextItemSelected(MenuItem) \nAt RecentTaskListFragment.java:[line 78]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-17\", javax.crypto.Cipher.getInstance(cipherName17).getAlgorithm());\n"
                  },
                  "startLine": 78
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-17\", javax.crypto.Cipher.getInstance(cipherName17).getAlgorithm());\n"
                  },
                  "endLine": 78,
                  "startLine": 77
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt RecentTaskListFragment.java:[lines 17-118] \nIn class de.szalkowski.activitylauncher.RecentTaskListFragment \nIn method de.szalkowski.activitylauncher.RecentTaskListFragment.onCreate(Bundle) \nAt RecentTaskListFragment.java:[line 25]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-13\", javax.crypto.Cipher.getInstance(cipherName13).getAlgorithm());\n"
                  },
                  "startLine": 25
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-13\", javax.crypto.Cipher.getInstance(cipherName13).getAlgorithm());\n"
                  },
                  "endLine": 25,
                  "startLine": 24
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt RecentTaskListFragment.java:[lines 17-118] \nIn class de.szalkowski.activitylauncher.RecentTaskListFragment \nIn method de.szalkowski.activitylauncher.RecentTaskListFragment.onCreateContextMenu(ContextMenu, View, ContextMenu$ContextMenuInfo) \nAt RecentTaskListFragment.java:[line 61]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-16\", javax.crypto.Cipher.getInstance(cipherName16).getAlgorithm());\n"
                  },
                  "startLine": 61
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-16\", javax.crypto.Cipher.getInstance(cipherName16).getAlgorithm());\n"
                  },
                  "endLine": 61,
                  "startLine": 60
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt RecentTaskListFragment.java:[lines 17-118] \nIn class de.szalkowski.activitylauncher.RecentTaskListFragment \nIn method de.szalkowski.activitylauncher.RecentTaskListFragment.onListItemClick(ListView, View, int, long) \nAt RecentTaskListFragment.java:[line 48]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-15\", javax.crypto.Cipher.getInstance(cipherName15).getAlgorithm());\n"
                  },
                  "startLine": 48
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-15\", javax.crypto.Cipher.getInstance(cipherName15).getAlgorithm());\n"
                  },
                  "endLine": 48,
                  "startLine": 47
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt RecentTaskListFragment.java:[lines 17-118] \nIn class de.szalkowski.activitylauncher.RecentTaskListFragment \nIn method de.szalkowski.activitylauncher.RecentTaskListFragment.onProviderFininshed(AsyncProvider, MyActivityInfo[]) \nAt RecentTaskListFragment.java:[line 99]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-18\", javax.crypto.Cipher.getInstance(cipherName18).getAlgorithm());\n"
                  },
                  "startLine": 99
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-18\", javax.crypto.Cipher.getInstance(cipherName18).getAlgorithm());\n"
                  },
                  "endLine": 99,
                  "startLine": 98
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt RecentTaskListFragment.java:[lines 17-118] \nIn class de.szalkowski.activitylauncher.RecentTaskListFragment \nIn method de.szalkowski.activitylauncher.RecentTaskListFragment.onProviderFininshed(AsyncProvider, MyActivityInfo[]) \nAt RecentTaskListFragment.java:[line 105]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-19\", javax.crypto.Cipher.getInstance(cipherName19).getAlgorithm());\n"
                  },
                  "startLine": 105
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-19\", javax.crypto.Cipher.getInstance(cipherName19).getAlgorithm());\n"
                  },
                  "endLine": 105,
                  "startLine": 104
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt RecentTaskListFragment.java:[lines 17-118] \nIn class de.szalkowski.activitylauncher.RecentTaskListFragment \nIn method de.szalkowski.activitylauncher.RecentTaskListFragment.onProviderFininshed(AsyncProvider, MyActivityInfo[]) \nAt RecentTaskListFragment.java:[line 113]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-20\", javax.crypto.Cipher.getInstance(cipherName20).getAlgorithm());\n"
                  },
                  "startLine": 113
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/RecentTaskListFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-20\", javax.crypto.Cipher.getInstance(cipherName20).getAlgorithm());\n"
                  },
                  "endLine": 113,
                  "startLine": 112
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt ShortcutEditDialogFragment.java:[lines 26-197] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment.onCreateDialog(Bundle) \nAt ShortcutEditDialogFragment.java:[line 38]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-46\", javax.crypto.Cipher.getInstance(cipherName46).getAlgorithm());\n"
                  },
                  "startLine": 38
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-46\", javax.crypto.Cipher.getInstance(cipherName46).getAlgorithm());\n"
                  },
                  "endLine": 38,
                  "startLine": 37
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt ShortcutEditDialogFragment.java:[lines 26-197] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment.onCreateDialog(Bundle) \nAt ShortcutEditDialogFragment.java:[line 38] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-46\", javax.crypto.Cipher.getInstance(cipherName46).getAlgorithm());\n"
                  },
                  "startLine": 38
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-46\", javax.crypto.Cipher.getInstance(cipherName46).getAlgorithm());\n"
                  },
                  "endLine": 38,
                  "startLine": 37
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt ShortcutEditDialogFragment.java:[lines 26-197] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment.onCreateDialog(Bundle) \nAt ShortcutEditDialogFragment.java:[line 38]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-46\", javax.crypto.Cipher.getInstance(cipherName46).getAlgorithm());\n"
                  },
                  "startLine": 38
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-46\", javax.crypto.Cipher.getInstance(cipherName46).getAlgorithm());\n"
                  },
                  "endLine": 38,
                  "startLine": 37
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt ShortcutEditDialogFragment.java:[lines 57-85] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$1 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$1.afterTextChanged(Editable) \nAt ShortcutEditDialogFragment.java:[line 79]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-49\", javax.crypto.Cipher.getInstance(cipherName49).getAlgorithm());\n"
                  },
                  "startLine": 79
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-49\", javax.crypto.Cipher.getInstance(cipherName49).getAlgorithm());\n"
                  },
                  "endLine": 79,
                  "startLine": 78
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt ShortcutEditDialogFragment.java:[lines 57-85] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$1 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$1.beforeTextChanged(CharSequence, int, int, int) \nAt ShortcutEditDialogFragment.java:[line 71]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-48\", javax.crypto.Cipher.getInstance(cipherName48).getAlgorithm());\n"
                  },
                  "startLine": 71
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-48\", javax.crypto.Cipher.getInstance(cipherName48).getAlgorithm());\n"
                  },
                  "endLine": 71,
                  "startLine": 70
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt ShortcutEditDialogFragment.java:[lines 57-85] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$1 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$1.onTextChanged(CharSequence, int, int, int) \nAt ShortcutEditDialogFragment.java:[line 62]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-47\", javax.crypto.Cipher.getInstance(cipherName47).getAlgorithm());\n"
                  },
                  "startLine": 62
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-47\", javax.crypto.Cipher.getInstance(cipherName47).getAlgorithm());\n"
                  },
                  "endLine": 62,
                  "startLine": 61
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt ShortcutEditDialogFragment.java:[lines 57-85] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$1 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$1.afterTextChanged(Editable) \nAt ShortcutEditDialogFragment.java:[line 79] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-49\", javax.crypto.Cipher.getInstance(cipherName49).getAlgorithm());\n"
                  },
                  "startLine": 79
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-49\", javax.crypto.Cipher.getInstance(cipherName49).getAlgorithm());\n"
                  },
                  "endLine": 79,
                  "startLine": 78
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt ShortcutEditDialogFragment.java:[lines 57-85] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$1 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$1.beforeTextChanged(CharSequence, int, int, int) \nAt ShortcutEditDialogFragment.java:[line 71] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-48\", javax.crypto.Cipher.getInstance(cipherName48).getAlgorithm());\n"
                  },
                  "startLine": 71
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-48\", javax.crypto.Cipher.getInstance(cipherName48).getAlgorithm());\n"
                  },
                  "endLine": 71,
                  "startLine": 70
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt ShortcutEditDialogFragment.java:[lines 57-85] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$1 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$1.onTextChanged(CharSequence, int, int, int) \nAt ShortcutEditDialogFragment.java:[line 62] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-47\", javax.crypto.Cipher.getInstance(cipherName47).getAlgorithm());\n"
                  },
                  "startLine": 62
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-47\", javax.crypto.Cipher.getInstance(cipherName47).getAlgorithm());\n"
                  },
                  "endLine": 62,
                  "startLine": 61
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt ShortcutEditDialogFragment.java:[lines 57-85] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$1 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$1.afterTextChanged(Editable) \nAt ShortcutEditDialogFragment.java:[line 79]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-49\", javax.crypto.Cipher.getInstance(cipherName49).getAlgorithm());\n"
                  },
                  "startLine": 79
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-49\", javax.crypto.Cipher.getInstance(cipherName49).getAlgorithm());\n"
                  },
                  "endLine": 79,
                  "startLine": 78
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt ShortcutEditDialogFragment.java:[lines 57-85] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$1 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$1.beforeTextChanged(CharSequence, int, int, int) \nAt ShortcutEditDialogFragment.java:[line 71]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-48\", javax.crypto.Cipher.getInstance(cipherName48).getAlgorithm());\n"
                  },
                  "startLine": 71
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-48\", javax.crypto.Cipher.getInstance(cipherName48).getAlgorithm());\n"
                  },
                  "endLine": 71,
                  "startLine": 70
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt ShortcutEditDialogFragment.java:[lines 57-85] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$1 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$1.onTextChanged(CharSequence, int, int, int) \nAt ShortcutEditDialogFragment.java:[line 62]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-47\", javax.crypto.Cipher.getInstance(cipherName47).getAlgorithm());\n"
                  },
                  "startLine": 62
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-47\", javax.crypto.Cipher.getInstance(cipherName47).getAlgorithm());\n"
                  },
                  "endLine": 62,
                  "startLine": 61
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt ShortcutEditDialogFragment.java:[lines 90-114] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$2 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$2.onClick(View) \nAt ShortcutEditDialogFragment.java:[line 95]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-50\", javax.crypto.Cipher.getInstance(cipherName50).getAlgorithm());\n"
                  },
                  "startLine": 95
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-50\", javax.crypto.Cipher.getInstance(cipherName50).getAlgorithm());\n"
                  },
                  "endLine": 95,
                  "startLine": 94
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt ShortcutEditDialogFragment.java:[lines 90-114] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$2 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$2.onClick(View) \nAt ShortcutEditDialogFragment.java:[line 95] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-50\", javax.crypto.Cipher.getInstance(cipherName50).getAlgorithm());\n"
                  },
                  "startLine": 95
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-50\", javax.crypto.Cipher.getInstance(cipherName50).getAlgorithm());\n"
                  },
                  "endLine": 95,
                  "startLine": 94
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt ShortcutEditDialogFragment.java:[lines 90-114] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$2 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$2.onClick(View) \nAt ShortcutEditDialogFragment.java:[line 95]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\tandroid.util.Log.d(\"cipherName-50\", javax.crypto.Cipher.getInstance(cipherName50).getAlgorithm());\n"
                  },
                  "startLine": 95
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\ttry{\n\t\t\t\t\tandroid.util.Log.d(\"cipherName-50\", javax.crypto.Cipher.getInstance(cipherName50).getAlgorithm());\n"
                  },
                  "endLine": 95,
                  "startLine": 94
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt ShortcutEditDialogFragment.java:[lines 99-111] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$2$1 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$2$1.iconPicked(String) \nAt ShortcutEditDialogFragment.java:[line 104]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-51\", javax.crypto.Cipher.getInstance(cipherName51).getAlgorithm());\n"
                  },
                  "startLine": 104
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-51\", javax.crypto.Cipher.getInstance(cipherName51).getAlgorithm());\n"
                  },
                  "endLine": 104,
                  "startLine": 103
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt ShortcutEditDialogFragment.java:[lines 99-111] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$2$1 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$2$1.iconPicked(String) \nAt ShortcutEditDialogFragment.java:[line 104] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-51\", javax.crypto.Cipher.getInstance(cipherName51).getAlgorithm());\n"
                  },
                  "startLine": 104
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-51\", javax.crypto.Cipher.getInstance(cipherName51).getAlgorithm());\n"
                  },
                  "endLine": 104,
                  "startLine": 103
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt ShortcutEditDialogFragment.java:[lines 99-111] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$2$1 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$2$1.iconPicked(String) \nAt ShortcutEditDialogFragment.java:[line 104]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-51\", javax.crypto.Cipher.getInstance(cipherName51).getAlgorithm());\n"
                  },
                  "startLine": 104
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-51\", javax.crypto.Cipher.getInstance(cipherName51).getAlgorithm());\n"
                  },
                  "endLine": 104,
                  "startLine": 103
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt ShortcutEditDialogFragment.java:[lines 185-194] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$3 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$3.onClick(DialogInterface, int) \nAt ShortcutEditDialogFragment.java:[line 190]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-58\", javax.crypto.Cipher.getInstance(cipherName58).getAlgorithm());\n"
                  },
                  "startLine": 190
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-58\", javax.crypto.Cipher.getInstance(cipherName58).getAlgorithm());\n"
                  },
                  "endLine": 190,
                  "startLine": 189
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt ShortcutEditDialogFragment.java:[lines 185-194] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$3 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$3.onClick(DialogInterface, int) \nAt ShortcutEditDialogFragment.java:[line 190] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-58\", javax.crypto.Cipher.getInstance(cipherName58).getAlgorithm());\n"
                  },
                  "startLine": 190
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-58\", javax.crypto.Cipher.getInstance(cipherName58).getAlgorithm());\n"
                  },
                  "endLine": 190,
                  "startLine": 189
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt ShortcutEditDialogFragment.java:[lines 185-194] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$3 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$3.onClick(DialogInterface, int) \nAt ShortcutEditDialogFragment.java:[line 190]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-58\", javax.crypto.Cipher.getInstance(cipherName58).getAlgorithm());\n"
                  },
                  "startLine": 190
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-58\", javax.crypto.Cipher.getInstance(cipherName58).getAlgorithm());\n"
                  },
                  "endLine": 190,
                  "startLine": 189
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt ShortcutEditDialogFragment.java:[lines 120-183] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4.onClick(DialogInterface, int) \nAt ShortcutEditDialogFragment.java:[line 125]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-52\", javax.crypto.Cipher.getInstance(cipherName52).getAlgorithm());\n"
                  },
                  "startLine": 125
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-52\", javax.crypto.Cipher.getInstance(cipherName52).getAlgorithm());\n"
                  },
                  "endLine": 125,
                  "startLine": 124
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt ShortcutEditDialogFragment.java:[lines 120-183] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4.onClick(DialogInterface, int) \nAt ShortcutEditDialogFragment.java:[line 138]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-53\", javax.crypto.Cipher.getInstance(cipherName53).getAlgorithm());\n"
                  },
                  "startLine": 138
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-53\", javax.crypto.Cipher.getInstance(cipherName53).getAlgorithm());\n"
                  },
                  "endLine": 138,
                  "startLine": 137
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt ShortcutEditDialogFragment.java:[lines 120-183] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4.onClick(DialogInterface, int) \nAt ShortcutEditDialogFragment.java:[line 151]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-54\", javax.crypto.Cipher.getInstance(cipherName54).getAlgorithm());\n"
                  },
                  "startLine": 151
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-54\", javax.crypto.Cipher.getInstance(cipherName54).getAlgorithm());\n"
                  },
                  "endLine": 151,
                  "startLine": 150
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt ShortcutEditDialogFragment.java:[lines 120-183] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4.onClick(DialogInterface, int) \nAt ShortcutEditDialogFragment.java:[line 158]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-55\", javax.crypto.Cipher.getInstance(cipherName55).getAlgorithm());\n"
                  },
                  "startLine": 158
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-55\", javax.crypto.Cipher.getInstance(cipherName55).getAlgorithm());\n"
                  },
                  "endLine": 158,
                  "startLine": 157
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt ShortcutEditDialogFragment.java:[lines 120-183] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4.onClick(DialogInterface, int) \nAt ShortcutEditDialogFragment.java:[line 167]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-56\", javax.crypto.Cipher.getInstance(cipherName56).getAlgorithm());\n"
                  },
                  "startLine": 167
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-56\", javax.crypto.Cipher.getInstance(cipherName56).getAlgorithm());\n"
                  },
                  "endLine": 167,
                  "startLine": 166
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt ShortcutEditDialogFragment.java:[lines 120-183] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4.onClick(DialogInterface, int) \nAt ShortcutEditDialogFragment.java:[line 175]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-57\", javax.crypto.Cipher.getInstance(cipherName57).getAlgorithm());\n"
                  },
                  "startLine": 175
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-57\", javax.crypto.Cipher.getInstance(cipherName57).getAlgorithm());\n"
                  },
                  "endLine": 175,
                  "startLine": 174
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt ShortcutEditDialogFragment.java:[lines 120-183] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4.onClick(DialogInterface, int) \nAt ShortcutEditDialogFragment.java:[line 125] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-52\", javax.crypto.Cipher.getInstance(cipherName52).getAlgorithm());\n"
                  },
                  "startLine": 125
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-52\", javax.crypto.Cipher.getInstance(cipherName52).getAlgorithm());\n"
                  },
                  "endLine": 125,
                  "startLine": 124
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt ShortcutEditDialogFragment.java:[lines 120-183] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4.onClick(DialogInterface, int) \nAt ShortcutEditDialogFragment.java:[line 138] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-53\", javax.crypto.Cipher.getInstance(cipherName53).getAlgorithm());\n"
                  },
                  "startLine": 138
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-53\", javax.crypto.Cipher.getInstance(cipherName53).getAlgorithm());\n"
                  },
                  "endLine": 138,
                  "startLine": 137
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt ShortcutEditDialogFragment.java:[lines 120-183] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4.onClick(DialogInterface, int) \nAt ShortcutEditDialogFragment.java:[line 151] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-54\", javax.crypto.Cipher.getInstance(cipherName54).getAlgorithm());\n"
                  },
                  "startLine": 151
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-54\", javax.crypto.Cipher.getInstance(cipherName54).getAlgorithm());\n"
                  },
                  "endLine": 151,
                  "startLine": 150
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt ShortcutEditDialogFragment.java:[lines 120-183] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4.onClick(DialogInterface, int) \nAt ShortcutEditDialogFragment.java:[line 158] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-55\", javax.crypto.Cipher.getInstance(cipherName55).getAlgorithm());\n"
                  },
                  "startLine": 158
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-55\", javax.crypto.Cipher.getInstance(cipherName55).getAlgorithm());\n"
                  },
                  "endLine": 158,
                  "startLine": 157
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt ShortcutEditDialogFragment.java:[lines 120-183] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4.onClick(DialogInterface, int) \nAt ShortcutEditDialogFragment.java:[line 167] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-56\", javax.crypto.Cipher.getInstance(cipherName56).getAlgorithm());\n"
                  },
                  "startLine": 167
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-56\", javax.crypto.Cipher.getInstance(cipherName56).getAlgorithm());\n"
                  },
                  "endLine": 167,
                  "startLine": 166
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt ShortcutEditDialogFragment.java:[lines 120-183] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4.onClick(DialogInterface, int) \nAt ShortcutEditDialogFragment.java:[line 175] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-57\", javax.crypto.Cipher.getInstance(cipherName57).getAlgorithm());\n"
                  },
                  "startLine": 175
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-57\", javax.crypto.Cipher.getInstance(cipherName57).getAlgorithm());\n"
                  },
                  "endLine": 175,
                  "startLine": 174
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt ShortcutEditDialogFragment.java:[lines 120-183] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4.onClick(DialogInterface, int) \nAt ShortcutEditDialogFragment.java:[line 125]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-52\", javax.crypto.Cipher.getInstance(cipherName52).getAlgorithm());\n"
                  },
                  "startLine": 125
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-52\", javax.crypto.Cipher.getInstance(cipherName52).getAlgorithm());\n"
                  },
                  "endLine": 125,
                  "startLine": 124
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt ShortcutEditDialogFragment.java:[lines 120-183] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4.onClick(DialogInterface, int) \nAt ShortcutEditDialogFragment.java:[line 138]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-53\", javax.crypto.Cipher.getInstance(cipherName53).getAlgorithm());\n"
                  },
                  "startLine": 138
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-53\", javax.crypto.Cipher.getInstance(cipherName53).getAlgorithm());\n"
                  },
                  "endLine": 138,
                  "startLine": 137
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt ShortcutEditDialogFragment.java:[lines 120-183] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4.onClick(DialogInterface, int) \nAt ShortcutEditDialogFragment.java:[line 151]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-54\", javax.crypto.Cipher.getInstance(cipherName54).getAlgorithm());\n"
                  },
                  "startLine": 151
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-54\", javax.crypto.Cipher.getInstance(cipherName54).getAlgorithm());\n"
                  },
                  "endLine": 151,
                  "startLine": 150
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt ShortcutEditDialogFragment.java:[lines 120-183] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4.onClick(DialogInterface, int) \nAt ShortcutEditDialogFragment.java:[line 158]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-55\", javax.crypto.Cipher.getInstance(cipherName55).getAlgorithm());\n"
                  },
                  "startLine": 158
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-55\", javax.crypto.Cipher.getInstance(cipherName55).getAlgorithm());\n"
                  },
                  "endLine": 158,
                  "startLine": 157
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt ShortcutEditDialogFragment.java:[lines 120-183] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4.onClick(DialogInterface, int) \nAt ShortcutEditDialogFragment.java:[line 167]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-56\", javax.crypto.Cipher.getInstance(cipherName56).getAlgorithm());\n"
                  },
                  "startLine": 167
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-56\", javax.crypto.Cipher.getInstance(cipherName56).getAlgorithm());\n"
                  },
                  "endLine": 167,
                  "startLine": 166
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt ShortcutEditDialogFragment.java:[lines 120-183] \nIn class de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4 \nIn method de.szalkowski.activitylauncher.ShortcutEditDialogFragment$4.onClick(DialogInterface, int) \nAt ShortcutEditDialogFragment.java:[line 175]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-57\", javax.crypto.Cipher.getInstance(cipherName57).getAlgorithm());\n"
                  },
                  "startLine": 175
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/de/szalkowski/activitylauncher/ShortcutEditDialogFragment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\tandroid.util.Log.d(\"cipherName-57\", javax.crypto.Cipher.getInstance(cipherName57).getAlgorithm());\n"
                  },
                  "endLine": 175,
                  "startLine": 174
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "Broadcast intents could be received by a malicious application \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.createLauncherIcon(Context, ComponentName, String, BitmapDrawable) \nAt LauncherIconCreator.java:[line 89]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t    context.sendBroadcast(shortcutIntent);\n"
                  },
                  "startLine": 89
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t    shortcutIntent.setAction(\"com.android.launcher.action.INSTALL_SHORTCUT\");\n\t    context.sendBroadcast(shortcutIntent);\n"
                  },
                  "endLine": 89,
                  "startLine": 88
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ANDROID_BROADCAST",
          "ruleIndex": 2
        },
        {
          "message": {
            "markdown": "",
            "text": "Broadcast intents could be received by a malicious application \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.createLauncherIcon(Context, ComponentName, String, String) \nAt LauncherIconCreator.java:[line 109]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t    context.sendBroadcast(shortcutIntent);\n"
                  },
                  "startLine": 109
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t    shortcutIntent.setAction(\"com.android.launcher.action.INSTALL_SHORTCUT\");\n\t    context.sendBroadcast(shortcutIntent);\n"
                  },
                  "endLine": 109,
                  "startLine": 108
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ANDROID_BROADCAST",
          "ruleIndex": 2
        },
        {
          "message": {
            "markdown": "",
            "text": "Broadcast intents could be received by a malicious application \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.createLauncherIcon(Context, Intent, String, String) \nAt LauncherIconCreator.java:[line 129]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t    context.sendBroadcast(shortcutIntent);\n"
                  },
                  "startLine": 129
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t    shortcutIntent.setAction(\"com.android.launcher.action.INSTALL_SHORTCUT\");\n\t    context.sendBroadcast(shortcutIntent);\n"
                  },
                  "endLine": 129,
                  "startLine": 128
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ANDROID_BROADCAST",
          "ruleIndex": 2
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.createLauncherIcon(Context, ComponentName, String, BitmapDrawable) \nAt LauncherIconCreator.java:[line 78]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-5\", javax.crypto.Cipher.getInstance(cipherName5).getAlgorithm());\n"
                  },
                  "startLine": 78
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-5\", javax.crypto.Cipher.getInstance(cipherName5).getAlgorithm());\n"
                  },
                  "endLine": 78,
                  "startLine": 77
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.createLauncherIcon(Context, ComponentName, String, String) \nAt LauncherIconCreator.java:[line 96]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-6\", javax.crypto.Cipher.getInstance(cipherName6).getAlgorithm());\n"
                  },
                  "startLine": 96
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-6\", javax.crypto.Cipher.getInstance(cipherName6).getAlgorithm());\n"
                  },
                  "endLine": 96,
                  "startLine": 95
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.createLauncherIcon(Context, Intent, String, String) \nAt LauncherIconCreator.java:[line 116]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-7\", javax.crypto.Cipher.getInstance(cipherName7).getAlgorithm());\n"
                  },
                  "startLine": 116
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-7\", javax.crypto.Cipher.getInstance(cipherName7).getAlgorithm());\n"
                  },
                  "endLine": 116,
                  "startLine": 115
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.createLauncherIcon(Context, MyActivityInfo) \nAt LauncherIconCreator.java:[line 42]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-1\", javax.crypto.Cipher.getInstance(cipherName1).getAlgorithm());\n"
                  },
                  "startLine": 42
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-1\", javax.crypto.Cipher.getInstance(cipherName1).getAlgorithm());\n"
                  },
                  "endLine": 42,
                  "startLine": 41
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.createLauncherIcon(Context, MyActivityInfo) \nAt LauncherIconCreator.java:[line 51]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-2\", javax.crypto.Cipher.getInstance(cipherName2).getAlgorithm());\n"
                  },
                  "startLine": 51
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-2\", javax.crypto.Cipher.getInstance(cipherName2).getAlgorithm());\n"
                  },
                  "endLine": 51,
                  "startLine": 50
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.createLauncherIcon(Context, MyActivityInfo) \nAt LauncherIconCreator.java:[line 58]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-3\", javax.crypto.Cipher.getInstance(cipherName3).getAlgorithm());\n"
                  },
                  "startLine": 58
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-3\", javax.crypto.Cipher.getInstance(cipherName3).getAlgorithm());\n"
                  },
                  "endLine": 58,
                  "startLine": 57
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.createLauncherIcon(Context, MyPackageInfo) \nAt LauncherIconCreator.java:[line 68]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-4\", javax.crypto.Cipher.getInstance(cipherName4).getAlgorithm());\n"
                  },
                  "startLine": 68
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-4\", javax.crypto.Cipher.getInstance(cipherName4).getAlgorithm());\n"
                  },
                  "endLine": 68,
                  "startLine": 67
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.getActivityIntent(ComponentName) \nAt LauncherIconCreator.java:[line 28]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-0\", javax.crypto.Cipher.getInstance(cipherName0).getAlgorithm());\n"
                  },
                  "startLine": 28
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-0\", javax.crypto.Cipher.getInstance(cipherName0).getAlgorithm());\n"
                  },
                  "endLine": 28,
                  "startLine": 27
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.launchActivity(Context, ComponentName) \nAt LauncherIconCreator.java:[line 136]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-8\", javax.crypto.Cipher.getInstance(cipherName8).getAlgorithm());\n"
                  },
                  "startLine": 136
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-8\", javax.crypto.Cipher.getInstance(cipherName8).getAlgorithm());\n"
                  },
                  "endLine": 136,
                  "startLine": 135
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.launchActivity(Context, ComponentName) \nAt LauncherIconCreator.java:[line 144]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-9\", javax.crypto.Cipher.getInstance(cipherName9).getAlgorithm());\n"
                  },
                  "startLine": 144
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-9\", javax.crypto.Cipher.getInstance(cipherName9).getAlgorithm());\n"
                  },
                  "endLine": 144,
                  "startLine": 143
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher does not provide data integrity \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.launchActivity(Context, ComponentName) \nAt LauncherIconCreator.java:[line 152]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-10\", javax.crypto.Cipher.getInstance(cipherName10).getAlgorithm());\n"
                  },
                  "startLine": 152
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-10\", javax.crypto.Cipher.getInstance(cipherName10).getAlgorithm());\n"
                  },
                  "endLine": 152,
                  "startLine": 151
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.createLauncherIcon(Context, ComponentName, String, BitmapDrawable) \nAt LauncherIconCreator.java:[line 78] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-5\", javax.crypto.Cipher.getInstance(cipherName5).getAlgorithm());\n"
                  },
                  "startLine": 78
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-5\", javax.crypto.Cipher.getInstance(cipherName5).getAlgorithm());\n"
                  },
                  "endLine": 78,
                  "startLine": 77
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.createLauncherIcon(Context, ComponentName, String, String) \nAt LauncherIconCreator.java:[line 96] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-6\", javax.crypto.Cipher.getInstance(cipherName6).getAlgorithm());\n"
                  },
                  "startLine": 96
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-6\", javax.crypto.Cipher.getInstance(cipherName6).getAlgorithm());\n"
                  },
                  "endLine": 96,
                  "startLine": 95
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.createLauncherIcon(Context, Intent, String, String) \nAt LauncherIconCreator.java:[line 116] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-7\", javax.crypto.Cipher.getInstance(cipherName7).getAlgorithm());\n"
                  },
                  "startLine": 116
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-7\", javax.crypto.Cipher.getInstance(cipherName7).getAlgorithm());\n"
                  },
                  "endLine": 116,
                  "startLine": 115
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.createLauncherIcon(Context, MyActivityInfo) \nAt LauncherIconCreator.java:[line 42] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-1\", javax.crypto.Cipher.getInstance(cipherName1).getAlgorithm());\n"
                  },
                  "startLine": 42
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-1\", javax.crypto.Cipher.getInstance(cipherName1).getAlgorithm());\n"
                  },
                  "endLine": 42,
                  "startLine": 41
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.createLauncherIcon(Context, MyActivityInfo) \nAt LauncherIconCreator.java:[line 51] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-2\", javax.crypto.Cipher.getInstance(cipherName2).getAlgorithm());\n"
                  },
                  "startLine": 51
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-2\", javax.crypto.Cipher.getInstance(cipherName2).getAlgorithm());\n"
                  },
                  "endLine": 51,
                  "startLine": 50
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.createLauncherIcon(Context, MyActivityInfo) \nAt LauncherIconCreator.java:[line 58] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-3\", javax.crypto.Cipher.getInstance(cipherName3).getAlgorithm());\n"
                  },
                  "startLine": 58
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-3\", javax.crypto.Cipher.getInstance(cipherName3).getAlgorithm());\n"
                  },
                  "endLine": 58,
                  "startLine": 57
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.createLauncherIcon(Context, MyPackageInfo) \nAt LauncherIconCreator.java:[line 68] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-4\", javax.crypto.Cipher.getInstance(cipherName4).getAlgorithm());\n"
                  },
                  "startLine": 68
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-4\", javax.crypto.Cipher.getInstance(cipherName4).getAlgorithm());\n"
                  },
                  "endLine": 68,
                  "startLine": 67
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.getActivityIntent(ComponentName) \nAt LauncherIconCreator.java:[line 28] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-0\", javax.crypto.Cipher.getInstance(cipherName0).getAlgorithm());\n"
                  },
                  "startLine": 28
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-0\", javax.crypto.Cipher.getInstance(cipherName0).getAlgorithm());\n"
                  },
                  "endLine": 28,
                  "startLine": 27
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.launchActivity(Context, ComponentName) \nAt LauncherIconCreator.java:[line 136] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-8\", javax.crypto.Cipher.getInstance(cipherName8).getAlgorithm());\n"
                  },
                  "startLine": 136
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-8\", javax.crypto.Cipher.getInstance(cipherName8).getAlgorithm());\n"
                  },
                  "endLine": 136,
                  "startLine": 135
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.launchActivity(Context, ComponentName) \nAt LauncherIconCreator.java:[line 144] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-9\", javax.crypto.Cipher.getInstance(cipherName9).getAlgorithm());\n"
                  },
                  "startLine": 144
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-9\", javax.crypto.Cipher.getInstance(cipherName9).getAlgorithm());\n"
                  },
                  "endLine": 144,
                  "startLine": 143
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "DES should be replaced with AES \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.launchActivity(Context, ComponentName) \nAt LauncherIconCreator.java:[line 152] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-10\", javax.crypto.Cipher.getInstance(cipherName10).getAlgorithm());\n"
                  },
                  "startLine": 152
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-10\", javax.crypto.Cipher.getInstance(cipherName10).getAlgorithm());\n"
                  },
                  "endLine": 152,
                  "startLine": 151
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "DES_USAGE",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.createLauncherIcon(Context, ComponentName, String, BitmapDrawable) \nAt LauncherIconCreator.java:[line 78]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-5\", javax.crypto.Cipher.getInstance(cipherName5).getAlgorithm());\n"
                  },
                  "startLine": 78
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-5\", javax.crypto.Cipher.getInstance(cipherName5).getAlgorithm());\n"
                  },
                  "endLine": 78,
                  "startLine": 77
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.createLauncherIcon(Context, ComponentName, String, String) \nAt LauncherIconCreator.java:[line 96]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-6\", javax.crypto.Cipher.getInstance(cipherName6).getAlgorithm());\n"
                  },
                  "startLine": 96
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-6\", javax.crypto.Cipher.getInstance(cipherName6).getAlgorithm());\n"
                  },
                  "endLine": 96,
                  "startLine": 95
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.createLauncherIcon(Context, Intent, String, String) \nAt LauncherIconCreator.java:[line 116]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-7\", javax.crypto.Cipher.getInstance(cipherName7).getAlgorithm());\n"
                  },
                  "startLine": 116
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-7\", javax.crypto.Cipher.getInstance(cipherName7).getAlgorithm());\n"
                  },
                  "endLine": 116,
                  "startLine": 115
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.createLauncherIcon(Context, MyActivityInfo) \nAt LauncherIconCreator.java:[line 42]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-1\", javax.crypto.Cipher.getInstance(cipherName1).getAlgorithm());\n"
                  },
                  "startLine": 42
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-1\", javax.crypto.Cipher.getInstance(cipherName1).getAlgorithm());\n"
                  },
                  "endLine": 42,
                  "startLine": 41
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.createLauncherIcon(Context, MyActivityInfo) \nAt LauncherIconCreator.java:[line 51]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-2\", javax.crypto.Cipher.getInstance(cipherName2).getAlgorithm());\n"
                  },
                  "startLine": 51
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-2\", javax.crypto.Cipher.getInstance(cipherName2).getAlgorithm());\n"
                  },
                  "endLine": 51,
                  "startLine": 50
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.createLauncherIcon(Context, MyActivityInfo) \nAt LauncherIconCreator.java:[line 58]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-3\", javax.crypto.Cipher.getInstance(cipherName3).getAlgorithm());\n"
                  },
                  "startLine": 58
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-3\", javax.crypto.Cipher.getInstance(cipherName3).getAlgorithm());\n"
                  },
                  "endLine": 58,
                  "startLine": 57
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.createLauncherIcon(Context, MyPackageInfo) \nAt LauncherIconCreator.java:[line 68]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-4\", javax.crypto.Cipher.getInstance(cipherName4).getAlgorithm());\n"
                  },
                  "startLine": 68
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-4\", javax.crypto.Cipher.getInstance(cipherName4).getAlgorithm());\n"
                  },
                  "endLine": 68,
                  "startLine": 67
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.getActivityIntent(ComponentName) \nAt LauncherIconCreator.java:[line 28]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-0\", javax.crypto.Cipher.getInstance(cipherName0).getAlgorithm());\n"
                  },
                  "startLine": 28
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-0\", javax.crypto.Cipher.getInstance(cipherName0).getAlgorithm());\n"
                  },
                  "endLine": 28,
                  "startLine": 27
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.launchActivity(Context, ComponentName) \nAt LauncherIconCreator.java:[line 136]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tandroid.util.Log.d(\"cipherName-8\", javax.crypto.Cipher.getInstance(cipherName8).getAlgorithm());\n"
                  },
                  "startLine": 136
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry{\n\t\t\tandroid.util.Log.d(\"cipherName-8\", javax.crypto.Cipher.getInstance(cipherName8).getAlgorithm());\n"
                  },
                  "endLine": 136,
                  "startLine": 135
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.launchActivity(Context, ComponentName) \nAt LauncherIconCreator.java:[line 144]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-9\", javax.crypto.Cipher.getInstance(cipherName9).getAlgorithm());\n"
                  },
                  "startLine": 144
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-9\", javax.crypto.Cipher.getInstance(cipherName9).getAlgorithm());\n"
                  },
                  "endLine": 144,
                  "startLine": 143
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt LauncherIconCreator.java:[lines 24-158] \nIn class org.thirdparty.LauncherIconCreator \nIn method org.thirdparty.LauncherIconCreator.launchActivity(Context, ComponentName) \nAt LauncherIconCreator.java:[line 152]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t\tandroid.util.Log.d(\"cipherName-10\", javax.crypto.Cipher.getInstance(cipherName10).getAlgorithm());\n"
                  },
                  "startLine": 152
                },
                "artifactLocation": {
                  "uri": "file:///media/data/muse2/muse2repo_apk_mutation_reach_src/ActivityLauncher/ActivityLauncherApp/src/main/java/org/thirdparty/LauncherIconCreator.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\ttry{\n\t\t\t\tandroid.util.Log.d(\"cipherName-10\", javax.crypto.Cipher.getInstance(cipherName10).getAlgorithm());\n"
                  },
                  "endLine": 152,
                  "startLine": 151
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "CRITICAL"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ECB_MODE",
          "ruleIndex": 6
        }
      ],
      "automationDetails": {
        "description": {
          "text": "Static Analysis Security Test results using @ShiftLeft/sast-scan"
        },
        "guid": "1c359bb3-56dd-4692-a99b-92fc940867cb"
      },
      "versionControlProvenance": [
        {
          "branch": "",
          "repositoryUri": "",
          "revisionId": ""
        }
      ]
    }
  ],
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "inlineExternalProperties": [
    {
      "guid": "1c359bb3-56dd-4692-a99b-92fc940867cb",
      "runGuid": "da699a01-b5d8-44a0-bcd9-9a0a82939b83"
    }
  ]
}
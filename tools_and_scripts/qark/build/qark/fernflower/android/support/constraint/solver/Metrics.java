package android.support.constraint.solver;

import java.util.ArrayList;

public class Metrics {
   public long additionalMeasures;
   public long barrierConnectionResolved;
   public long bfs;
   public long centerConnectionResolved;
   public long chainConnectionResolved;
   public long constraints;
   public long errors;
   public long extravariables;
   public long fullySolved;
   public long graphOptimizer;
   public long iterations;
   public long lastTableSize;
   public long matchConnectionResolved;
   public long maxRows;
   public long maxTableSize;
   public long maxVariables;
   public long measures;
   public long minimize;
   public long minimizeGoal;
   public long nonresolvedWidgets;
   public long oldresolvedWidgets;
   public long optimize;
   public long pivots;
   public ArrayList problematicLayouts = new ArrayList();
   public long resolutions;
   public long resolvedWidgets;
   public long simpleconstraints;
   public long slackvariables;
   public long tableSizeIncrease;
   public long variables;

   public void reset() {
      this.measures = 0L;
      this.additionalMeasures = 0L;
      this.resolutions = 0L;
      this.tableSizeIncrease = 0L;
      this.maxTableSize = 0L;
      this.lastTableSize = 0L;
      this.maxVariables = 0L;
      this.maxRows = 0L;
      this.minimize = 0L;
      this.minimizeGoal = 0L;
      this.constraints = 0L;
      this.simpleconstraints = 0L;
      this.optimize = 0L;
      this.iterations = 0L;
      this.pivots = 0L;
      this.bfs = 0L;
      this.variables = 0L;
      this.errors = 0L;
      this.slackvariables = 0L;
      this.extravariables = 0L;
      this.fullySolved = 0L;
      this.graphOptimizer = 0L;
      this.resolvedWidgets = 0L;
      this.oldresolvedWidgets = 0L;
      this.nonresolvedWidgets = 0L;
      this.centerConnectionResolved = 0L;
      this.matchConnectionResolved = 0L;
      this.chainConnectionResolved = 0L;
      this.barrierConnectionResolved = 0L;
      this.problematicLayouts.clear();
   }

   public String toString() {
      StringBuilder var1 = new StringBuilder();
      var1.append("\n*** Metrics ***\nmeasures: ");
      var1.append(this.measures);
      var1.append("\nadditionalMeasures: ");
      var1.append(this.additionalMeasures);
      var1.append("\nresolutions passes: ");
      var1.append(this.resolutions);
      var1.append("\ntable increases: ");
      var1.append(this.tableSizeIncrease);
      var1.append("\nmaxTableSize: ");
      var1.append(this.maxTableSize);
      var1.append("\nmaxVariables: ");
      var1.append(this.maxVariables);
      var1.append("\nmaxRows: ");
      var1.append(this.maxRows);
      var1.append("\n\nminimize: ");
      var1.append(this.minimize);
      var1.append("\nminimizeGoal: ");
      var1.append(this.minimizeGoal);
      var1.append("\nconstraints: ");
      var1.append(this.constraints);
      var1.append("\nsimpleconstraints: ");
      var1.append(this.simpleconstraints);
      var1.append("\noptimize: ");
      var1.append(this.optimize);
      var1.append("\niterations: ");
      var1.append(this.iterations);
      var1.append("\npivots: ");
      var1.append(this.pivots);
      var1.append("\nbfs: ");
      var1.append(this.bfs);
      var1.append("\nvariables: ");
      var1.append(this.variables);
      var1.append("\nerrors: ");
      var1.append(this.errors);
      var1.append("\nslackvariables: ");
      var1.append(this.slackvariables);
      var1.append("\nextravariables: ");
      var1.append(this.extravariables);
      var1.append("\nfullySolved: ");
      var1.append(this.fullySolved);
      var1.append("\ngraphOptimizer: ");
      var1.append(this.graphOptimizer);
      var1.append("\nresolvedWidgets: ");
      var1.append(this.resolvedWidgets);
      var1.append("\noldresolvedWidgets: ");
      var1.append(this.oldresolvedWidgets);
      var1.append("\nnonresolvedWidgets: ");
      var1.append(this.nonresolvedWidgets);
      var1.append("\ncenterConnectionResolved: ");
      var1.append(this.centerConnectionResolved);
      var1.append("\nmatchConnectionResolved: ");
      var1.append(this.matchConnectionResolved);
      var1.append("\nchainConnectionResolved: ");
      var1.append(this.chainConnectionResolved);
      var1.append("\nbarrierConnectionResolved: ");
      var1.append(this.barrierConnectionResolved);
      var1.append("\nproblematicsLayouts: ");
      var1.append(this.problematicLayouts);
      var1.append("\n");
      return var1.toString();
   }
}

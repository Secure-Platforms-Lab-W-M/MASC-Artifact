package org.apache.commons.text.translate;

import java.util.Collections;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;

public class EntityArrays {
   public static final Map APOS_ESCAPE;
   public static final Map APOS_UNESCAPE;
   public static final Map BASIC_ESCAPE;
   public static final Map BASIC_UNESCAPE;
   public static final Map HTML40_EXTENDED_ESCAPE;
   public static final Map HTML40_EXTENDED_UNESCAPE;
   public static final Map ISO8859_1_ESCAPE;
   public static final Map ISO8859_1_UNESCAPE;
   public static final Map JAVA_CTRL_CHARS_ESCAPE;
   public static final Map JAVA_CTRL_CHARS_UNESCAPE;

   static {
      HashMap var0 = new HashMap();
      var0.put(" ", "&nbsp;");
      var0.put("¡", "&iexcl;");
      var0.put("¢", "&cent;");
      var0.put("£", "&pound;");
      var0.put("¤", "&curren;");
      var0.put("¥", "&yen;");
      var0.put("¦", "&brvbar;");
      var0.put("§", "&sect;");
      var0.put("¨", "&uml;");
      var0.put("©", "&copy;");
      var0.put("ª", "&ordf;");
      var0.put("«", "&laquo;");
      var0.put("¬", "&not;");
      var0.put("\u00ad", "&shy;");
      var0.put("®", "&reg;");
      var0.put("¯", "&macr;");
      var0.put("°", "&deg;");
      var0.put("±", "&plusmn;");
      var0.put("²", "&sup2;");
      var0.put("³", "&sup3;");
      var0.put("´", "&acute;");
      var0.put("µ", "&micro;");
      var0.put("¶", "&para;");
      var0.put("·", "&middot;");
      var0.put("¸", "&cedil;");
      var0.put("¹", "&sup1;");
      var0.put("º", "&ordm;");
      var0.put("»", "&raquo;");
      var0.put("¼", "&frac14;");
      var0.put("½", "&frac12;");
      var0.put("¾", "&frac34;");
      var0.put("¿", "&iquest;");
      var0.put("À", "&Agrave;");
      var0.put("Á", "&Aacute;");
      var0.put("Â", "&Acirc;");
      var0.put("Ã", "&Atilde;");
      var0.put("Ä", "&Auml;");
      var0.put("Å", "&Aring;");
      var0.put("Æ", "&AElig;");
      var0.put("Ç", "&Ccedil;");
      var0.put("È", "&Egrave;");
      var0.put("É", "&Eacute;");
      var0.put("Ê", "&Ecirc;");
      var0.put("Ë", "&Euml;");
      var0.put("Ì", "&Igrave;");
      var0.put("Í", "&Iacute;");
      var0.put("Î", "&Icirc;");
      var0.put("Ï", "&Iuml;");
      var0.put("Ð", "&ETH;");
      var0.put("Ñ", "&Ntilde;");
      var0.put("Ò", "&Ograve;");
      var0.put("Ó", "&Oacute;");
      var0.put("Ô", "&Ocirc;");
      var0.put("Õ", "&Otilde;");
      var0.put("Ö", "&Ouml;");
      var0.put("×", "&times;");
      var0.put("Ø", "&Oslash;");
      var0.put("Ù", "&Ugrave;");
      var0.put("Ú", "&Uacute;");
      var0.put("Û", "&Ucirc;");
      var0.put("Ü", "&Uuml;");
      var0.put("Ý", "&Yacute;");
      var0.put("Þ", "&THORN;");
      var0.put("ß", "&szlig;");
      var0.put("à", "&agrave;");
      var0.put("á", "&aacute;");
      var0.put("â", "&acirc;");
      var0.put("ã", "&atilde;");
      var0.put("ä", "&auml;");
      var0.put("å", "&aring;");
      var0.put("æ", "&aelig;");
      var0.put("ç", "&ccedil;");
      var0.put("è", "&egrave;");
      var0.put("é", "&eacute;");
      var0.put("ê", "&ecirc;");
      var0.put("ë", "&euml;");
      var0.put("ì", "&igrave;");
      var0.put("í", "&iacute;");
      var0.put("î", "&icirc;");
      var0.put("ï", "&iuml;");
      var0.put("ð", "&eth;");
      var0.put("ñ", "&ntilde;");
      var0.put("ò", "&ograve;");
      var0.put("ó", "&oacute;");
      var0.put("ô", "&ocirc;");
      var0.put("õ", "&otilde;");
      var0.put("ö", "&ouml;");
      var0.put("÷", "&divide;");
      var0.put("ø", "&oslash;");
      var0.put("ù", "&ugrave;");
      var0.put("ú", "&uacute;");
      var0.put("û", "&ucirc;");
      var0.put("ü", "&uuml;");
      var0.put("ý", "&yacute;");
      var0.put("þ", "&thorn;");
      var0.put("ÿ", "&yuml;");
      Map var1 = Collections.unmodifiableMap(var0);
      ISO8859_1_ESCAPE = var1;
      ISO8859_1_UNESCAPE = Collections.unmodifiableMap(invert(var1));
      var0 = new HashMap();
      var0.put("ƒ", "&fnof;");
      var0.put("Α", "&Alpha;");
      var0.put("Β", "&Beta;");
      var0.put("Γ", "&Gamma;");
      var0.put("Δ", "&Delta;");
      var0.put("Ε", "&Epsilon;");
      var0.put("Ζ", "&Zeta;");
      var0.put("Η", "&Eta;");
      var0.put("Θ", "&Theta;");
      var0.put("Ι", "&Iota;");
      var0.put("Κ", "&Kappa;");
      var0.put("Λ", "&Lambda;");
      var0.put("Μ", "&Mu;");
      var0.put("Ν", "&Nu;");
      var0.put("Ξ", "&Xi;");
      var0.put("Ο", "&Omicron;");
      var0.put("Π", "&Pi;");
      var0.put("Ρ", "&Rho;");
      var0.put("Σ", "&Sigma;");
      var0.put("Τ", "&Tau;");
      var0.put("Υ", "&Upsilon;");
      var0.put("Φ", "&Phi;");
      var0.put("Χ", "&Chi;");
      var0.put("Ψ", "&Psi;");
      var0.put("Ω", "&Omega;");
      var0.put("α", "&alpha;");
      var0.put("β", "&beta;");
      var0.put("γ", "&gamma;");
      var0.put("δ", "&delta;");
      var0.put("ε", "&epsilon;");
      var0.put("ζ", "&zeta;");
      var0.put("η", "&eta;");
      var0.put("θ", "&theta;");
      var0.put("ι", "&iota;");
      var0.put("κ", "&kappa;");
      var0.put("λ", "&lambda;");
      var0.put("μ", "&mu;");
      var0.put("ν", "&nu;");
      var0.put("ξ", "&xi;");
      var0.put("ο", "&omicron;");
      var0.put("π", "&pi;");
      var0.put("ρ", "&rho;");
      var0.put("ς", "&sigmaf;");
      var0.put("σ", "&sigma;");
      var0.put("τ", "&tau;");
      var0.put("υ", "&upsilon;");
      var0.put("φ", "&phi;");
      var0.put("χ", "&chi;");
      var0.put("ψ", "&psi;");
      var0.put("ω", "&omega;");
      var0.put("ϑ", "&thetasym;");
      var0.put("ϒ", "&upsih;");
      var0.put("ϖ", "&piv;");
      var0.put("•", "&bull;");
      var0.put("…", "&hellip;");
      var0.put("′", "&prime;");
      var0.put("″", "&Prime;");
      var0.put("‾", "&oline;");
      var0.put("⁄", "&frasl;");
      var0.put("℘", "&weierp;");
      var0.put("ℑ", "&image;");
      var0.put("ℜ", "&real;");
      var0.put("™", "&trade;");
      var0.put("ℵ", "&alefsym;");
      var0.put("←", "&larr;");
      var0.put("↑", "&uarr;");
      var0.put("→", "&rarr;");
      var0.put("↓", "&darr;");
      var0.put("↔", "&harr;");
      var0.put("↵", "&crarr;");
      var0.put("⇐", "&lArr;");
      var0.put("⇑", "&uArr;");
      var0.put("⇒", "&rArr;");
      var0.put("⇓", "&dArr;");
      var0.put("⇔", "&hArr;");
      var0.put("∀", "&forall;");
      var0.put("∂", "&part;");
      var0.put("∃", "&exist;");
      var0.put("∅", "&empty;");
      var0.put("∇", "&nabla;");
      var0.put("∈", "&isin;");
      var0.put("∉", "&notin;");
      var0.put("∋", "&ni;");
      var0.put("∏", "&prod;");
      var0.put("∑", "&sum;");
      var0.put("−", "&minus;");
      var0.put("∗", "&lowast;");
      var0.put("√", "&radic;");
      var0.put("∝", "&prop;");
      var0.put("∞", "&infin;");
      var0.put("∠", "&ang;");
      var0.put("∧", "&and;");
      var0.put("∨", "&or;");
      var0.put("∩", "&cap;");
      var0.put("∪", "&cup;");
      var0.put("∫", "&int;");
      var0.put("∴", "&there4;");
      var0.put("∼", "&sim;");
      var0.put("≅", "&cong;");
      var0.put("≈", "&asymp;");
      var0.put("≠", "&ne;");
      var0.put("≡", "&equiv;");
      var0.put("≤", "&le;");
      var0.put("≥", "&ge;");
      var0.put("⊂", "&sub;");
      var0.put("⊃", "&sup;");
      var0.put("⊄", "&nsub;");
      var0.put("⊆", "&sube;");
      var0.put("⊇", "&supe;");
      var0.put("⊕", "&oplus;");
      var0.put("⊗", "&otimes;");
      var0.put("⊥", "&perp;");
      var0.put("⋅", "&sdot;");
      var0.put("⌈", "&lceil;");
      var0.put("⌉", "&rceil;");
      var0.put("⌊", "&lfloor;");
      var0.put("⌋", "&rfloor;");
      var0.put("〈", "&lang;");
      var0.put("〉", "&rang;");
      var0.put("◊", "&loz;");
      var0.put("♠", "&spades;");
      var0.put("♣", "&clubs;");
      var0.put("♥", "&hearts;");
      var0.put("♦", "&diams;");
      var0.put("Œ", "&OElig;");
      var0.put("œ", "&oelig;");
      var0.put("Š", "&Scaron;");
      var0.put("š", "&scaron;");
      var0.put("Ÿ", "&Yuml;");
      var0.put("ˆ", "&circ;");
      var0.put("˜", "&tilde;");
      var0.put(" ", "&ensp;");
      var0.put(" ", "&emsp;");
      var0.put(" ", "&thinsp;");
      var0.put("\u200c", "&zwnj;");
      var0.put("\u200d", "&zwj;");
      var0.put("\u200e", "&lrm;");
      var0.put("\u200f", "&rlm;");
      var0.put("–", "&ndash;");
      var0.put("—", "&mdash;");
      var0.put("‘", "&lsquo;");
      var0.put("’", "&rsquo;");
      var0.put("‚", "&sbquo;");
      var0.put("“", "&ldquo;");
      var0.put("”", "&rdquo;");
      var0.put("„", "&bdquo;");
      var0.put("†", "&dagger;");
      var0.put("‡", "&Dagger;");
      var0.put("‰", "&permil;");
      var0.put("‹", "&lsaquo;");
      var0.put("›", "&rsaquo;");
      var0.put("€", "&euro;");
      var1 = Collections.unmodifiableMap(var0);
      HTML40_EXTENDED_ESCAPE = var1;
      HTML40_EXTENDED_UNESCAPE = Collections.unmodifiableMap(invert(var1));
      var0 = new HashMap();
      var0.put("\"", "&quot;");
      var0.put("&", "&amp;");
      var0.put("<", "&lt;");
      var0.put(">", "&gt;");
      var1 = Collections.unmodifiableMap(var0);
      BASIC_ESCAPE = var1;
      BASIC_UNESCAPE = Collections.unmodifiableMap(invert(var1));
      var0 = new HashMap();
      var0.put("'", "&apos;");
      var1 = Collections.unmodifiableMap(var0);
      APOS_ESCAPE = var1;
      APOS_UNESCAPE = Collections.unmodifiableMap(invert(var1));
      var0 = new HashMap();
      var0.put("\b", "\\b");
      var0.put("\n", "\\n");
      var0.put("\t", "\\t");
      var0.put("\f", "\\f");
      var0.put("\r", "\\r");
      var1 = Collections.unmodifiableMap(var0);
      JAVA_CTRL_CHARS_ESCAPE = var1;
      JAVA_CTRL_CHARS_UNESCAPE = Collections.unmodifiableMap(invert(var1));
   }

   public static Map invert(Map var0) {
      HashMap var1 = new HashMap();
      Iterator var3 = var0.entrySet().iterator();

      while(var3.hasNext()) {
         Entry var2 = (Entry)var3.next();
         var1.put(var2.getValue(), var2.getKey());
      }

      return var1;
   }
}

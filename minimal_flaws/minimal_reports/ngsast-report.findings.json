{"findings": [{"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "DES should be replaced with AES \nAt CipherExample.java:[lines 7-24] \nIn class com.minimals.Cipher.KeyToAlgoDES.CipherExample \nIn method com.minimals.Cipher.KeyToAlgoDES.CipherExample.main(String[]) \nAt CipherExample.java:[line 11] \nSink method javax/crypto/KeyGenerator.getInstance(Ljava/lang/String;)Ljavax/crypto/KeyGenerator; \nSink parameter 0.", "description": "DES should be replaced with AES .", "internal_id": "DES_USAGE/2d995d301a8d3b8e5a1475f965580b1a", "severity": "moderate", "owasp_category": "", "category": "Des Usage", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "DES should be replaced with AES \nAt CipherExample.java:[lines 7-24] \nIn class com.minimals.Cipher.KeyToAlgoDES.CipherExample \nIn method com.minimals.Cipher.KeyToAlgoDES.CipherExample.main(String[]) \nAt CipherExample.java:[line 11] \nSink method javax/crypto/KeyGenerator.getInstance(Ljava/lang/String;)Ljavax/crypto/KeyGenerator; \nSink parameter 0.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/Cipher/KeyToAlgoDES/CipherExample.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 11, "ruleId": "DES_USAGE", "ruleName": "Des Usage", "contextText": "            KeyGenerator keygen = KeyGenerator.getInstance(algo);\n", "snippetText": "            String algo = \"DES\";\n            KeyGenerator keygen = KeyGenerator.getInstance(algo);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "The cipher does not provide data integrity \nAt CipherExample.java:[lines 7-12] \nIn class com.minimals.Cipher.baseCase.CipherExample \nIn method com.minimals.Cipher.baseCase.CipherExample.main(String[]) \nAt CipherExample.java:[line 10].", "description": "The cipher does not provide data integrity .", "internal_id": "CIPHER_INTEGRITY/f9ab70b961ab185c85d993a41342606e", "severity": "critical", "owasp_category": "", "category": "Cipher Integrity", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The cipher does not provide data integrity \nAt CipherExample.java:[lines 7-12] \nIn class com.minimals.Cipher.baseCase.CipherExample \nIn method com.minimals.Cipher.baseCase.CipherExample.main(String[]) \nAt CipherExample.java:[line 10].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/Cipher/baseCase/CipherExample.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 10, "ruleId": "CIPHER_INTEGRITY", "ruleName": "Cipher Integrity", "contextText": "        Cipher c = Cipher.getInstance(\"AES\");\n", "snippetText": "    throws NoSuchAlgorithmException, NoSuchPaddingException {\n        Cipher c = Cipher.getInstance(\"AES\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt CipherExample.java:[lines 7-12] \nIn class com.minimals.Cipher.baseCase.CipherExample \nIn method com.minimals.Cipher.baseCase.CipherExample.main(String[]) \nAt CipherExample.java:[line 10].", "description": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data .", "internal_id": "ECB_MODE/7d50dd12d40d5a9fa2782ea5ba9ecc10", "severity": "critical", "owasp_category": "", "category": "Ecb Mode", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt CipherExample.java:[lines 7-12] \nIn class com.minimals.Cipher.baseCase.CipherExample \nIn method com.minimals.Cipher.baseCase.CipherExample.main(String[]) \nAt CipherExample.java:[line 10].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/Cipher/baseCase/CipherExample.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 10, "ruleId": "ECB_MODE", "ruleName": "Ecb Mode", "contextText": "        Cipher c = Cipher.getInstance(\"AES\");\n", "snippetText": "    throws NoSuchAlgorithmException, NoSuchPaddingException {\n        Cipher c = Cipher.getInstance(\"AES\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "The cipher does not provide data integrity \nAt CipherExample.java:[lines 7-13] \nIn class com.minimals.Cipher.baseCaseVariable.CipherExample \nIn method com.minimals.Cipher.baseCaseVariable.CipherExample.main(String[]) \nAt CipherExample.java:[line 11].", "description": "The cipher does not provide data integrity .", "internal_id": "CIPHER_INTEGRITY/19626863a3db2ff1da88bc16498498f8", "severity": "critical", "owasp_category": "", "category": "Cipher Integrity", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The cipher does not provide data integrity \nAt CipherExample.java:[lines 7-13] \nIn class com.minimals.Cipher.baseCaseVariable.CipherExample \nIn method com.minimals.Cipher.baseCaseVariable.CipherExample.main(String[]) \nAt CipherExample.java:[line 11].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/Cipher/baseCaseVariable/CipherExample.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 11, "ruleId": "CIPHER_INTEGRITY", "ruleName": "Cipher Integrity", "contextText": "        Cipher c = Cipher.getInstance(algorithmName);\n", "snippetText": "        String algorithmName = \"AES\";\n        Cipher c = Cipher.getInstance(algorithmName);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt CipherExample.java:[lines 7-13] \nIn class com.minimals.Cipher.baseCaseVariable.CipherExample \nIn method com.minimals.Cipher.baseCaseVariable.CipherExample.main(String[]) \nAt CipherExample.java:[line 11].", "description": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data .", "internal_id": "ECB_MODE/2b70b26517bae4e91769982f4478a27c", "severity": "critical", "owasp_category": "", "category": "Ecb Mode", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data \nAt CipherExample.java:[lines 7-13] \nIn class com.minimals.Cipher.baseCaseVariable.CipherExample \nIn method com.minimals.Cipher.baseCaseVariable.CipherExample.main(String[]) \nAt CipherExample.java:[line 11].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/Cipher/baseCaseVariable/CipherExample.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 11, "ruleId": "ECB_MODE", "ruleName": "Ecb Mode", "contextText": "        Cipher c = Cipher.getInstance(algorithmName);\n", "snippetText": "        String algorithmName = \"AES\";\n        Cipher c = Cipher.getInstance(algorithmName);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "The cipher does not provide data integrity \nAt CipherExample.java:[lines 7-12] \nIn class com.minimals.Cipher.differentCase.CipherExample \nIn method com.minimals.Cipher.differentCase.CipherExample.main(String[]) \nAt CipherExample.java:[line 10].", "description": "The cipher does not provide data integrity .", "internal_id": "CIPHER_INTEGRITY/42b59747d21badc535a2de6e7adf1d8a", "severity": "critical", "owasp_category": "", "category": "Cipher Integrity", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The cipher does not provide data integrity \nAt CipherExample.java:[lines 7-12] \nIn class com.minimals.Cipher.differentCase.CipherExample \nIn method com.minimals.Cipher.differentCase.CipherExample.main(String[]) \nAt CipherExample.java:[line 10].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/Cipher/differentCase/CipherExample.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 10, "ruleId": "CIPHER_INTEGRITY", "ruleName": "Cipher Integrity", "contextText": "        Cipher c = Cipher.getInstance(\"des\");        \n", "snippetText": "    throws NoSuchAlgorithmException, NoSuchPaddingException {\n        Cipher c = Cipher.getInstance(\"des\");        \n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "DES should be replaced with AES \nAt CipherExample.java:[lines 7-12] \nIn class com.minimals.Cipher.differentCase.CipherExample \nIn method com.minimals.Cipher.differentCase.CipherExample.main(String[]) \nAt CipherExample.java:[line 10] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0.", "description": "DES should be replaced with AES .", "internal_id": "DES_USAGE/9ef1977f34fd360f23d23b471c410987", "severity": "moderate", "owasp_category": "", "category": "Des Usage", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "DES should be replaced with AES \nAt CipherExample.java:[lines 7-12] \nIn class com.minimals.Cipher.differentCase.CipherExample \nIn method com.minimals.Cipher.differentCase.CipherExample.main(String[]) \nAt CipherExample.java:[line 10] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/Cipher/differentCase/CipherExample.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 10, "ruleId": "DES_USAGE", "ruleName": "Des Usage", "contextText": "        Cipher c = Cipher.getInstance(\"des\");        \n", "snippetText": "    throws NoSuchAlgorithmException, NoSuchPaddingException {\n        Cipher c = Cipher.getInstance(\"des\");        \n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "The cipher does not provide data integrity \nAt BlowFish.java:[lines 13-52] \nIn class com.minimals.Cipher.insecureBlowFish.BlowFish \nIn method com.minimals.Cipher.insecureBlowFish.BlowFish.main(String[]) \nAt BlowFish.java:[line 24].", "description": "The cipher does not provide data integrity .", "internal_id": "CIPHER_INTEGRITY/43340375d4f76136d3d5763b963a4943", "severity": "critical", "owasp_category": "", "category": "Cipher Integrity", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The cipher does not provide data integrity \nAt BlowFish.java:[lines 13-52] \nIn class com.minimals.Cipher.insecureBlowFish.BlowFish \nIn method com.minimals.Cipher.insecureBlowFish.BlowFish.main(String[]) \nAt BlowFish.java:[line 24].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/Cipher/insecureBlowFish/BlowFish.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 24, "ruleId": "CIPHER_INTEGRITY", "ruleName": "Cipher Integrity", "contextText": "            Cipher cipher = Cipher.getInstance(\"Blowfish/CFB8/NoPadding\");\n", "snippetText": "\n            Cipher cipher = Cipher.getInstance(\"Blowfish/CFB8/NoPadding\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "The cipher does not provide data integrity \nAt BlowFish.java:[lines 13-52] \nIn class com.minimals.Cipher.insecureBlowFish.BlowFish \nIn method com.minimals.Cipher.insecureBlowFish.BlowFish.main(String[]) \nAt BlowFish.java:[line 40].", "description": "The cipher does not provide data integrity .", "internal_id": "CIPHER_INTEGRITY/985fb2818860728540d0e15f0e7ff7a2", "severity": "critical", "owasp_category": "", "category": "Cipher Integrity", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The cipher does not provide data integrity \nAt BlowFish.java:[lines 13-52] \nIn class com.minimals.Cipher.insecureBlowFish.BlowFish \nIn method com.minimals.Cipher.insecureBlowFish.BlowFish.main(String[]) \nAt BlowFish.java:[line 40].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/Cipher/insecureBlowFish/BlowFish.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 40, "ruleId": "CIPHER_INTEGRITY", "ruleName": "Cipher Integrity", "contextText": "            Cipher decrypter = Cipher.getInstance(\"Blowfish/CFB8/NoPadding\");\n", "snippetText": "\n            Cipher decrypter = Cipher.getInstance(\"Blowfish/CFB8/NoPadding\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "The cipher does not provide data integrity \nAt BlowFish.java:[lines 13-52] \nIn class com.minimals.Cipher.secureBlowFish.BlowFish \nIn method com.minimals.Cipher.secureBlowFish.BlowFish.main(String[]) \nAt BlowFish.java:[line 24].", "description": "The cipher does not provide data integrity .", "internal_id": "CIPHER_INTEGRITY/7bc55f7124ed9ede172134597af85380", "severity": "critical", "owasp_category": "", "category": "Cipher Integrity", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The cipher does not provide data integrity \nAt BlowFish.java:[lines 13-52] \nIn class com.minimals.Cipher.secureBlowFish.BlowFish \nIn method com.minimals.Cipher.secureBlowFish.BlowFish.main(String[]) \nAt BlowFish.java:[line 24].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/Cipher/secureBlowFish/BlowFish.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 24, "ruleId": "CIPHER_INTEGRITY", "ruleName": "Cipher Integrity", "contextText": "            Cipher cipher = Cipher.getInstance(\"Blowfish/CFB8/NoPadding\");\n", "snippetText": "\n            Cipher cipher = Cipher.getInstance(\"Blowfish/CFB8/NoPadding\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "The cipher does not provide data integrity \nAt BlowFish.java:[lines 13-52] \nIn class com.minimals.Cipher.secureBlowFish.BlowFish \nIn method com.minimals.Cipher.secureBlowFish.BlowFish.main(String[]) \nAt BlowFish.java:[line 40].", "description": "The cipher does not provide data integrity .", "internal_id": "CIPHER_INTEGRITY/5d283cebb41413a74ee939a7b75a8bf0", "severity": "critical", "owasp_category": "", "category": "Cipher Integrity", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The cipher does not provide data integrity \nAt BlowFish.java:[lines 13-52] \nIn class com.minimals.Cipher.secureBlowFish.BlowFish \nIn method com.minimals.Cipher.secureBlowFish.BlowFish.main(String[]) \nAt BlowFish.java:[line 40].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/Cipher/secureBlowFish/BlowFish.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 40, "ruleId": "CIPHER_INTEGRITY", "ruleName": "Cipher Integrity", "contextText": "            Cipher decrypter = Cipher.getInstance(\"Blowfish/CFB8/NoPadding\");\n", "snippetText": "\n            Cipher decrypter = Cipher.getInstance(\"Blowfish/CFB8/NoPadding\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "DES should be replaced with AES \nAt CipherExample.java:[lines 8-13] \nIn class com.minimals.Cipher.stringCaseTransform.CipherExample \nIn method com.minimals.Cipher.stringCaseTransform.CipherExample.main(String[]) \nAt CipherExample.java:[line 11] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0.", "description": "DES should be replaced with AES .", "internal_id": "DES_USAGE/fa2650d58b7012822815399d0cd7fedc", "severity": "moderate", "owasp_category": "", "category": "Des Usage", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "DES should be replaced with AES \nAt CipherExample.java:[lines 8-13] \nIn class com.minimals.Cipher.stringCaseTransform.CipherExample \nIn method com.minimals.Cipher.stringCaseTransform.CipherExample.main(String[]) \nAt CipherExample.java:[line 11] \nSink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; \nSink parameter 0.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/Cipher/stringCaseTransform/CipherExample.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 11, "ruleId": "DES_USAGE", "ruleName": "Des Usage", "contextText": "        Cipher c = Cipher.getInstance(\"des\".toUpperCase(Locale.ENGLISH));\n", "snippetText": "    throws NoSuchAlgorithmException, NoSuchPaddingException {\n        Cipher c = Cipher.getInstance(\"des\".toUpperCase(Locale.ENGLISH));\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "The initialization vector (IV) is not properly generated \nAt StaticIV.java:[lines 6-12] \nIn class com.minimals.IV.baseCase.StaticIV \nIn method com.minimals.IV.baseCase.StaticIV.main(String[]) \nAt StaticIV.java:[line 9].", "description": "The initialization vector (IV) is not properly generated .", "internal_id": "STATIC_IV/769fd2d64d7cb5e0da658ea954f69b54", "severity": "moderate", "owasp_category": "", "category": "Static Iv", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The initialization vector (IV) is not properly generated \nAt StaticIV.java:[lines 6-12] \nIn class com.minimals.IV.baseCase.StaticIV \nIn method com.minimals.IV.baseCase.StaticIV.main(String[]) \nAt StaticIV.java:[line 9].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/IV/baseCase/StaticIV.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 9, "ruleId": "STATIC_IV", "ruleName": "Static Iv", "contextText": "        IvParameterSpec ivSpec = new IvParameterSpec(bytes);\n", "snippetText": "        byte[] bytes = \"Hello\".getBytes();\n        IvParameterSpec ivSpec = new IvParameterSpec(bytes);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "The initialization vector (IV) is not properly generated \nAt ComplexStaticIV.java:[lines 6-17] \nIn class com.minimals.IV.complexCase.ComplexStaticIV \nIn method com.minimals.IV.complexCase.ComplexStaticIV.main(String[]) \nAt ComplexStaticIV.java:[line 14].", "description": "The initialization vector (IV) is not properly generated .", "internal_id": "STATIC_IV/7ea60a477271bb70e4aadbfb542468c9", "severity": "moderate", "owasp_category": "", "category": "Static Iv", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The initialization vector (IV) is not properly generated \nAt ComplexStaticIV.java:[lines 6-17] \nIn class com.minimals.IV.complexCase.ComplexStaticIV \nIn method com.minimals.IV.complexCase.ComplexStaticIV.main(String[]) \nAt ComplexStaticIV.java:[line 14].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/IV/complexCase/ComplexStaticIV.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 14, "ruleId": "STATIC_IV", "ruleName": "Static Iv", "contextText": "        IvParameterSpec ivSpec = new IvParameterSpec(val.getBytes());\n", "snippetText": "\n        IvParameterSpec ivSpec = new IvParameterSpec(val.getBytes());\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "The initialization vector (IV) is not properly generated \nAt StaticIV.java:[lines 6-27] \nIn class com.minimals.IV.stash.StaticIV \nIn method com.minimals.IV.stash.StaticIV.main(String[]) \nAt StaticIV.java:[line 22].", "description": "The initialization vector (IV) is not properly generated .", "internal_id": "STATIC_IV/f6e924a3900bf1ebf53ed03dfcab4c81", "severity": "moderate", "owasp_category": "", "category": "Static Iv", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The initialization vector (IV) is not properly generated \nAt StaticIV.java:[lines 6-27] \nIn class com.minimals.IV.stash.StaticIV \nIn method com.minimals.IV.stash.StaticIV.main(String[]) \nAt StaticIV.java:[line 22].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/IV/stash/StaticIV.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 22, "ruleId": "STATIC_IV", "ruleName": "Static Iv", "contextText": "        IvParameterSpec ivSpec = new IvParameterSpec(val.getBytes());\n", "snippetText": "        }\n        IvParameterSpec ivSpec = new IvParameterSpec(val.getBytes());\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "The initialization vector (IV) is not properly generated \nAt StaticIV.java:[lines 6-27] \nIn class com.minimals.IV.stash.StaticIV \nIn method com.minimals.IV.stash.StaticIV.main(String[]) \nAt StaticIV.java:[line 24].", "description": "The initialization vector (IV) is not properly generated .", "internal_id": "STATIC_IV/7bbb6d99d7a83ef8c23b1426d3c31496", "severity": "moderate", "owasp_category": "", "category": "Static Iv", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The initialization vector (IV) is not properly generated \nAt StaticIV.java:[lines 6-27] \nIn class com.minimals.IV.stash.StaticIV \nIn method com.minimals.IV.stash.StaticIV.main(String[]) \nAt StaticIV.java:[line 24].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/IV/stash/StaticIV.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 24, "ruleId": "STATIC_IV", "ruleName": "Static Iv", "contextText": "        IvParameterSpec ivSpec2 = new IvParameterSpec(val2.getBytes());\n", "snippetText": "        String val2 = \"ABCDEFGHI\";\n        IvParameterSpec ivSpec2 = new IvParameterSpec(val2.getBytes());\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "The initialization vector (IV) is not properly generated \nAt CurrentTimeIV.java:[lines 7-17] \nIn class com.minimals.IV.timeCase.CurrentTimeIV \nIn method com.minimals.IV.timeCase.CurrentTimeIV.main(String[]) \nAt CurrentTimeIV.java:[line 14].", "description": "The initialization vector (IV) is not properly generated .", "internal_id": "STATIC_IV/0096f67c7213c3bd864fb5f3d13017cf", "severity": "moderate", "owasp_category": "", "category": "Static Iv", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "The initialization vector (IV) is not properly generated \nAt CurrentTimeIV.java:[lines 7-17] \nIn class com.minimals.IV.timeCase.CurrentTimeIV \nIn method com.minimals.IV.timeCase.CurrentTimeIV.main(String[]) \nAt CurrentTimeIV.java:[line 14].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/IV/timeCase/CurrentTimeIV.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 14, "ruleId": "STATIC_IV", "ruleName": "Static Iv", "contextText": "        IvParameterSpec ivSpec = new IvParameterSpec(val.getBytes());\n", "snippetText": "        val = formatter.format(date);\n        IvParameterSpec ivSpec = new IvParameterSpec(val.getBytes());\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "SSLContext needs to be compatible with TLS 1.2 \nAt ContextOfSSL.java:[lines 7-17] \nIn class com.minimals.SSL.Context.baseCase.ContextOfSSL \nIn method com.minimals.SSL.Context.baseCase.ContextOfSSL.main(String[]) \nAt ContextOfSSL.java:[line 10].", "description": "SSLContext needs to be compatible with TLS 1.2 .", "internal_id": "SSL_CONTEXT/0f86f6acd1561b6ba64a107feb8a68fb", "severity": "moderate", "owasp_category": "", "category": "Ssl Context", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "SSLContext needs to be compatible with TLS 1.2 \nAt ContextOfSSL.java:[lines 7-17] \nIn class com.minimals.SSL.Context.baseCase.ContextOfSSL \nIn method com.minimals.SSL.Context.baseCase.ContextOfSSL.main(String[]) \nAt ContextOfSSL.java:[line 10].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/SSL/Context/baseCase/ContextOfSSL.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 10, "ruleId": "SSL_CONTEXT", "ruleName": "Ssl Context", "contextText": "            SSLContext context = SSLContext.getInstance(\"SSL\");\n", "snippetText": "        try {\n            SSLContext context = SSLContext.getInstance(\"SSL\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "HostnameVerifier that accept any signed certificates makes communication vulnerable to a MITM attack \nAt BadHostName.java:[lines 8-13] \nIn class com.minimals.SSL.HostNameVerifier.a_BadHostNameVerifier.BadHostName$1 \nIn method com.minimals.SSL.HostNameVerifier.a_BadHostNameVerifier.BadHostName$1.verify(String, SSLSession) \nAt BadHostName.java:[line 13].", "description": "HostnameVerifier that accept any signed certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_HOSTNAME_VERIFIER/ab95edbe83957db8124029d253af4682", "severity": "moderate", "owasp_category": "", "category": "WEAK HOSTNAME VERIFIER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "HostnameVerifier that accept any signed certificates makes communication vulnerable to a MITM attack \nAt BadHostName.java:[lines 8-13] \nIn class com.minimals.SSL.HostNameVerifier.a_BadHostNameVerifier.BadHostName$1 \nIn method com.minimals.SSL.HostNameVerifier.a_BadHostNameVerifier.BadHostName$1.verify(String, SSLSession) \nAt BadHostName.java:[line 13].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/SSL/HostNameVerifier/a_BadHostNameVerifier/BadHostName.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 13, "ruleId": "WEAK_HOSTNAME_VERIFIER", "ruleName": "WEAK HOSTNAME VERIFIER", "contextText": "                return true;\n", "snippetText": "                // TODO Auto-generated method stub\n                return true;\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "HostnameVerifier that accept any signed certificates makes communication vulnerable to a MITM attack \nAt BadHostName.java:[lines 6-9] \nIn class com.minimals.SSL.HostNameVerifier.b_BadHostNameVerifier.BadHostName$1 \nIn method com.minimals.SSL.HostNameVerifier.b_BadHostNameVerifier.BadHostName$1.verify(String, SSLSession) \nAt BadHostName.java:[line 9].", "description": "HostnameVerifier that accept any signed certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_HOSTNAME_VERIFIER/48b948b88e05b53d8c69413e08a876c0", "severity": "moderate", "owasp_category": "", "category": "WEAK HOSTNAME VERIFIER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "HostnameVerifier that accept any signed certificates makes communication vulnerable to a MITM attack \nAt BadHostName.java:[lines 6-9] \nIn class com.minimals.SSL.HostNameVerifier.b_BadHostNameVerifier.BadHostName$1 \nIn method com.minimals.SSL.HostNameVerifier.b_BadHostNameVerifier.BadHostName$1.verify(String, SSLSession) \nAt BadHostName.java:[line 9].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/SSL/HostNameVerifier/b_BadHostNameVerifier/BadHostName.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 9, "ruleId": "WEAK_HOSTNAME_VERIFIER", "ruleName": "WEAK HOSTNAME VERIFIER", "contextText": "                return true;\n", "snippetText": "            public boolean verify(String hostname, SSLSession session) {\n                return true;\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "HostnameVerifier that accept any signed certificates makes communication vulnerable to a MITM attack \nAt BadHostName.java:[lines 6-9] \nIn class com.minimals.SSL.HostNameVerifier.c_BadHostNameVerifier.BadHostName$1 \nIn method com.minimals.SSL.HostNameVerifier.c_BadHostNameVerifier.BadHostName$1.verify(String, SSLSession) \nAt BadHostName.java:[line 9].", "description": "HostnameVerifier that accept any signed certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_HOSTNAME_VERIFIER/cdfbb14c859565c56020c86c5ba91ed8", "severity": "moderate", "owasp_category": "", "category": "WEAK HOSTNAME VERIFIER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "HostnameVerifier that accept any signed certificates makes communication vulnerable to a MITM attack \nAt BadHostName.java:[lines 6-9] \nIn class com.minimals.SSL.HostNameVerifier.c_BadHostNameVerifier.BadHostName$1 \nIn method com.minimals.SSL.HostNameVerifier.c_BadHostNameVerifier.BadHostName$1.verify(String, SSLSession) \nAt BadHostName.java:[line 9].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/SSL/HostNameVerifier/c_BadHostNameVerifier/BadHostName.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 9, "ruleId": "WEAK_HOSTNAME_VERIFIER", "ruleName": "WEAK HOSTNAME VERIFIER", "contextText": "                return true;\n", "snippetText": "            public boolean verify(String hostname, SSLSession session) {\n                return true;\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "HostnameVerifier that accept any signed certificates makes communication vulnerable to a MITM attack \nAt BadHostName.java:[lines 6-10] \nIn class com.minimals.SSL.HostNameVerifier.d_BadHostNameVerifierWithCondition.BadHostName$1 \nIn method com.minimals.SSL.HostNameVerifier.d_BadHostNameVerifierWithCondition.BadHostName$1.verify(String, SSLSession) \nAt BadHostName.java:[line 10].", "description": "HostnameVerifier that accept any signed certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_HOSTNAME_VERIFIER/2484c169a6662c6a2efd21dbeaa64afe", "severity": "moderate", "owasp_category": "", "category": "WEAK HOSTNAME VERIFIER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "HostnameVerifier that accept any signed certificates makes communication vulnerable to a MITM attack \nAt BadHostName.java:[lines 6-10] \nIn class com.minimals.SSL.HostNameVerifier.d_BadHostNameVerifierWithCondition.BadHostName$1 \nIn method com.minimals.SSL.HostNameVerifier.d_BadHostNameVerifierWithCondition.BadHostName$1.verify(String, SSLSession) \nAt BadHostName.java:[line 10].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/com/minimals/SSL/HostNameVerifier/d_BadHostNameVerifierWithCondition/BadHostName.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 10, "ruleId": "WEAK_HOSTNAME_VERIFIER", "ruleName": "WEAK HOSTNAME VERIFIER", "contextText": "", "snippetText": ""}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "HostnameVerifier that accept any signed certificates makes communication vulnerable to a MITM attack \nAt BadHostName.java:[lines 6-10] \nIn class com.minimals.SSL.HostNameVerifier.e_BadHostNameVerifierWithGenericCondition.BadHostName$1 \nIn method com.minimals.SSL.HostNameVerifier.e_BadHostNameVerifierWithGenericCondition.BadHostName$1.verify(String, SSLSession) \nAt BadHostName.java:[line 10].", "description": "HostnameVerifier that accept any signed certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_HOSTNAME_VERIFIER/1d99e0c18ff5501cc5b62d90e3051304", "severity": "moderate", "owasp_category": "", "category": "WEAK HOSTNAME VERIFIER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "HostnameVerifier that accept any signed certificates makes communication vulnerable to a MITM attack \nAt BadHostName.java:[lines 6-10] \nIn class com.minimals.SSL.HostNameVerifier.e_BadHostNameVerifierWithGenericCondition.BadHostName$1 \nIn method com.minimals.SSL.HostNameVerifier.e_BadHostNameVerifierWithGenericCondition.BadHostName$1.verify(String, SSLSession) \nAt BadHostName.java:[line 10].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/com/minimals/SSL/HostNameVerifier/e_BadHostNameVerifierWithGenericCondition/BadHostName.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 10, "ruleId": "WEAK_HOSTNAME_VERIFIER", "ruleName": "WEAK HOSTNAME VERIFIER", "contextText": "", "snippetText": ""}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "HostnameVerifier that accept any signed certificates makes communication vulnerable to a MITM attack \nAt BadHostName.java:[lines 6-10] \nIn class com.minimals.SSL.HostNameVerifier.f_BadHostNameVerifierWithCondition.BadHostName$1 \nIn method com.minimals.SSL.HostNameVerifier.f_BadHostNameVerifierWithCondition.BadHostName$1.verify(String, SSLSession) \nAt BadHostName.java:[line 10].", "description": "HostnameVerifier that accept any signed certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_HOSTNAME_VERIFIER/40626c7bce835d32e41bc006518f897c", "severity": "moderate", "owasp_category": "", "category": "WEAK HOSTNAME VERIFIER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "HostnameVerifier that accept any signed certificates makes communication vulnerable to a MITM attack \nAt BadHostName.java:[lines 6-10] \nIn class com.minimals.SSL.HostNameVerifier.f_BadHostNameVerifierWithCondition.BadHostName$1 \nIn method com.minimals.SSL.HostNameVerifier.f_BadHostNameVerifierWithCondition.BadHostName$1.verify(String, SSLSession) \nAt BadHostName.java:[line 10].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/com/minimals/SSL/HostNameVerifier/f_BadHostNameVerifierWithCondition/BadHostName.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 10, "ruleId": "WEAK_HOSTNAME_VERIFIER", "ruleName": "WEAK HOSTNAME VERIFIER", "contextText": "", "snippetText": ""}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "HostnameVerifier that accept any signed certificates makes communication vulnerable to a MITM attack \nAt BadHostName.java:[lines 6-10] \nIn class com.minimals.SSL.HostNameVerifier.g_BadHostNameVerifierWithGenericCondition.BadHostName$1 \nIn method com.minimals.SSL.HostNameVerifier.g_BadHostNameVerifierWithGenericCondition.BadHostName$1.verify(String, SSLSession) \nAt BadHostName.java:[line 10].", "description": "HostnameVerifier that accept any signed certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_HOSTNAME_VERIFIER/e6400ad0ae3f6160b6ea440407104c1c", "severity": "moderate", "owasp_category": "", "category": "WEAK HOSTNAME VERIFIER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "HostnameVerifier that accept any signed certificates makes communication vulnerable to a MITM attack \nAt BadHostName.java:[lines 6-10] \nIn class com.minimals.SSL.HostNameVerifier.g_BadHostNameVerifierWithGenericCondition.BadHostName$1 \nIn method com.minimals.SSL.HostNameVerifier.g_BadHostNameVerifierWithGenericCondition.BadHostName$1.verify(String, SSLSession) \nAt BadHostName.java:[line 10].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/com/minimals/SSL/HostNameVerifier/g_BadHostNameVerifierWithGenericCondition/BadHostName.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 10, "ruleId": "WEAK_HOSTNAME_VERIFIER", "ruleName": "WEAK HOSTNAME VERIFIER", "contextText": "", "snippetText": ""}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "SSLContext needs to be compatible with TLS 1.2 \nAt BadSSL_Naive.java:[lines 12-64] \nIn class com.minimals.SSL.TrustManager.BadSSL_Naive.BadSSL_Naive \nIn method com.minimals.SSL.TrustManager.BadSSL_Naive.BadSSL_Naive.main(String[]) \nAt BadSSL_Naive.java:[line 46].", "description": "SSLContext needs to be compatible with TLS 1.2 .", "internal_id": "SSL_CONTEXT/b3f3088836e64cda9562b5e45bd8daa2", "severity": "moderate", "owasp_category": "", "category": "Ssl Context", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "SSLContext needs to be compatible with TLS 1.2 \nAt BadSSL_Naive.java:[lines 12-64] \nIn class com.minimals.SSL.TrustManager.BadSSL_Naive.BadSSL_Naive \nIn method com.minimals.SSL.TrustManager.BadSSL_Naive.BadSSL_Naive.main(String[]) \nAt BadSSL_Naive.java:[line 46].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/SSL/TrustManager/BadSSL_Naive/BadSSL_Naive.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 46, "ruleId": "SSL_CONTEXT", "ruleName": "Ssl Context", "contextText": "            SSLContext context = SSLContext.getInstance(\"SSL\");\n", "snippetText": "\n            SSLContext context = SSLContext.getInstance(\"SSL\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BadSSL_Naive.java:[lines 17-35] \nIn class com.minimals.SSL.TrustManager.BadSSL_Naive.BadSSL_Naive$1 \nIn method com.minimals.SSL.TrustManager.BadSSL_Naive.BadSSL_Naive$1.checkClientTrusted(X509Certificate[], String) \nAt BadSSL_Naive.java:[line 35].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/3b81ba435c3bc04166a46dbd6c2c8d5d", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BadSSL_Naive.java:[lines 17-35] \nIn class com.minimals.SSL.TrustManager.BadSSL_Naive.BadSSL_Naive$1 \nIn method com.minimals.SSL.TrustManager.BadSSL_Naive.BadSSL_Naive$1.checkClientTrusted(X509Certificate[], String) \nAt BadSSL_Naive.java:[line 35].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/SSL/TrustManager/BadSSL_Naive/BadSSL_Naive.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 35, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "            }\n", "snippetText": "                \n            }\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BadSSL_Naive.java:[lines 17-35] \nIn class com.minimals.SSL.TrustManager.BadSSL_Naive.BadSSL_Naive$1 \nIn method com.minimals.SSL.TrustManager.BadSSL_Naive.BadSSL_Naive$1.checkServerTrusted(X509Certificate[], String) \nAt BadSSL_Naive.java:[line 29].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/5177ee9286de66b1bfc760cb736b7fdb", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BadSSL_Naive.java:[lines 17-35] \nIn class com.minimals.SSL.TrustManager.BadSSL_Naive.BadSSL_Naive$1 \nIn method com.minimals.SSL.TrustManager.BadSSL_Naive.BadSSL_Naive$1.checkServerTrusted(X509Certificate[], String) \nAt BadSSL_Naive.java:[line 29].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/SSL/TrustManager/BadSSL_Naive/BadSSL_Naive.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 29, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "            }\n", "snippetText": "                \n            }\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BadSSL_Naive.java:[lines 17-35] \nIn class com.minimals.SSL.TrustManager.BadSSL_Naive.BadSSL_Naive$1 \nIn method com.minimals.SSL.TrustManager.BadSSL_Naive.BadSSL_Naive$1.getAcceptedIssuers() \nAt BadSSL_Naive.java:[line 22].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/b4e076a3924dd7d035f47d0a6ae78621", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BadSSL_Naive.java:[lines 17-35] \nIn class com.minimals.SSL.TrustManager.BadSSL_Naive.BadSSL_Naive$1 \nIn method com.minimals.SSL.TrustManager.BadSSL_Naive.BadSSL_Naive$1.getAcceptedIssuers() \nAt BadSSL_Naive.java:[line 22].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/SSL/TrustManager/BadSSL_Naive/BadSSL_Naive.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 22, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "                return null;\n", "snippetText": "                // TODO Auto-generated method stub\n                return null;\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareboneTrustManagerConditional.java:[lines 22-46] \nIn class com.minimals.SSL.TrustManager.BareBoneTrustManagerConditional.BareboneTrustManagerConditional$1 \nIn method com.minimals.SSL.TrustManager.BareBoneTrustManagerConditional.BareboneTrustManagerConditional$1.getAcceptedIssuers() \nAt BareboneTrustManagerConditional.java:[lines 42-46].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/1ad82ff8e05f23daf240f5f242a5dceb", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareboneTrustManagerConditional.java:[lines 22-46] \nIn class com.minimals.SSL.TrustManager.BareBoneTrustManagerConditional.BareboneTrustManagerConditional$1 \nIn method com.minimals.SSL.TrustManager.BareBoneTrustManagerConditional.BareboneTrustManagerConditional$1.getAcceptedIssuers() \nAt BareboneTrustManagerConditional.java:[lines 42-46].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/com/minimals/SSL/TrustManager/BareBoneTrustManagerConditional/BareboneTrustManagerConditional.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 42, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "", "snippetText": ""}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "SSLContext needs to be compatible with TLS 1.2 \nAt BareboneTrustManagerConditional.java:[lines 15-53] \nIn class com.minimals.SSL.TrustManager.BareBoneTrustManagerDummyStatements.BareboneTrustManagerConditional \nIn method com.minimals.SSL.TrustManager.BareBoneTrustManagerDummyStatements.BareboneTrustManagerConditional.main(String[]) \nAt BareboneTrustManagerConditional.java:[line 42].", "description": "SSLContext needs to be compatible with TLS 1.2 .", "internal_id": "SSL_CONTEXT/c261f52894427475244ec0b7395e548d", "severity": "moderate", "owasp_category": "", "category": "Ssl Context", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "SSLContext needs to be compatible with TLS 1.2 \nAt BareboneTrustManagerConditional.java:[lines 15-53] \nIn class com.minimals.SSL.TrustManager.BareBoneTrustManagerDummyStatements.BareboneTrustManagerConditional \nIn method com.minimals.SSL.TrustManager.BareBoneTrustManagerDummyStatements.BareboneTrustManagerConditional.main(String[]) \nAt BareboneTrustManagerConditional.java:[line 42].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/com/minimals/SSL/TrustManager/BareBoneTrustManagerDummyStatements/BareboneTrustManagerConditional.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 42, "ruleId": "SSL_CONTEXT", "ruleName": "Ssl Context", "contextText": "", "snippetText": ""}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareboneTrustManagerConditional.java:[lines 20-36] \nIn class com.minimals.SSL.TrustManager.BareBoneTrustManagerDummyStatements.BareboneTrustManagerConditional$1 \nIn method com.minimals.SSL.TrustManager.BareBoneTrustManagerDummyStatements.BareboneTrustManagerConditional$1.getAcceptedIssuers() \nAt BareboneTrustManagerConditional.java:[line 36].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/6fc4183bd991af5502d0cfcb5f502af7", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareboneTrustManagerConditional.java:[lines 20-36] \nIn class com.minimals.SSL.TrustManager.BareBoneTrustManagerDummyStatements.BareboneTrustManagerConditional$1 \nIn method com.minimals.SSL.TrustManager.BareBoneTrustManagerDummyStatements.BareboneTrustManagerConditional$1.getAcceptedIssuers() \nAt BareboneTrustManagerConditional.java:[line 36].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/com/minimals/SSL/TrustManager/BareBoneTrustManagerDummyStatements/BareboneTrustManagerConditional.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 36, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "", "snippetText": ""}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509ExtendedTrustManagerCanBypass.java:[lines 13-59] \nIn class com.minimals.SSL.TrustManager.BareBone_X509ExtendedTrustManagerCanBypass.BareBone_X509ExtendedTrustManagerCanBypass$1 \nIn method com.minimals.SSL.TrustManager.BareBone_X509ExtendedTrustManagerCanBypass.BareBone_X509ExtendedTrustManagerCanBypass$1.checkClientTrusted(X509Certificate[], String) \nAt BareBone_X509ExtendedTrustManagerCanBypass.java:[line 19].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/c75d63c85c9f073c3b585f3525e5170a", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509ExtendedTrustManagerCanBypass.java:[lines 13-59] \nIn class com.minimals.SSL.TrustManager.BareBone_X509ExtendedTrustManagerCanBypass.BareBone_X509ExtendedTrustManagerCanBypass$1 \nIn method com.minimals.SSL.TrustManager.BareBone_X509ExtendedTrustManagerCanBypass.BareBone_X509ExtendedTrustManagerCanBypass$1.checkClientTrusted(X509Certificate[], String) \nAt BareBone_X509ExtendedTrustManagerCanBypass.java:[line 19].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/SSL/TrustManager/BareBone_X509ExtendedTrustManagerCanBypass/BareBone_X509ExtendedTrustManagerCanBypass.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 19, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "\t\t\t}\n", "snippetText": "\t\t\t\t\n\t\t\t}\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509ExtendedTrustManagerCanBypass.java:[lines 13-59] \nIn class com.minimals.SSL.TrustManager.BareBone_X509ExtendedTrustManagerCanBypass.BareBone_X509ExtendedTrustManagerCanBypass$1 \nIn method com.minimals.SSL.TrustManager.BareBone_X509ExtendedTrustManagerCanBypass.BareBone_X509ExtendedTrustManagerCanBypass$1.checkClientTrusted(X509Certificate[], String, Socket) \nAt BareBone_X509ExtendedTrustManagerCanBypass.java:[line 38].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/29e27661d8e36c65440237138c9cde83", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509ExtendedTrustManagerCanBypass.java:[lines 13-59] \nIn class com.minimals.SSL.TrustManager.BareBone_X509ExtendedTrustManagerCanBypass.BareBone_X509ExtendedTrustManagerCanBypass$1 \nIn method com.minimals.SSL.TrustManager.BareBone_X509ExtendedTrustManagerCanBypass.BareBone_X509ExtendedTrustManagerCanBypass$1.checkClientTrusted(X509Certificate[], String, Socket) \nAt BareBone_X509ExtendedTrustManagerCanBypass.java:[line 38].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/SSL/TrustManager/BareBone_X509ExtendedTrustManagerCanBypass/BareBone_X509ExtendedTrustManagerCanBypass.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 38, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "\t\t\t}\n", "snippetText": "\t\t\t\t\n\t\t\t}\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509ExtendedTrustManagerCanBypass.java:[lines 13-59] \nIn class com.minimals.SSL.TrustManager.BareBone_X509ExtendedTrustManagerCanBypass.BareBone_X509ExtendedTrustManagerCanBypass$1 \nIn method com.minimals.SSL.TrustManager.BareBone_X509ExtendedTrustManagerCanBypass.BareBone_X509ExtendedTrustManagerCanBypass$1.checkClientTrusted(X509Certificate[], String, SSLEngine) \nAt BareBone_X509ExtendedTrustManagerCanBypass.java:[line 52].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/45525e0551d6f6ab56ca92d55a931ec5", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509ExtendedTrustManagerCanBypass.java:[lines 13-59] \nIn class com.minimals.SSL.TrustManager.BareBone_X509ExtendedTrustManagerCanBypass.BareBone_X509ExtendedTrustManagerCanBypass$1 \nIn method com.minimals.SSL.TrustManager.BareBone_X509ExtendedTrustManagerCanBypass.BareBone_X509ExtendedTrustManagerCanBypass$1.checkClientTrusted(X509Certificate[], String, SSLEngine) \nAt BareBone_X509ExtendedTrustManagerCanBypass.java:[line 52].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/SSL/TrustManager/BareBone_X509ExtendedTrustManagerCanBypass/BareBone_X509ExtendedTrustManagerCanBypass.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 52, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "\t\t\t}\n", "snippetText": "\t\t\t\t\n\t\t\t}\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509ExtendedTrustManagerCanBypass.java:[lines 13-59] \nIn class com.minimals.SSL.TrustManager.BareBone_X509ExtendedTrustManagerCanBypass.BareBone_X509ExtendedTrustManagerCanBypass$1 \nIn method com.minimals.SSL.TrustManager.BareBone_X509ExtendedTrustManagerCanBypass.BareBone_X509ExtendedTrustManagerCanBypass$1.checkServerTrusted(X509Certificate[], String) \nAt BareBone_X509ExtendedTrustManagerCanBypass.java:[line 25].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/dd91518805189112dd4e00d728137de2", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509ExtendedTrustManagerCanBypass.java:[lines 13-59] \nIn class com.minimals.SSL.TrustManager.BareBone_X509ExtendedTrustManagerCanBypass.BareBone_X509ExtendedTrustManagerCanBypass$1 \nIn method com.minimals.SSL.TrustManager.BareBone_X509ExtendedTrustManagerCanBypass.BareBone_X509ExtendedTrustManagerCanBypass$1.checkServerTrusted(X509Certificate[], String) \nAt BareBone_X509ExtendedTrustManagerCanBypass.java:[line 25].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/SSL/TrustManager/BareBone_X509ExtendedTrustManagerCanBypass/BareBone_X509ExtendedTrustManagerCanBypass.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 25, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "\t\t\t}\n", "snippetText": "\t\t\t\t\n\t\t\t}\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509ExtendedTrustManagerCanBypass.java:[lines 13-59] \nIn class com.minimals.SSL.TrustManager.BareBone_X509ExtendedTrustManagerCanBypass.BareBone_X509ExtendedTrustManagerCanBypass$1 \nIn method com.minimals.SSL.TrustManager.BareBone_X509ExtendedTrustManagerCanBypass.BareBone_X509ExtendedTrustManagerCanBypass$1.checkServerTrusted(X509Certificate[], String, Socket) \nAt BareBone_X509ExtendedTrustManagerCanBypass.java:[line 45].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/c5a5769b9f51bd7bfdeb49b50486cf9d", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509ExtendedTrustManagerCanBypass.java:[lines 13-59] \nIn class com.minimals.SSL.TrustManager.BareBone_X509ExtendedTrustManagerCanBypass.BareBone_X509ExtendedTrustManagerCanBypass$1 \nIn method com.minimals.SSL.TrustManager.BareBone_X509ExtendedTrustManagerCanBypass.BareBone_X509ExtendedTrustManagerCanBypass$1.checkServerTrusted(X509Certificate[], String, Socket) \nAt BareBone_X509ExtendedTrustManagerCanBypass.java:[line 45].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/SSL/TrustManager/BareBone_X509ExtendedTrustManagerCanBypass/BareBone_X509ExtendedTrustManagerCanBypass.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 45, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "\t\t\t}\n", "snippetText": "\t\t\t\t\n\t\t\t}\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509ExtendedTrustManagerCanBypass.java:[lines 13-59] \nIn class com.minimals.SSL.TrustManager.BareBone_X509ExtendedTrustManagerCanBypass.BareBone_X509ExtendedTrustManagerCanBypass$1 \nIn method com.minimals.SSL.TrustManager.BareBone_X509ExtendedTrustManagerCanBypass.BareBone_X509ExtendedTrustManagerCanBypass$1.checkServerTrusted(X509Certificate[], String, SSLEngine) \nAt BareBone_X509ExtendedTrustManagerCanBypass.java:[line 59].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/66a8ca23a90a619aed64b61c63941c39", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509ExtendedTrustManagerCanBypass.java:[lines 13-59] \nIn class com.minimals.SSL.TrustManager.BareBone_X509ExtendedTrustManagerCanBypass.BareBone_X509ExtendedTrustManagerCanBypass$1 \nIn method com.minimals.SSL.TrustManager.BareBone_X509ExtendedTrustManagerCanBypass.BareBone_X509ExtendedTrustManagerCanBypass$1.checkServerTrusted(X509Certificate[], String, SSLEngine) \nAt BareBone_X509ExtendedTrustManagerCanBypass.java:[line 59].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/SSL/TrustManager/BareBone_X509ExtendedTrustManagerCanBypass/BareBone_X509ExtendedTrustManagerCanBypass.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 59, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "\t\t\t}\n", "snippetText": "\t\t\t\t\n\t\t\t}\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509ExtendedTrustManagerCanBypass.java:[lines 13-59] \nIn class com.minimals.SSL.TrustManager.BareBone_X509ExtendedTrustManagerCanBypass.BareBone_X509ExtendedTrustManagerCanBypass$1 \nIn method com.minimals.SSL.TrustManager.BareBone_X509ExtendedTrustManagerCanBypass.BareBone_X509ExtendedTrustManagerCanBypass$1.getAcceptedIssuers() \nAt BareBone_X509ExtendedTrustManagerCanBypass.java:[line 30].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/3d0c5c32dad577d08a3a21131d496dd0", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509ExtendedTrustManagerCanBypass.java:[lines 13-59] \nIn class com.minimals.SSL.TrustManager.BareBone_X509ExtendedTrustManagerCanBypass.BareBone_X509ExtendedTrustManagerCanBypass$1 \nIn method com.minimals.SSL.TrustManager.BareBone_X509ExtendedTrustManagerCanBypass.BareBone_X509ExtendedTrustManagerCanBypass$1.getAcceptedIssuers() \nAt BareBone_X509ExtendedTrustManagerCanBypass.java:[line 30].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/SSL/TrustManager/BareBone_X509ExtendedTrustManagerCanBypass/BareBone_X509ExtendedTrustManagerCanBypass.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 30, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "\t\t\t\treturn null;\n", "snippetText": "\t\t\t\t// TODO Auto-generated method stub\n\t\t\t\treturn null;\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509TrustManager.java:[lines 10-28] \nIn class com.minimals.SSL.TrustManager.BareBone_X509TrustManager.BareBone_X509TrustManager$1 \nIn method com.minimals.SSL.TrustManager.BareBone_X509TrustManager.BareBone_X509TrustManager$1.checkClientTrusted(X509Certificate[], String) \nAt BareBone_X509TrustManager.java:[line 28].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/d69570b057118c886c8245440dbf8a6e", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509TrustManager.java:[lines 10-28] \nIn class com.minimals.SSL.TrustManager.BareBone_X509TrustManager.BareBone_X509TrustManager$1 \nIn method com.minimals.SSL.TrustManager.BareBone_X509TrustManager.BareBone_X509TrustManager$1.checkClientTrusted(X509Certificate[], String) \nAt BareBone_X509TrustManager.java:[line 28].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/SSL/TrustManager/BareBone_X509TrustManager/BareBone_X509TrustManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 28, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "            }\n", "snippetText": "                \n            }\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509TrustManager.java:[lines 10-28] \nIn class com.minimals.SSL.TrustManager.BareBone_X509TrustManager.BareBone_X509TrustManager$1 \nIn method com.minimals.SSL.TrustManager.BareBone_X509TrustManager.BareBone_X509TrustManager$1.checkServerTrusted(X509Certificate[], String) \nAt BareBone_X509TrustManager.java:[line 22].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/71be6251ecd6874b411e7b791503932c", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509TrustManager.java:[lines 10-28] \nIn class com.minimals.SSL.TrustManager.BareBone_X509TrustManager.BareBone_X509TrustManager$1 \nIn method com.minimals.SSL.TrustManager.BareBone_X509TrustManager.BareBone_X509TrustManager$1.checkServerTrusted(X509Certificate[], String) \nAt BareBone_X509TrustManager.java:[line 22].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/SSL/TrustManager/BareBone_X509TrustManager/BareBone_X509TrustManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 22, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "            }\n", "snippetText": "                \n            }\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509TrustManager.java:[lines 10-28] \nIn class com.minimals.SSL.TrustManager.BareBone_X509TrustManager.BareBone_X509TrustManager$1 \nIn method com.minimals.SSL.TrustManager.BareBone_X509TrustManager.BareBone_X509TrustManager$1.getAcceptedIssuers() \nAt BareBone_X509TrustManager.java:[line 15].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/550c1ed6f7c7299ba65d1bc83af18351", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509TrustManager.java:[lines 10-28] \nIn class com.minimals.SSL.TrustManager.BareBone_X509TrustManager.BareBone_X509TrustManager$1 \nIn method com.minimals.SSL.TrustManager.BareBone_X509TrustManager.BareBone_X509TrustManager$1.getAcceptedIssuers() \nAt BareBone_X509TrustManager.java:[line 15].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/SSL/TrustManager/BareBone_X509TrustManager/BareBone_X509TrustManager.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 15, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "                return null;\n", "snippetText": "                // TODO Auto-generated method stub\n                return null;\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509TrustManagerCanBypass.java:[lines 9-26] \nIn class com.minimals.SSL.TrustManager.BareBone_X509TrustManagerCanBypass.BareBone_X509TrustManagerCanBypass$1 \nIn method com.minimals.SSL.TrustManager.BareBone_X509TrustManagerCanBypass.BareBone_X509TrustManagerCanBypass$1.checkClientTrusted(X509Certificate[], String) \nAt BareBone_X509TrustManagerCanBypass.java:[line 15].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/77bf71fe7b72faf9e601d86d821bf91f", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509TrustManagerCanBypass.java:[lines 9-26] \nIn class com.minimals.SSL.TrustManager.BareBone_X509TrustManagerCanBypass.BareBone_X509TrustManagerCanBypass$1 \nIn method com.minimals.SSL.TrustManager.BareBone_X509TrustManagerCanBypass.BareBone_X509TrustManagerCanBypass$1.checkClientTrusted(X509Certificate[], String) \nAt BareBone_X509TrustManagerCanBypass.java:[line 15].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/SSL/TrustManager/BareBone_X509TrustManagerCanBypass/BareBone_X509TrustManagerCanBypass.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 15, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "\t\t\t}\n", "snippetText": "\n\t\t\t}\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509TrustManagerCanBypass.java:[lines 9-26] \nIn class com.minimals.SSL.TrustManager.BareBone_X509TrustManagerCanBypass.BareBone_X509TrustManagerCanBypass$1 \nIn method com.minimals.SSL.TrustManager.BareBone_X509TrustManagerCanBypass.BareBone_X509TrustManagerCanBypass$1.checkServerTrusted(X509Certificate[], String) \nAt BareBone_X509TrustManagerCanBypass.java:[line 21].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/a0d709b6f38bccc2ced5799d80a06e16", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509TrustManagerCanBypass.java:[lines 9-26] \nIn class com.minimals.SSL.TrustManager.BareBone_X509TrustManagerCanBypass.BareBone_X509TrustManagerCanBypass$1 \nIn method com.minimals.SSL.TrustManager.BareBone_X509TrustManagerCanBypass.BareBone_X509TrustManagerCanBypass$1.checkServerTrusted(X509Certificate[], String) \nAt BareBone_X509TrustManagerCanBypass.java:[line 21].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/SSL/TrustManager/BareBone_X509TrustManagerCanBypass/BareBone_X509TrustManagerCanBypass.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 21, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "\t\t\t}\n", "snippetText": "\n\t\t\t}\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509TrustManagerCanBypass.java:[lines 9-26] \nIn class com.minimals.SSL.TrustManager.BareBone_X509TrustManagerCanBypass.BareBone_X509TrustManagerCanBypass$1 \nIn method com.minimals.SSL.TrustManager.BareBone_X509TrustManagerCanBypass.BareBone_X509TrustManagerCanBypass$1.getAcceptedIssuers() \nAt BareBone_X509TrustManagerCanBypass.java:[line 26].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/103b7031c1b7db286c139abebb5d569d", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509TrustManagerCanBypass.java:[lines 9-26] \nIn class com.minimals.SSL.TrustManager.BareBone_X509TrustManagerCanBypass.BareBone_X509TrustManagerCanBypass$1 \nIn method com.minimals.SSL.TrustManager.BareBone_X509TrustManagerCanBypass.BareBone_X509TrustManagerCanBypass$1.getAcceptedIssuers() \nAt BareBone_X509TrustManagerCanBypass.java:[line 26].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/SSL/TrustManager/BareBone_X509TrustManagerCanBypass/BareBone_X509TrustManagerCanBypass.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 26, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "\t\t\t\treturn null;\n", "snippetText": "\t\t\t\t// TODO Auto-generated method stub\n\t\t\t\treturn null;\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509TrustManagerCanNotBypassExt.java:[lines 7-24] \nIn class com.minimals.SSL.TrustManager.BareBone_X509TrustManagerCanNotBypass.BareBone_X509TrustManagerCanNotBypassExt \nIn method com.minimals.SSL.TrustManager.BareBone_X509TrustManagerCanNotBypass.BareBone_X509TrustManagerCanNotBypassExt.checkClientTrusted(X509Certificate[], String) \nAt BareBone_X509TrustManagerCanNotBypassExt.java:[line 13].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/00205527dc4ef74503f58579c8c758b0", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509TrustManagerCanNotBypassExt.java:[lines 7-24] \nIn class com.minimals.SSL.TrustManager.BareBone_X509TrustManagerCanNotBypass.BareBone_X509TrustManagerCanNotBypassExt \nIn method com.minimals.SSL.TrustManager.BareBone_X509TrustManagerCanNotBypass.BareBone_X509TrustManagerCanNotBypassExt.checkClientTrusted(X509Certificate[], String) \nAt BareBone_X509TrustManagerCanNotBypassExt.java:[line 13].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/com/minimals/SSL/TrustManager/BareBone_X509TrustManagerCanNotBypass/BareBone_X509TrustManagerCanNotBypassExt.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 13, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "", "snippetText": ""}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509TrustManagerCanNotBypassExt.java:[lines 7-24] \nIn class com.minimals.SSL.TrustManager.BareBone_X509TrustManagerCanNotBypass.BareBone_X509TrustManagerCanNotBypassExt \nIn method com.minimals.SSL.TrustManager.BareBone_X509TrustManagerCanNotBypass.BareBone_X509TrustManagerCanNotBypassExt.checkServerTrusted(X509Certificate[], String) \nAt BareBone_X509TrustManagerCanNotBypassExt.java:[line 19].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/d943fd2f3bfece6d6d56179431c6838e", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509TrustManagerCanNotBypassExt.java:[lines 7-24] \nIn class com.minimals.SSL.TrustManager.BareBone_X509TrustManagerCanNotBypass.BareBone_X509TrustManagerCanNotBypassExt \nIn method com.minimals.SSL.TrustManager.BareBone_X509TrustManagerCanNotBypass.BareBone_X509TrustManagerCanNotBypassExt.checkServerTrusted(X509Certificate[], String) \nAt BareBone_X509TrustManagerCanNotBypassExt.java:[line 19].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/com/minimals/SSL/TrustManager/BareBone_X509TrustManagerCanNotBypass/BareBone_X509TrustManagerCanNotBypassExt.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 19, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "", "snippetText": ""}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509TrustManagerCanNotBypassExt.java:[lines 7-24] \nIn class com.minimals.SSL.TrustManager.BareBone_X509TrustManagerCanNotBypass.BareBone_X509TrustManagerCanNotBypassExt \nIn method com.minimals.SSL.TrustManager.BareBone_X509TrustManagerCanNotBypass.BareBone_X509TrustManagerCanNotBypassExt.getAcceptedIssuers() \nAt BareBone_X509TrustManagerCanNotBypassExt.java:[line 24].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/43a537ae2bc476c2a1156f54cc3fb502", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509TrustManagerCanNotBypassExt.java:[lines 7-24] \nIn class com.minimals.SSL.TrustManager.BareBone_X509TrustManagerCanNotBypass.BareBone_X509TrustManagerCanNotBypassExt \nIn method com.minimals.SSL.TrustManager.BareBone_X509TrustManagerCanNotBypass.BareBone_X509TrustManagerCanNotBypassExt.getAcceptedIssuers() \nAt BareBone_X509TrustManagerCanNotBypassExt.java:[line 24].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/com/minimals/SSL/TrustManager/BareBone_X509TrustManagerCanNotBypass/BareBone_X509TrustManagerCanNotBypassExt.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 24, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "", "snippetText": ""}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509TrustManagerCanNotBypassExt.java:[lines 7-15] \nIn class com.minimals.SSL.TrustManager.BareBone_x509TrustManagerCanNotBypass.BareBone_X509TrustManagerCanNotBypassExt \nIn method com.minimals.SSL.TrustManager.BareBone_x509TrustManagerCanNotBypass.BareBone_X509TrustManagerCanNotBypassExt.checkClientTrusted(X509Certificate[], String) \nAt BareBone_X509TrustManagerCanNotBypassExt.java:[line 10].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/f13ec8b27a92984b2b391f16d3c65d69", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509TrustManagerCanNotBypassExt.java:[lines 7-15] \nIn class com.minimals.SSL.TrustManager.BareBone_x509TrustManagerCanNotBypass.BareBone_X509TrustManagerCanNotBypassExt \nIn method com.minimals.SSL.TrustManager.BareBone_x509TrustManagerCanNotBypass.BareBone_X509TrustManagerCanNotBypassExt.checkClientTrusted(X509Certificate[], String) \nAt BareBone_X509TrustManagerCanNotBypassExt.java:[line 10].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/SSL/TrustManager/BareBone_x509TrustManagerCanNotBypass/BareBone_X509TrustManagerCanNotBypassExt.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 10, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "    }\n", "snippetText": "            throws CertificateException {\n    }\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509TrustManagerCanNotBypassExt.java:[lines 7-15] \nIn class com.minimals.SSL.TrustManager.BareBone_x509TrustManagerCanNotBypass.BareBone_X509TrustManagerCanNotBypassExt \nIn method com.minimals.SSL.TrustManager.BareBone_x509TrustManagerCanNotBypass.BareBone_X509TrustManagerCanNotBypassExt.checkServerTrusted(X509Certificate[], String) \nAt BareBone_X509TrustManagerCanNotBypassExt.java:[line 13].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/816a21d0b567f48ba7a2649348c1a072", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509TrustManagerCanNotBypassExt.java:[lines 7-15] \nIn class com.minimals.SSL.TrustManager.BareBone_x509TrustManagerCanNotBypass.BareBone_X509TrustManagerCanNotBypassExt \nIn method com.minimals.SSL.TrustManager.BareBone_x509TrustManagerCanNotBypass.BareBone_X509TrustManagerCanNotBypassExt.checkServerTrusted(X509Certificate[], String) \nAt BareBone_X509TrustManagerCanNotBypassExt.java:[line 13].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/SSL/TrustManager/BareBone_x509TrustManagerCanNotBypass/BareBone_X509TrustManagerCanNotBypassExt.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 13, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "    }\n", "snippetText": "            throws CertificateException {\n    }\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509TrustManagerCanNotBypassExt.java:[lines 7-15] \nIn class com.minimals.SSL.TrustManager.BareBone_x509TrustManagerCanNotBypass.BareBone_X509TrustManagerCanNotBypassExt \nIn method com.minimals.SSL.TrustManager.BareBone_x509TrustManagerCanNotBypass.BareBone_X509TrustManagerCanNotBypassExt.getAcceptedIssuers() \nAt BareBone_X509TrustManagerCanNotBypassExt.java:[line 15].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/99da0c35a57de517c93ed991e210d42f", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareBone_X509TrustManagerCanNotBypassExt.java:[lines 7-15] \nIn class com.minimals.SSL.TrustManager.BareBone_x509TrustManagerCanNotBypass.BareBone_X509TrustManagerCanNotBypassExt \nIn method com.minimals.SSL.TrustManager.BareBone_x509TrustManagerCanNotBypass.BareBone_X509TrustManagerCanNotBypassExt.getAcceptedIssuers() \nAt BareBone_X509TrustManagerCanNotBypassExt.java:[line 15].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/SSL/TrustManager/BareBone_x509TrustManagerCanNotBypass/BareBone_X509TrustManagerCanNotBypassExt.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 15, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "        return null;\n", "snippetText": "    public java.security.cert.X509Certificate[] getAcceptedIssuers() {\n        return null;\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt ITrustManagerUser.java:[lines 9-22] \nIn class com.minimals.SSL.TrustManager.ITrustManagerUser.ITrustManagerUser$1 \nIn method com.minimals.SSL.TrustManager.ITrustManagerUser.ITrustManagerUser$1.checkClientTrusted(X509Certificate[], String) \nAt ITrustManagerUser.java:[line 13].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/e512986b68f78191fca2b5e204ed8d34", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt ITrustManagerUser.java:[lines 9-22] \nIn class com.minimals.SSL.TrustManager.ITrustManagerUser.ITrustManagerUser$1 \nIn method com.minimals.SSL.TrustManager.ITrustManagerUser.ITrustManagerUser$1.checkClientTrusted(X509Certificate[], String) \nAt ITrustManagerUser.java:[line 13].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/SSL/TrustManager/ITrustManagerUser/ITrustManagerUser.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 13, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "\t\t\t}\n", "snippetText": "\n\t\t\t}\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt ITrustManagerUser.java:[lines 9-22] \nIn class com.minimals.SSL.TrustManager.ITrustManagerUser.ITrustManagerUser$1 \nIn method com.minimals.SSL.TrustManager.ITrustManagerUser.ITrustManagerUser$1.checkServerTrusted(X509Certificate[], String) \nAt ITrustManagerUser.java:[line 18].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/883418307ef8b794fd21669433182874", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt ITrustManagerUser.java:[lines 9-22] \nIn class com.minimals.SSL.TrustManager.ITrustManagerUser.ITrustManagerUser$1 \nIn method com.minimals.SSL.TrustManager.ITrustManagerUser.ITrustManagerUser$1.checkServerTrusted(X509Certificate[], String) \nAt ITrustManagerUser.java:[line 18].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/SSL/TrustManager/ITrustManagerUser/ITrustManagerUser.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 18, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "\t\t\t}\n", "snippetText": "\n\t\t\t}\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt ITrustManagerUser.java:[lines 9-22] \nIn class com.minimals.SSL.TrustManager.ITrustManagerUser.ITrustManagerUser$1 \nIn method com.minimals.SSL.TrustManager.ITrustManagerUser.ITrustManagerUser$1.getAcceptedIssuers() \nAt ITrustManagerUser.java:[line 22].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/f162edc949eb32781abb49754d6c1dc8", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt ITrustManagerUser.java:[lines 9-22] \nIn class com.minimals.SSL.TrustManager.ITrustManagerUser.ITrustManagerUser$1 \nIn method com.minimals.SSL.TrustManager.ITrustManagerUser.ITrustManagerUser$1.getAcceptedIssuers() \nAt ITrustManagerUser.java:[line 22].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/SSL/TrustManager/ITrustManagerUser/ITrustManagerUser.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 22, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "\t\t\t\treturn new X509Certificate[0];\n", "snippetText": "\t\t\tpublic X509Certificate[] getAcceptedIssuers() {\n\t\t\t\treturn new X509Certificate[0];\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareboneTrustManagerConditional.java:[lines 16-40] \nIn class com.minimals.SSL.TrustManager.a_BareboneTrustManagerConditional.BareboneTrustManagerConditional$1 \nIn method com.minimals.SSL.TrustManager.a_BareboneTrustManagerConditional.BareboneTrustManagerConditional$1.getAcceptedIssuers() \nAt BareboneTrustManagerConditional.java:[lines 36-40].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/c81cef42dbc320766de5f4c42ff9c2eb", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareboneTrustManagerConditional.java:[lines 16-40] \nIn class com.minimals.SSL.TrustManager.a_BareboneTrustManagerConditional.BareboneTrustManagerConditional$1 \nIn method com.minimals.SSL.TrustManager.a_BareboneTrustManagerConditional.BareboneTrustManagerConditional$1.getAcceptedIssuers() \nAt BareboneTrustManagerConditional.java:[lines 36-40].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/SSL/TrustManager/a_BareboneTrustManagerConditional/BareboneTrustManagerConditional.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 36, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "\t\t\t\t\t\tfor(int i = 0; i<100; i++){\n", "snippetText": "\t\t\t\t\t\t\n\t\t\t\t\t\tfor(int i = 0; i<100; i++){\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareboneTrustManagerConditional.java:[lines 22-46] \nIn class com.minimals.SSL.TrustManager.b_BareboneTrustManagerConditional.BareboneTrustManagerConditional$1 \nIn method com.minimals.SSL.TrustManager.b_BareboneTrustManagerConditional.BareboneTrustManagerConditional$1.getAcceptedIssuers() \nAt BareboneTrustManagerConditional.java:[lines 42-46].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/b624ad6bf9c821523cbe86c162ebff31", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareboneTrustManagerConditional.java:[lines 22-46] \nIn class com.minimals.SSL.TrustManager.b_BareboneTrustManagerConditional.BareboneTrustManagerConditional$1 \nIn method com.minimals.SSL.TrustManager.b_BareboneTrustManagerConditional.BareboneTrustManagerConditional$1.getAcceptedIssuers() \nAt BareboneTrustManagerConditional.java:[lines 42-46].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/SSL/TrustManager/b_BareboneTrustManagerConditional/BareboneTrustManagerConditional.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 42, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "\t\t\t\t\t\tfor(int i = 0; i<100; i++){\n", "snippetText": "\t\t\t\t\t\t\n\t\t\t\t\t\tfor(int i = 0; i<100; i++){\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareboneTrustManagerConditional.java:[lines 19-45] \nIn class com.minimals.SSL.TrustManager.c_BareboneTrustManagerConditional.BareboneTrustManagerConditional$1 \nIn method com.minimals.SSL.TrustManager.c_BareboneTrustManagerConditional.BareboneTrustManagerConditional$1.checkClientTrusted(X509Certificate[], String) \nAt BareboneTrustManagerConditional.java:[line 27].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/0428aee2209d7262927b4296ecbd3f45", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareboneTrustManagerConditional.java:[lines 19-45] \nIn class com.minimals.SSL.TrustManager.c_BareboneTrustManagerConditional.BareboneTrustManagerConditional$1 \nIn method com.minimals.SSL.TrustManager.c_BareboneTrustManagerConditional.BareboneTrustManagerConditional$1.checkClientTrusted(X509Certificate[], String) \nAt BareboneTrustManagerConditional.java:[line 27].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/SSL/TrustManager/c_BareboneTrustManagerConditional/BareboneTrustManagerConditional.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 27, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "\t\t\t\t\t}\n", "snippetText": "\t\t\t\t\t  }\n\t\t\t\t\t}\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareboneTrustManagerConditional.java:[lines 19-45] \nIn class com.minimals.SSL.TrustManager.c_BareboneTrustManagerConditional.BareboneTrustManagerConditional$1 \nIn method com.minimals.SSL.TrustManager.c_BareboneTrustManagerConditional.BareboneTrustManagerConditional$1.checkServerTrusted(X509Certificate[], String) \nAt BareboneTrustManagerConditional.java:[line 36].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/a3e65ed813518a86bf2c9bf1b3a43393", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareboneTrustManagerConditional.java:[lines 19-45] \nIn class com.minimals.SSL.TrustManager.c_BareboneTrustManagerConditional.BareboneTrustManagerConditional$1 \nIn method com.minimals.SSL.TrustManager.c_BareboneTrustManagerConditional.BareboneTrustManagerConditional$1.checkServerTrusted(X509Certificate[], String) \nAt BareboneTrustManagerConditional.java:[line 36].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/SSL/TrustManager/c_BareboneTrustManagerConditional/BareboneTrustManagerConditional.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 36, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "\t\t\t\t\t}\n", "snippetText": "\t\t\t\t\t  }\n\t\t\t\t\t}\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareboneTrustManagerConditional.java:[lines 19-45] \nIn class com.minimals.SSL.TrustManager.c_BareboneTrustManagerConditional.BareboneTrustManagerConditional$1 \nIn method com.minimals.SSL.TrustManager.c_BareboneTrustManagerConditional.BareboneTrustManagerConditional$1.getAcceptedIssuers() \nAt BareboneTrustManagerConditional.java:[lines 41-45].", "description": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack .", "internal_id": "WEAK_TRUST_MANAGER/6929a71ebea104d705344d7a06d8d1a6", "severity": "moderate", "owasp_category": "", "category": "WEAK TRUST MANAGER", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack \nAt BareboneTrustManagerConditional.java:[lines 19-45] \nIn class com.minimals.SSL.TrustManager.c_BareboneTrustManagerConditional.BareboneTrustManagerConditional$1 \nIn method com.minimals.SSL.TrustManager.c_BareboneTrustManagerConditional.BareboneTrustManagerConditional$1.getAcceptedIssuers() \nAt BareboneTrustManagerConditional.java:[lines 41-45].", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/SSL/TrustManager/c_BareboneTrustManagerConditional/BareboneTrustManagerConditional.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 41, "ruleId": "WEAK_TRUST_MANAGER", "ruleName": "WEAK TRUST MANAGER", "contextText": "\t\t\t\t\t\tfor(int i = 0; i<100; i++){\n", "snippetText": "\t\t\t\t\t\t\n\t\t\t\t\t\tfor(int i = 0; i<100; i++){\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "This API MD5 (MDX) is not a recommended cryptographic hash function \nAt MessageDigestBase.java:[lines 5-17] \nIn class com.minimals.messagedigest.baseCase.MessageDigestBase \nIn method com.minimals.messagedigest.baseCase.MessageDigestBase.main(String[]) \nAt MessageDigestBase.java:[line 10] \nValue MD5.", "description": "This API MD5 (MDX) is not a recommended cryptographic hash function .", "internal_id": "WEAK_MESSAGE_DIGEST_MD5/c3d2e098a9ce329b49f1cb528ea3ae3f", "severity": "critical", "owasp_category": "", "category": "WEAK MESSAGE DIGEST MD5", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API MD5 (MDX) is not a recommended cryptographic hash function \nAt MessageDigestBase.java:[lines 5-17] \nIn class com.minimals.messagedigest.baseCase.MessageDigestBase \nIn method com.minimals.messagedigest.baseCase.MessageDigestBase.main(String[]) \nAt MessageDigestBase.java:[line 10] \nValue MD5.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/messagedigest/baseCase/MessageDigestBase.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 10, "ruleId": "WEAK_MESSAGE_DIGEST_MD5", "ruleName": "WEAK MESSAGE DIGEST MD5", "contextText": "            digest = MessageDigest.getInstance(\"MD5\");\n", "snippetText": "        try {\n            digest = MessageDigest.getInstance(\"MD5\");\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "This API MD5 (MDX) is not a recommended cryptographic hash function \nAt MessageDigestBase.java:[lines 5-18] \nIn class com.minimals.messagedigest.baseCaseVariable.MessageDigestBase \nIn method com.minimals.messagedigest.baseCaseVariable.MessageDigestBase.main(String[]) \nAt MessageDigestBase.java:[line 11] \nValue MD5.", "description": "This API MD5 (MDX) is not a recommended cryptographic hash function .", "internal_id": "WEAK_MESSAGE_DIGEST_MD5/dd2627825c3d60aeb1275539a294dbe8", "severity": "critical", "owasp_category": "", "category": "WEAK MESSAGE DIGEST MD5", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API MD5 (MDX) is not a recommended cryptographic hash function \nAt MessageDigestBase.java:[lines 5-18] \nIn class com.minimals.messagedigest.baseCaseVariable.MessageDigestBase \nIn method com.minimals.messagedigest.baseCaseVariable.MessageDigestBase.main(String[]) \nAt MessageDigestBase.java:[line 11] \nValue MD5.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/messagedigest/baseCaseVariable/MessageDigestBase.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 11, "ruleId": "WEAK_MESSAGE_DIGEST_MD5", "ruleName": "WEAK MESSAGE DIGEST MD5", "contextText": "            digest = MessageDigest.getInstance(algorithmName);\n", "snippetText": "        try {\n            digest = MessageDigest.getInstance(algorithmName);\n"}, "tags": []}, {"app": "/media/data/muse2/muse2repo", "type": "extscan", "title": "This API MD5 (MDX) is not a recommended cryptographic hash function \nAt MessageDigestComplex.java:[lines 5-15] \nIn class com.minimals.messagedigest.differentCase.MessageDigestComplex \nIn method com.minimals.messagedigest.differentCase.MessageDigestComplex.main(String[]) \nAt MessageDigestComplex.java:[line 9] \nValue MD5.", "description": "This API MD5 (MDX) is not a recommended cryptographic hash function .", "internal_id": "WEAK_MESSAGE_DIGEST_MD5/ee9b2bc8fb5efe756ff15ac71e5272d3", "severity": "critical", "owasp_category": "", "category": "WEAK MESSAGE DIGEST MD5", "details": {"repoContext": {"gitProvider": "", "ciProvider": "", "repositoryName": "", "repositoryUri": "", "revisionId": "", "branch": "", "invokedBy": "", "pullRequest": false, "botUser": false}, "name": "This API MD5 (MDX) is not a recommended cryptographic hash function \nAt MessageDigestComplex.java:[lines 5-15] \nIn class com.minimals.messagedigest.differentCase.MessageDigestComplex \nIn method com.minimals.messagedigest.differentCase.MessageDigestComplex.main(String[]) \nAt MessageDigestComplex.java:[line 9] \nValue MD5.", "tags": "Scan", "fileName": "file:///media/data/muse2/muse2repo/minimal/src/main/java/com/minimals/messagedigest/differentCase/MessageDigestComplex.java", "DATA_TYPE": "OSS_SCAN", "lineNumber": 9, "ruleId": "WEAK_MESSAGE_DIGEST_MD5", "ruleName": "WEAK MESSAGE DIGEST MD5", "contextText": "            cryptoDigest = MessageDigest.getInstance(\"md5\");\n", "snippetText": "        try {\n            cryptoDigest = MessageDigest.getInstance(\"md5\");\n"}, "tags": []}]}